/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2021 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Database;
using Database.Business;
using Common.Enumerations;
using Data.Database;

namespace Database
{
    public class LoginSSO_TransactionByEmail : LoginSSO_TransactionBaseClass
    {
        public LoginSSO_TransactionByEmail()
        {
            // Set the database in which this table resides.
            // This must be called prior to base.PerformLocalValidation(), 
            // since that process will validate that the appropriate 
            // connection string is set.
            UseDatabase = DatabaseTypeEnum.Client;
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
            if (LoginSSO.EmailId == "")
            {
                string message = "LoginSSO has an invalid EmailId.";
                throw new Exception(message);
            }
        }

        public override void PerformWorkItem()
        {
            base.UseTransaction = false;
            LoginSSO.RetrieveByEmail(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName);
        }
    }
    #region V2-803
    public class RetrieveLoginSSOByUserInfoId_V2 : LoginSSO_TransactionBaseClass
    {
        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }

        public override void PerformWorkItem()
        {
            LoginSSO.RetrieveByUserInfoId(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName);
            
        }
    }

    public class LoginSSO_ValidateGmailIdIdTransaction : LoginSSO_TransactionBaseClass
    {
        public List<b_StoredProcValidationError> StoredProcValidationErrorList { get; set; }
        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }
        public override void PerformWorkItem()
        {
            List<b_StoredProcValidationError> errors = null;
            LoginSSO.ValidateByGmailIdAndMicrosoftId(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName, ref errors);
            StoredProcValidationErrorList = errors;
        }
        public override void Postprocess()
        {

        }
    }
    #endregion


}
