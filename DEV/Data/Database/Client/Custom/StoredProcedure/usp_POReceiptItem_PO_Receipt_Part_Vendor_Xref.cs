/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2014 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND. MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Database.SqlClient;
using Database.Business;

namespace Database.StoredProcedure
{

    public class usp_POReceiptItem_PO_Receipt_Part_Vendor_Xref
    {

        private static string STOREDPROCEDURE_NAME = "usp_POReceiptItem_PO_Receipt_Part_Vendor_Xref";


        public usp_POReceiptItem_PO_Receipt_Part_Vendor_Xref()
        {
        }

      
        public static void CallStoredProcedure (
            SqlCommand command,
            long callerUserInfoId,
            string callerUserName,
            b_PurchaseOrder PO,
            b_PurchaseOrderLineItem POLineItem
        )
        {
            SqlParameter        RETURN_CODE_parameter = null;
            int                 retCode = 0;

            // Setup command.
            command.SetProcName(STOREDPROCEDURE_NAME);
            RETURN_CODE_parameter = command.GetReturnCodeParameter();
            command.SetInputParameter(SqlDbType.BigInt, "CallerUserInfoId", callerUserInfoId);
            command.SetStringInputParameter(SqlDbType.NVarChar, "CallerUserName", callerUserName, 256);
            command.SetInputParameter(SqlDbType.BigInt, "ClientId", PO.ClientId);
            command.SetInputParameter(SqlDbType.BigInt, "SiteId", PO.SiteId);
            command.SetInputParameter(SqlDbType.BigInt, "VendorId", PO.VendorId);
            command.SetInputParameter(SqlDbType.BigInt, "PartId", POLineItem.PartId);
            command.SetInputParameter(SqlDbType.Decimal, "UnitCost", POLineItem.UnitCost);
            command.SetStringInputParameter(SqlDbType.NVarChar, "UnitOfMeasure", POLineItem.UnitOfMeasure, 15);
           

            // Execute stored procedure.
            command.ExecuteNonQuery();

           // obj.Part_Vendor_XrefId = (long)command.Parameters["@Part_Vendor_XrefId"].Value;

            // Process the RETURN_CODE parameter value
            retCode = (int) RETURN_CODE_parameter.Value;
            AbstractTransactionManager.CheckReturnCodeStatus(STOREDPROCEDURE_NAME, retCode);
        }
    }
}