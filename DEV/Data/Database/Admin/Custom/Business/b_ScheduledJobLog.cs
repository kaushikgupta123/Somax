/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2012 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */

using System;
using System.Collections;
using System.Text;
using System.Data.SqlClient;
using SOMAX.G4.Data.Database.SqlClient;

namespace SOMAX.G4.Data.Database.Business
{
    /// <summary>
    /// Business object that stores a record from the ScheduledJobLog table.InsertIntoDatabase
    /// </summary>
    public partial class b_ScheduledJobLog : DataBusinessBase
    {


        /// <summary>
        /// Retrieve all ScheduledJobLog table records represented by this object in the database.
        /// </summary>
        /// <param name="connection">SqlConnection containing the database connection</param>
        /// <param name="transaction">SqlTransaction containing the database transaction</param>
        /// <param name="callerUserInfoId">long that identifies the user calling the database</param>
        /// <param name="callerUserName">string that identifies the user calling the database</param>
        /// <param name="data">b_ScheduledJobLog[] that contains the results</param>
        public void RetrieveByConfigIdFromDatabase(
            SqlConnection connection,
            SqlTransaction transaction,
            long callerUserInfoId,
      string callerUserName,
            ref b_ScheduledJobLog[] data
        )
        {
            SOMAX.G4.Data.Database.SqlClient.ProcessRow<b_ScheduledJobLog> processRow = null;
            ArrayList results = null;
            SqlCommand command = null;
            string message = String.Empty;

            // Initialize the results
            data = new b_ScheduledJobLog[0];

            try
            {
                // Create the command to use in calling the stored procedures
                command = new SqlCommand();
                command.Connection = connection;
                command.Transaction = transaction;

                // Call the stored procedure to retrieve the data
                processRow = new SOMAX.G4.Data.Database.SqlClient.ProcessRow<b_ScheduledJobLog>(reader => { b_ScheduledJobLog obj = new b_ScheduledJobLog(); obj.LoadFromDatabase(reader); return obj; });
                results = SOMAX.G4.Data.Database.StoredProcedure.usp_ScheduledJobLog_RetrieveByConfigId.CallStoredProcedure(command, processRow, callerUserInfoId, callerUserName, this);

                // Extract the results
                if (null != results)
                {
                    data = (b_ScheduledJobLog[])results.ToArray(typeof(b_ScheduledJobLog));
                }
                else
                {
                    data = new b_ScheduledJobLog[0];
                }

                // Clear the results collection
                if (null != results)
                {
                    results.Clear();
                    results = null;
                }
            }
            finally
            {
                if (null != command)
                {
                    command.Dispose();
                    command = null;
                }
                processRow = null;
                results = null;
                message = String.Empty;
                callerUserInfoId = 0;
                callerUserName = String.Empty;
            }
        }

    }
}
