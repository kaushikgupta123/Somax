/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */

using System;
using System.Data.SqlClient;
//using Database.SqlClient;
using System.Collections.Generic;

namespace Database.Business
{
    /// <summary>
    /// Business object that stores a record from the Login and Client table.
    /// </summary>
    [Serializable()]
    public partial class b_LoginDataSet
    {
        /// <summary>
        /// Default constructor.
        /// </summary>
        public b_LoginDataSet()
        {
            UserName = string.Empty;
            Client = new b_Client();
            LoginInfo = new b_LoginInfo();
        }

        public string UserName {get; set;}
        public Int64 UserInfoIdSSO { get; set; }
        public b_Client Client { get; set; }
        public b_LoginInfo LoginInfo { get; set; }
        public bool IsFound { get; set; }
        public string UserType { get; set; }

        /// <summary>
        /// Retrieve User table records with specified primary key from the database.
        /// </summary>
        /// <param name="connection">SqlConnection containing the database connection</param>
        /// <param name="transaction">SqlTransaction containing the database transaction</param>
        /// <param name="callerId">string that identifies the user calling the database</param>
        /// <param name="key">System.Guid that contains the key to use in the lookup</param>
        /// <param name="data">b_User[] that contains the results</param>
        public void RetrieveByUserNameFromDatabase(
            SqlConnection connection,
            SqlTransaction transaction,
            long callerUserInfoId,
            string callerUserName
        )
        {

            SqlCommand command = null;
            string message = String.Empty;
            List<Object> results = null;

            try
            {
                // Create the command to use in calling the stored procedures
                command = new SqlCommand();
                command.Connection = connection;
                command.Transaction = transaction;

                // Call the stored procedure to retrieve the data
                results = Database.StoredProcedure.usp_LoginData_RetrieveByUserName.CallStoredProcedure(command, callerUserInfoId, callerUserName, this);

                IsFound = true;

                // Extract the results
                if (results.Count > 0 && results[0] != null )
                {
                    Client = (b_Client)results[0];
                }
                else
                {
                    Client = new b_Client();
                    IsFound = false;
                }

                if (results.Count > 1 && results[1] != null)
                {
                    LoginInfo = (b_LoginInfo)results[1];
                }
                else
                {
                    LoginInfo = new b_LoginInfo();
                    IsFound = false;
                }


                // Clear the results collection
                if (null != results)
                {
                    results.Clear();
                    results = null;
                }


            }
            finally
            {
                if (null != command)
                {
                    command.Dispose();
                    command = null;
                }

                message = String.Empty;
                callerUserInfoId = 0;
                callerUserName = String.Empty;
            }
        }

        public void RetrieveByUserNameFromDatabase_V2(
            SqlConnection connection,
            SqlTransaction transaction,
            long callerUserInfoId,
            string callerUserName
        )
        {

            SqlCommand command = null;
            string message = String.Empty;
            List<Object> results = null;

            try
            {
                // Create the command to use in calling the stored procedures
                command = new SqlCommand();
                command.Connection = connection;
                command.Transaction = transaction;

                // Call the stored procedure to retrieve the data
                results = Database.StoredProcedure.usp_LoginData_RetrieveByUserName_V2.CallStoredProcedure(command, callerUserInfoId, callerUserName, this);

                IsFound = true;

                // Extract the results
                if (results.Count > 0 && results[0] != null)
                {
                    Client = (b_Client)results[0];
                }
                else
                {
                    Client = new b_Client();
                    IsFound = false;
                }

                if (results.Count > 1 && results[1] != null)
                {
                    LoginInfo = (b_LoginInfo)results[1];
                }
                else
                {
                    LoginInfo = new b_LoginInfo();
                    IsFound = false;
                }


                // Clear the results collection
                if (null != results)
                {
                    results.Clear();
                    results = null;
                }


            }
            finally
            {
                if (null != command)
                {
                    command.Dispose();
                    command = null;
                }

                message = String.Empty;
                callerUserInfoId = 0;
                callerUserName = String.Empty;
            }
        }
        public void RetrieveByLoginInfoIdFromDatabase_V2(
          SqlConnection connection,
          SqlTransaction transaction,
          long callerUserInfoId,
          string callerUserName
      )
        {

            SqlCommand command = null;
            string message = String.Empty;
            List<Object> results = null;

            try
            {
                // Create the command to use in calling the stored procedures
                command = new SqlCommand();
                command.Connection = connection;
                command.Transaction = transaction;

                // Call the stored procedure to retrieve the data
                results = Database.StoredProcedure.usp_LoginData_RetrieveByLoginInfoId_V2.CallStoredProcedure(command, callerUserInfoId, callerUserName, this);

                IsFound = true;

                // Extract the results
                if (results.Count > 0 && results[0] != null)
                {
                    Client = (b_Client)results[0];
                }
                else
                {
                    Client = new b_Client();
                    IsFound = false;
                }

                if (results.Count > 1 && results[1] != null)
                {
                    LoginInfo = (b_LoginInfo)results[1];
                }
                else
                {
                    LoginInfo = new b_LoginInfo();
                    IsFound = false;
                }


                // Clear the results collection
                if (null != results)
                {
                    results.Clear();
                    results = null;
                }


            }
            finally
            {
                if (null != command)
                {
                    command.Dispose();
                    command = null;
                }

                message = String.Empty;
                callerUserInfoId = 0;
                callerUserName = String.Empty;
            }
        }
        public void RetrieveBySSO(
           SqlConnection connection,
           SqlTransaction transaction,
           long callerUserInfoId,
           string callerUserName
       )
        {

            SqlCommand command = null;
            string message = String.Empty;
            List<Object> results = null;

            try
            {
                // Create the command to use in calling the stored procedures
                command = new SqlCommand();
                command.Connection = connection;
                command.Transaction = transaction;

                // Call the stored procedure to retrieve the data
                results = Database.StoredProcedure.usp_LoginData_RetrieveBySSO.CallStoredProcedure(command, callerUserInfoId, callerUserName, this);

                IsFound = true;

                // Extract the results
                if (results.Count > 0 && results[0] != null)
                {
                    Client = (b_Client)results[0];
                }
                else
                {
                    Client = new b_Client();
                    IsFound = false;
                }

                if (results.Count > 1 && results[1] != null)
                {
                    LoginInfo = (b_LoginInfo)results[1];
                }
                else
                {
                    LoginInfo = new b_LoginInfo();
                    IsFound = false;
                }


                // Clear the results collection
                if (null != results)
                {
                    results.Clear();
                    results = null;
                }


            }
            finally
            {
                if (null != command)
                {
                    command.Dispose();
                    command = null;
                }

                message = String.Empty;
                callerUserInfoId = 0;
                callerUserName = String.Empty;
            }
        }

        /// <summary>
        /// Retrieve login table record from username
        /// </summary>
        /// <param name="connection">SqlConnection containing the database connection</param>
        /// <param name="transaction">SqlTransaction containing the database transaction</param>
        /// <param name="callerUserInfoId">caller user id</param>
        /// <param name="callerUserName">caller user name</param>
        public void RetrieveByAdminUserNameFromDatabase(
            SqlConnection connection,
            SqlTransaction transaction,
            long callerUserInfoId,
            string callerUserName
        )
        {

            SqlCommand command = null;
            string message = String.Empty;
            List<Object> results = null;

            try
            {
                // Create the command to use in calling the stored procedures
                command = new SqlCommand();
                command.Connection = connection;
                command.Transaction = transaction;

                // Call the stored procedure to retrieve the data
                results = Database.StoredProcedure.usp_AdminLoginData_RetrieveByUserName_V2.CallStoredProcedure(command, callerUserInfoId, callerUserName, this);

                IsFound = true;

                // Extract the results
                if (results.Count > 0 && results[0] != null)
                {
                    Client = (b_Client)results[0];
                }
                else
                {
                    Client = new b_Client();
                    IsFound = false;
                }

                if (results.Count > 0 && results[1] != null)
                {
                    LoginInfo = (b_LoginInfo)results[1];
                    IsFound = true;
                }
                else
                {
                    LoginInfo = new b_LoginInfo();
                    IsFound = false;
                }


                // Clear the results collection
                if (null != results)
                {
                    results.Clear();
                    results = null;
                }


            }
            finally
            {
                if (null != command)
                {
                    command.Dispose();
                    command = null;
                }

                message = String.Empty;
                callerUserInfoId = 0;
                callerUserName = String.Empty;
            }
        }

    }
}
