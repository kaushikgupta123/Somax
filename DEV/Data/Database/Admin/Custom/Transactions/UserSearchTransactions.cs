/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Common.Enumerations;
using Database;
using Database.Business;


namespace Data.Database
{
    public class UserSearch_TransactionBaseClass : AbstractTransactionManager
    {
        public UserSearch_TransactionBaseClass()
        {
            UseDatabase = DatabaseTypeEnum.Admin;
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
            if (UserSearch == null)
            {
                string message = "UserSearch has not been set.";
                throw new Exception(message);
            }
        }

        public b_UserSearch UserSearch { get; set; }

        public override void PerformWorkItem()
        {
            // 
        }

        public override void Preprocess()
        {
            // throw new NotImplementedException();
        }

        public override void Postprocess()
        {
            // throw new NotImplementedException();
        }
    }

    /*
RKL Removed 
    public class UserSearch_Retrieve : AbstractTransactionManager
    {
        public UserSearch_Retrieve()
        {
            UseDatabase = Common.Enumerations.DatabaseTypeEnum.Admin;
        }

        public List<b_UserSearch> UserSearchList { get; set; }
        public b_UserSearch UserSeach { get; set; }

        public override void Preprocess()
        {
            //throw new NotImplementedException();
        }

        public override void Postprocess()
        {
            //throw new NotImplementedException();
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }

        public override void PerformWorkItem()
        {
            b_UserSearch[] tmpArray = null;

            UserSeach.RetrieveUserSearch(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName, ref tmpArray);

            UserSearchList = new List<b_UserSearch>();
            foreach (b_UserSearch tmpObj in tmpArray)
            {
                UserSearchList.Add(tmpObj);
            }
        }
    }

*/


    //-----------------------Added By Indusnet Technologies---------------------

    public class UserSearch_RetrieveUserListFromAdmin : AbstractTransactionManager
    {
        public UserSearch_RetrieveUserListFromAdmin()
        {
            UseDatabase = DatabaseTypeEnum.Admin;
        }

        public List<b_UserSearch> UserSearchList { get; set; }
        public b_UserSearch UserSeach { get; set; }

        public override void Preprocess()
        {
            //throw new NotImplementedException();
        }

        public override void Postprocess()
        {
            //throw new NotImplementedException();
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }

        public override void PerformWorkItem()
        {
            List<b_UserSearch> tmpArray = null;
            UserSeach.RetrieveUserListFromAdmin(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName, ref tmpArray);

            UserSearchList = tmpArray;

        }
    }

    public class UserSearch_RetrieveUserByClientAndSite : AbstractTransactionManager
    {
        public UserSearch_RetrieveUserByClientAndSite()
        {
            UseDatabase = DatabaseTypeEnum.Admin;
        }

        public List<b_UserSearch> UserSearchList { get; set; }
        public b_UserSearch UserSeach { get; set; }

        public override void Preprocess()
        {
            //throw new NotImplementedException();
        }

        public override void Postprocess()
        {
            //throw new NotImplementedException();
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }

        public override void PerformWorkItem()
        {
            List<b_UserSearch> tmpArray = null;
            UserSeach.RetrieveUserListByClientAndSite(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName, ref tmpArray);

            UserSearchList = tmpArray;
        }
    }

    public class UserSearch_RetrieveUserSearchListForEnterprise : AbstractTransactionManager
    {
        public UserSearch_RetrieveUserSearchListForEnterprise()
        {
            UseDatabase = DatabaseTypeEnum.Admin;
        }

        public List<b_UserSearch> UserSearchList { get; set; }
        public b_UserSearch UserSeach { get; set; }

        public override void Preprocess()
        {
            //throw new NotImplementedException();
        }

        public override void Postprocess()
        {
            //throw new NotImplementedException();
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }

        public override void PerformWorkItem()
        {
            List<b_UserSearch> tmpArray = null;
            UserSeach.RetrieveUserSearchListForEnterprise(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName, ref tmpArray);

            UserSearchList = tmpArray;
        }        
    }
    public class UserSearch_RetrieveUserSearchListForBasicProfessional : AbstractTransactionManager
    {
        public UserSearch_RetrieveUserSearchListForBasicProfessional()
        {
            UseDatabase = DatabaseTypeEnum.Admin;
        }

        public List<b_UserSearch> UserSearchList { get; set; }
        public b_UserSearch UserSeach { get; set; }

        public override void Preprocess()
        {
            //throw new NotImplementedException();
        }

        public override void Postprocess()
        {
            //throw new NotImplementedException();
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }

        public override void PerformWorkItem()
        {
            List<b_UserSearch> tmpArray = null;
            UserSeach.RetrieveUserSearchListForBasicProfessional(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName, ref tmpArray);

            UserSearchList = tmpArray;
        }
    }
    public class UserSearch_RetrieveUserSearchCraftDetails : AbstractTransactionManager
    {
        public UserSearch_RetrieveUserSearchCraftDetails()
        {
            UseDatabase = DatabaseTypeEnum.Admin;
        }

        public List<b_UserSearch> UserSearchList { get; set; }
        public b_UserSearch UserSeach { get; set; }

        public override void Preprocess()
        {
            //throw new NotImplementedException();
        }

        public override void Postprocess()
        {
            //throw new NotImplementedException();
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }

        public override void PerformWorkItem()
        {
            List<b_UserSearch> tmpArray = null;
            UserSeach.RetrieveUserSearchCraftDetails(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName, ref tmpArray);

            UserSearchList = tmpArray;
        }
    }
    #region V2-962
    public class UserSearch_RetrieveUserSearchListForAdmin : AbstractTransactionManager
    {
        public UserSearch_RetrieveUserSearchListForAdmin()
        {
            UseDatabase = DatabaseTypeEnum.Admin;
        }

        public List<b_UserSearch> UserSearchList { get; set; }
        public b_UserSearch UserSeach { get; set; }

        public override void Preprocess()
        {
            //throw new NotImplementedException();
        }

        public override void Postprocess()
        {
            //throw new NotImplementedException();
        }

        public override void PerformLocalValidation()
        {
            base.PerformLocalValidation();
        }

        public override void PerformWorkItem()
        {
            List<b_UserSearch> tmpArray = null;
            UserSeach.RetrieveUserSearchListForAdmin(this.Connection, this.Transaction, CallerUserInfoId, CallerUserName, ref tmpArray);

            UserSearchList = tmpArray;
        }
    }
    #endregion

    //-----------------------End Added By Indusnet Techlogies-------------------


}
