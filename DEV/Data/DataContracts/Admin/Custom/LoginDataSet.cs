/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Runtime.Serialization;
using Database.Business;
using Database.Transactions;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Site table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class LoginDataSet : DataContractBase 
    {
        public Int64 UserInfoIdSSO { get; set; }
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public LoginDataSet()
        { 
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_LoginDataSet dbObj)
        {
            this.UserName = dbObj.UserName;
            LoginInfo loginInfo = new LoginInfo();
            loginInfo.UpdateFromDatabaseObject(dbObj.LoginInfo);
            this.LoginInfo = loginInfo;
            Client client = new Client();
            client.UpdateFromDatabaseObject(dbObj.Client);
            this.Client = client;
            this.IsFound = dbObj.IsFound;
            this.UserType = dbObj.Client.UserType;
            this.SiteStatus = dbObj.Client.SiteStatus;
            this.ClientStatus = dbObj.Client.Status;
        }

        private void Initialize()
        {
            b_LoginDataSet dbObj = new b_LoginDataSet();
            UpdateFromDatabaseObject(dbObj);
        }

        public b_LoginDataSet ToDatabaseObject()
        {
            b_LoginDataSet dbObj = new b_LoginDataSet();
            dbObj.UserName = this.UserName;
            dbObj.LoginInfo = this.LoginInfo.ToDatabaseObject();
            dbObj.Client = this.Client.ToDatabaseObject();
            dbObj.IsFound = this.IsFound;
            dbObj.UserType = this.UserType;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods


        public void RetrieveByUsername(DatabaseKey dbKey) 
        {
            LoginDataSet_RetrieveByUsername trans = new LoginDataSet_RetrieveByUsername()
			{
				CallerUserInfoId = dbKey.User.UserInfoId,
				CallerUserName = dbKey.UserName
			};
            trans.LoginData = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
             UpdateFromDatabaseObject(trans.LoginData);
        }
        public void RetrieveByUsername_V2(DatabaseKey dbKey)
        {
            LoginDataSet_RetrieveByUsername_V2 trans = new LoginDataSet_RetrieveByUsername_V2()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.LoginData = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.LoginData);
        }
        public void RetrieveByLoginInfoId_V2(DatabaseKey dbKey)
        {
            LoginDataSet_RetrieveByLoginInfoId_V2 trans = new LoginDataSet_RetrieveByLoginInfoId_V2()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.LoginData = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.LoginData);
        }
        public void RetrieveBySSO(DatabaseKey dbKey)
        {
            LoginDataSet_RetrieveBySSO trans = new LoginDataSet_RetrieveBySSO()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.LoginData = this.ToDatabaseObject();
            trans.LoginData.UserInfoIdSSO = this.UserInfoIdSSO;
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.LoginData);
        }
        public void RetrieveByAdminUsername(DatabaseKey dbKey)
        {
            LoginDataSet_RetrieveByAdminUsername trans = new LoginDataSet_RetrieveByAdminUsername()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.LoginData = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.LoginData);
        }
        #endregion

        #region Properties


        /// <summary>
        /// UserName property
        /// </summary>
        [DataMember]
        public string UserName {get; set;}

        /// <summary>
        /// Client property
        /// </summary>
        [DataMember]
        public Client Client { get; set; }

        /// <summary>
        /// LoginInfo property
        /// </summary>
        [DataMember]
        public LoginInfo LoginInfo { get; set; }

        /// <summary>
        /// IsFound property
        /// </summary>
        [DataMember]
        public bool IsFound { get; set; }
        public string UserType{ get; set; }
        public string SiteStatus { get; set; }
        public string ClientStatus { get; set; }
        #endregion
    }
}
