/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */



using System;
using System.Runtime.Serialization;
using Database.Business;
using Database.Transactions;
using System.Collections.Generic;
using Database.Client.Custom.Transactions;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the LoginAuditing table.
    /// </summary>
    public partial class LoginAuditing : DataContractBase
    {
        #region Properties
        /// <summary>
        /// CreateDate property
        /// </summary>
        [DataMember]
        public DateTime CreateDate { get; set; }       
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string UserName { get; set; }
        public Int64 SiteId { get; set; }
        public int CaseNo { get; set; }
        public bool IsEnterprise { get; set; }
        public int TotalRecords { get; set; }
        public string Name { get; set; }
        public int LoginCount { get; set; }
        #region V2-964
        public string order { get; set; }
        public string orderdir { get; set; }
        public int offset { get; set; }
        public int next { get; set; }
        public int TotalCount { get; set; }
        #endregion
        #endregion

        #region Public Methods
        public void UpdateFromExtendedDatabaseObject(b_LoginAuditing dbObj)
        {
            UpdateFromDatabaseObject(dbObj);
            this.CreateDate = dbObj.CreateDate;
        }

        public b_LoginAuditing ToExtendedDatabaseObject()
        {
            b_LoginAuditing dbObj = this.ToDatabaseObject();
            dbObj.CreateDate = this.CreateDate;
            return dbObj;
        } 

        public void RetrieveBySessionId(DatabaseKey dbKey)
        {
            LoginAuditing_RetrieveBySessionId trans = new LoginAuditing_RetrieveBySessionId()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.LoginAuditing = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.LoginAuditing);
        }
        public List<LoginAuditing> RetrieveByUserInfoId(DatabaseKey dbKey)
        {
            LoginAuditing_RetrieveByUserInfoId trans = new LoginAuditing_RetrieveByUserInfoId()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };

            trans.LoginAuditing = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            return UpdateFromDatabaseObjectList(trans.LoginAuditingList);
        }
        public  List<LoginAuditing> UpdateFromDatabaseObjectList(List<b_LoginAuditing> dbObjs)
        {
            List<LoginAuditing> result = new List<LoginAuditing>();

            foreach (b_LoginAuditing dbObj in dbObjs)
            {
                LoginAuditing tmp = new LoginAuditing();
                tmp.UpdateFromDatabaseObject(dbObj);
                {
                    tmp.CreateDate = dbObj.CreateDate;
                    tmp.FirstName = dbObj.FirstName;
                    tmp.LastName = dbObj.LastName;
                    tmp.UserName = dbObj.UserName;                

                }
                result.Add(tmp);
            }
            return result;
        }

        #region RetrieveLoginRecordsCountByCreateDate
        public List<LoginAuditing> RetrieveLoginRecordsCountByCreateDate(DatabaseKey dbKey)
        {
            LoginAuditing_RetrieveLoginRecordsCountByCreateDate trans = new LoginAuditing_RetrieveLoginRecordsCountByCreateDate()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };

            trans.LoginAuditing = this.ToDatabaseObjectRecordsCountByCreateDate();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            return UpdateFromDatabaseObjectRecordsCountByCreateDate(trans.LoginAuditingList);
        }
        public b_LoginAuditing ToDatabaseObjectRecordsCountByCreateDate()
        {
            b_LoginAuditing dbObj = this.ToDatabaseObject();
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.CaseNo = this.CaseNo;
            dbObj.IsEnterprise = this.IsEnterprise;
            return dbObj;
        }
        public List<LoginAuditing> UpdateFromDatabaseObjectRecordsCountByCreateDate(List<b_LoginAuditing> dbObjs)
        {
            List<LoginAuditing> result = new List<LoginAuditing>();

            foreach (b_LoginAuditing dbObj in dbObjs)
            {
                LoginAuditing tmp = new LoginAuditing();
                tmp.UpdateFromDatabaseObject(dbObj);
                {
                    tmp.CreateDate = dbObj.CreateDate;
                    tmp.TotalRecords = dbObj.TotalRecords;
                }
                result.Add(tmp);
            }
            return result;
        }
        #endregion


        #region Retrieve Login Records CountBy User
        public List<LoginAuditing> RetrieveLoginRecordsCountByUser(DatabaseKey dbKey)
        {
            LoginAuditing_RetrieveLoginRecordsCountByUser trans = new LoginAuditing_RetrieveLoginRecordsCountByUser()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };

            trans.LoginAuditing = this.ToDatabaseObjectRecordsCountByUser();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            return UpdateFromDatabaseObjectRecordsCountByUser(trans.LoginAuditRecordsCountList);
        }
        public b_LoginAuditing ToDatabaseObjectRecordsCountByUser()
        {
            b_LoginAuditing dbObj = this.ToDatabaseObject();
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.CaseNo = this.CaseNo;
            dbObj.IsEnterprise = this.IsEnterprise;
            dbObj.Name = this.Name;
            dbObj.LoginCount = this.LoginCount;
            return dbObj;
        }
        public List<LoginAuditing> UpdateFromDatabaseObjectRecordsCountByUser(List<b_LoginAuditing> dbObjs)
        {
            List<LoginAuditing> result = new List<LoginAuditing>();

            foreach (b_LoginAuditing dbObj in dbObjs)
            {
                LoginAuditing tmp = new LoginAuditing();
                tmp.UpdateFromDatabaseObject(dbObj);
                {
                    tmp.Name = dbObj.Name;
                    tmp.LoginCount = dbObj.LoginCount;
                }
                result.Add(tmp);
            }
            return result;
        }
        #endregion

        #region Retrieve Login Auditing Record By Client
        private List<LoginAuditing> UpdateFromDatabaseObjectListByClient(List<b_LoginAuditing> dbObjs)
        {
            List<LoginAuditing> result = new List<LoginAuditing>();

            foreach (b_LoginAuditing dbObj in dbObjs)
            {
                LoginAuditing tmp = new LoginAuditing();
                tmp.UpdateFromExtendedDatabaseObjectByClient(dbObj);
                result.Add(tmp);
            }
            return result;
        }

        public void UpdateFromExtendedDatabaseObjectByClient(b_LoginAuditing dbObj)
        {
            this.UpdateFromDatabaseObject(dbObj);
            this.CreateDate = dbObj.CreateDate;
            this.TotalCount = dbObj.TotalCount;
        }

        public b_LoginAuditing ToExtendedDatabaseObjectByClient()
        {
            b_LoginAuditing dbObj = new b_LoginAuditing();
            dbObj.ClientId = this.ClientId;
            dbObj.OrderBy = this.order;
            dbObj.OrderbyColumn = this.orderdir;
            dbObj.OffSetVal = this.offset;
            dbObj.NextRow = this.next;
            return dbObj;
        }

        public List<LoginAuditing> RetriveByClientId(DatabaseKey dbKey)
        {
            LoginAuditing_RetrieveLoginRecordsByClientId trans = new LoginAuditing_RetrieveLoginRecordsByClientId()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };

            trans.LoginAuditing = ToExtendedDatabaseObjectByClient();
            trans.SearchClientId = this.ClientId;
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            return UpdateFromDatabaseObjectListByClient(trans.LoginAuditRecordsList);
        }
        #endregion

        #endregion


    }
}
