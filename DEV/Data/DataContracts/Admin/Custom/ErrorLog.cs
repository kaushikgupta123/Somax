/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

using SOMAX.G4.Data.Database;
using SOMAX.G4.Data.Database.Business;

namespace SOMAX.G4.Data.DataContracts
{
    /// <summary>
    /// Business object that stores a record from the ErrorLog table.
    /// </summary>
    public partial class ErrorLog : DataContractBase
    {
#region Properties
        public DateTime CreateDate { get; set; }

        public bool IsNotLogged { get; set; }
#endregion

        #region Constructors
        public ErrorLog(Exception ex)
        {
            ErrorMessage = ex.Message;
            Source = ex.Source;
            StackTrace = ex.StackTrace;
            ExceptionType = ex.GetType().FullName;
            TargetSite = ex.TargetSite.ToString();
            CreateDate = DateTime.Now;
            IsNotLogged = true;
            Url = string.Empty;
        }

        public ErrorLog(WebServiceResponseData webServiceResponseData)
        {
            ErrorMessage = webServiceResponseData.Message;
            StackTrace = webServiceResponseData.StackTrace;
            ExceptionType = webServiceResponseData.ExceptionType;
            CreateDate = DateTime.Now;
            IsNotLogged = true;
            Url = string.Empty;
        }
        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey, bool useAdminDatabase) 
        {
            ErrorLog_Create trans = new ErrorLog_Create()
			{
				CallerUserInfoId = dbKey.User.UserInfoId,
				CallerUserName = dbKey.UserName
			};
            trans.ErrorLog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.ErrorLog);
        }


        #endregion
        
    }
}
