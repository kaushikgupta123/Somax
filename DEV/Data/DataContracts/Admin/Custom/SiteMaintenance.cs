/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text;

using Database;
using Database.Business;
using Database.Transactions;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the SiteMaintenance table.
    /// </summary>
    public partial class SiteMaintenance : DataContractBase
    {
        #region property Variables V2-994
        public string OrderbyColumn { get; set; }
        public string OrderBy { get; set; }
        public int OffSetVal { get; set; }
        public int NextRow { get; set; }
        public int TotalCount { get; set; }
        public DateTime CreateDate { get; set; }
        #endregion


        public void RetrieveOutage(DatabaseKey dbKey)
        {
            SiteMaintenance_RetrieveOutage trans = new SiteMaintenance_RetrieveOutage();
            trans.SiteMaintenance = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.SiteMaintenance);
        }

        #region  System Unavailable Message
        public void RetrieveNextSch(DatabaseKey dbKey, string timeZone)
        {
            SiteMaintenance_RetrieveNexcSch trans = new SiteMaintenance_RetrieveNexcSch();
            trans.SiteMaintenance = this.ToDatabaseNewObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromNewDatabaseObject(trans.SiteMaintenance);
        }

        #endregion

        #region System Unavailable Message
        #region Private Variables
        private string _EasternStartTime;
        private string _EasternEndTime;
        private string _TimeZone;
        private string _SameDay;
        #endregion

        #region Properties
        /// <summary>
        /// HeaderText property
        /// </summary>
        [DataMember]
        public string EasternStartTime
        {
            get { return _EasternStartTime; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _EasternStartTime); }
        }

        /// <summary>
        /// MessageText property
        /// </summary>
        [DataMember]
        public string EasternEndTime
        {
            get { return _EasternEndTime; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _EasternEndTime); }
        }

        /// <summary>
        /// MessageText property
        /// </summary>
        [DataMember]
        public string TimeZone
        {
            get { return _TimeZone; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _TimeZone); }
        }

        /// <summary>
        /// MessageText property
        /// </summary>
        [DataMember]
        public string SameDay
        {
            get { return _SameDay; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SameDay); }
        }
        #endregion
        public b_SiteMaintenance ToDatabaseNewObject()
        {
            b_SiteMaintenance dbObj = new b_SiteMaintenance();
            dbObj.SiteMaintenanceId = this.SiteMaintenanceId;
            dbObj.HeaderText = this.HeaderText;
            dbObj.MessageText = this.MessageText;
            dbObj.DowntimeStart = this.DowntimeStart;
            dbObj.DowntimeEnd = this.DowntimeEnd;
            dbObj.LoginPageMessage = this.LoginPageMessage;
            dbObj.DashboardMessage = this.DashboardMessage;
            dbObj.UpdateIndex = this.UpdateIndex;
            dbObj.EasternStartTime = this.EasternEndTime;
            dbObj.EasternEndTime = this.EasternEndTime;
            dbObj.TimeZone = this.TimeZone;
            dbObj.SameDay = this.SameDay;
            return dbObj;
        }

        public void UpdateFromNewDatabaseObject(b_SiteMaintenance dbObj)
        {
            this.SiteMaintenanceId = dbObj.SiteMaintenanceId;
            this.HeaderText = dbObj.HeaderText;
            this.MessageText = dbObj.MessageText;
            this.DowntimeStart = dbObj.DowntimeStart;
            this.DowntimeEnd = dbObj.DowntimeEnd;
            this.LoginPageMessage = dbObj.LoginPageMessage;
            this.DashboardMessage = dbObj.DashboardMessage;
            this.UpdateIndex = dbObj.UpdateIndex;
            this.EasternStartTime = dbObj.EasternStartTime;
            this.EasternEndTime = dbObj.EasternEndTime;
            this.TimeZone = dbObj.TimeZone;
            this.SameDay = dbObj.SameDay;
            // Turn on auditing
            AuditEnabled = true;
        }
        public List<SiteMaintenance> SiteMaintenanceDetailsChunkSearch(DatabaseKey dbKey)
        {
            SiteMaintenance_RetrieveChunkSearchFromDetails trans = new SiteMaintenance_RetrieveChunkSearchFromDetails()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName,
            };
            trans.SiteMaintenance = ToDateBaseObjectExtended();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();


            List<SiteMaintenance> SiteMaintenancelist = new List<SiteMaintenance>();
            foreach (b_SiteMaintenance SiteMaintenance in trans.siteMaintenanceList)
            {
                SiteMaintenance tmpSiteMaintenance = new SiteMaintenance();

                tmpSiteMaintenance.UpdateFromDatabaseObjectExtended(SiteMaintenance);
                SiteMaintenancelist.Add(tmpSiteMaintenance);
            }
            return SiteMaintenancelist;
        }

        public b_SiteMaintenance ToDateBaseObjectExtended()
        {
            b_SiteMaintenance dbObj = this.ToDatabaseObject();
            dbObj.OrderbyColumn = this.OrderbyColumn;
            dbObj.OrderBy = this.OrderBy;
            dbObj.OffSetVal = this.OffSetVal;
            dbObj.NextRow = this.NextRow;

            return dbObj;
        }

        public void UpdateFromDatabaseObjectExtended(b_SiteMaintenance dbObj)
        {
            this.SiteMaintenanceId = dbObj.SiteMaintenanceId;
            this.TotalCount = dbObj.TotalCount;
            this.LoginPageMessage = dbObj.LoginPageMessage;
            this.DowntimeStart = dbObj.DowntimeStart;
            this.DowntimeEnd = dbObj.DowntimeEnd;
            this.CreateDate = dbObj.CreateDate;
        }
        #endregion
    }
}
