/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2012 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using SOMAX.G4.Data.Database;
using SOMAX.G4.Data.Database.Business;

namespace SOMAX.G4.Data.DataContracts
{
    /// <summary>
    /// Business object that stores a record from the ScheduledJobLog table.
    /// </summary>

    public partial class ScheduledJobLog : DataContractBase 
    {
        #region Public Methods
        public List<ScheduledJobLog> UpdateFromDatabaseObjects(List<b_ScheduledJobLog> dbObjs)
        {
            List<ScheduledJobLog> logList = new List<ScheduledJobLog>();

            foreach (b_ScheduledJobLog dbObj in dbObjs)
            {
                ScheduledJobLog log = new ScheduledJobLog();
                log.UpdateFromDatabaseObject(dbObj);

                logList.Add(log);
            }

            return logList;
        }
        #endregion

        #region Transaction Methods
        public List<ScheduledJobLog> RetrieveByConfigId(DatabaseKey dbKey)
        {

            ScheduledJobLog_RetrieveByConfigId trans = new ScheduledJobLog_RetrieveByConfigId();
            trans.ScheduledJobLog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            List<ScheduledJobLog> logList = UpdateFromDatabaseObjects(trans.ScheduledJobLogList);

            return logList;
        }
        #endregion

    }
}
