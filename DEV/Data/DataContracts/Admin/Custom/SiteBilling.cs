/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2023 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;
using Database.Transactions;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the SiteBilling table.
    /// </summary>
    public partial class SiteBilling : DataContractBase 
    {
        #region Properties
        public long CustomClientId { get; set; }
        #endregion
        public void RetrieveSiteBillingByClientIdSiteId_V2(DatabaseKey dbKey)
        {
            RetrieveSiteBillingByClientIdSiteId_V2 trans = new RetrieveSiteBillingByClientIdSiteId_V2();
            trans.SiteBilling = this.ToDatabaseObjectClientIdSiteId();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObjectForClientIdSiteId(trans.SiteBilling);
        }
        public b_SiteBilling ToDatabaseObjectClientIdSiteId()
        {
            b_SiteBilling dbObj = new b_SiteBilling();
            dbObj.CustomClientId = this.CustomClientId;
            dbObj.SiteId = this.SiteId;
            return dbObj;
        }
        public void UpdateFromDatabaseObjectForClientIdSiteId(b_SiteBilling dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.SiteId = dbObj.SiteId;
            this.SiteBillingId = dbObj.SiteBillingId;
            this.AnniversaryDate = dbObj.AnniversaryDate;
            this.InvoiceFreq = dbObj.InvoiceFreq;
            this.Terms = dbObj.Terms;
            this.CurrentInvoice = dbObj.CurrentInvoice;
            this.InvoiceDate = dbObj.InvoiceDate;
            this.NextInvoiceDate = dbObj.NextInvoiceDate;
            this.QuoteRequired = dbObj.QuoteRequired;
        }
        public void CreateSiteBillingWithCustomClientId(DatabaseKey dbKey)
        {
            SiteBilling_CreateWithCustomClientId trans = new SiteBilling_CreateWithCustomClientId();
            trans.SiteBilling = this.ToDatabaseObjectWithCustomClientId();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObjectWithCustomClientId(trans.SiteBilling);
        }
        public b_SiteBilling ToDatabaseObjectWithCustomClientId()
        {
            b_SiteBilling dbObj = new b_SiteBilling();
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.SiteBillingId = this.SiteBillingId;
            dbObj.AnniversaryDate = this.AnniversaryDate;
            dbObj.InvoiceFreq = this.InvoiceFreq;
            dbObj.Terms = this.Terms;
            dbObj.CurrentInvoice = this.CurrentInvoice;
            dbObj.InvoiceDate = this.InvoiceDate;
            dbObj.NextInvoiceDate = this.NextInvoiceDate;
            dbObj.QuoteRequired = this.QuoteRequired;
            dbObj.CustomClientId = this.CustomClientId;
            return dbObj;
        }
        public void UpdateFromDatabaseObjectWithCustomClientId(b_SiteBilling dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.SiteId = dbObj.SiteId;
            this.SiteBillingId = dbObj.SiteBillingId;
            this.AnniversaryDate = dbObj.AnniversaryDate;
            this.InvoiceFreq = dbObj.InvoiceFreq;
            this.Terms = dbObj.Terms;
            this.CurrentInvoice = dbObj.CurrentInvoice;
            this.InvoiceDate = dbObj.InvoiceDate;
            this.NextInvoiceDate = dbObj.NextInvoiceDate;
            this.QuoteRequired = dbObj.QuoteRequired;
            this.CustomClientId = dbObj.CustomClientId;

            // Turn on auditing
            AuditEnabled = true;
        }
        public void UpdateSiteBillingWithCustomClientId(DatabaseKey dbKey)
        {
            SiteBilling_UpdateWithCustomClientId trans = new SiteBilling_UpdateWithCustomClientId();
            trans.SiteBilling = this.ToDatabaseObjectWithCustomClientId();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObjectWithCustomClientId(trans.SiteBilling);
        }
    }
}
