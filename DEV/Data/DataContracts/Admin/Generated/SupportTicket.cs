/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2022 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the SupportTicket table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class SupportTicket : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public SupportTicket()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_SupportTicket dbObj)
        {
		            this.SupportTicketId = dbObj.SupportTicketId;
            this.ClientId = dbObj.ClientId;
            this.SiteId = dbObj.SiteId;
            this.Agent_PersonnelId = dbObj.Agent_PersonnelId;
            this.CancelDate = dbObj.CancelDate;
            this.CancelBy_PersonnelId = dbObj.CancelBy_PersonnelId;
            this.CompleteDate = dbObj.CompleteDate;
            this.CompleteBy_PersonnelId = dbObj.CompleteBy_PersonnelId;
            this.Contact_PersonnelId = dbObj.Contact_PersonnelId;
            this.ContactEmail = dbObj.ContactEmail;
            this.ContactName = dbObj.ContactName;
            this.ContactPhoneNumber = dbObj.ContactPhoneNumber;
            this.DeleteBy_PersonnelId = dbObj.DeleteBy_PersonnelId;
            this.Description = dbObj.Description;
            this.Status = dbObj.Status;
            this.Subject = dbObj.Subject;
            this.Tags = dbObj.Tags;
            this.Type = dbObj.Type;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_SupportTicket dbObj = new b_SupportTicket();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_SupportTicket ToDatabaseObject()
        {
            b_SupportTicket dbObj = new b_SupportTicket();
            dbObj.SupportTicketId = this.SupportTicketId;
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.Agent_PersonnelId = this.Agent_PersonnelId;
            dbObj.CancelDate = this.CancelDate;
            dbObj.CancelBy_PersonnelId = this.CancelBy_PersonnelId;
            dbObj.CompleteDate = this.CompleteDate;
            dbObj.CompleteBy_PersonnelId = this.CompleteBy_PersonnelId;
            dbObj.Contact_PersonnelId = this.Contact_PersonnelId;
            dbObj.ContactEmail = this.ContactEmail;
            dbObj.ContactName = this.ContactName;
            dbObj.ContactPhoneNumber = this.ContactPhoneNumber;
            dbObj.DeleteBy_PersonnelId = this.DeleteBy_PersonnelId;
            dbObj.Description = this.Description;
            dbObj.Status = this.Status;
            dbObj.Subject = this.Subject;
            dbObj.Tags = this.Tags;
            dbObj.Type = this.Type;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            SupportTicket_Create trans = new SupportTicket_Create();
            trans.SupportTicket = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.SupportTicket);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            SupportTicket_Retrieve trans = new SupportTicket_Retrieve();
            trans.SupportTicket = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.SupportTicket);
        }

        public void Update(DatabaseKey dbKey) 
        {
            SupportTicket_Update trans = new SupportTicket_Update();
            trans.SupportTicket = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.SupportTicket);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            SupportTicket_Delete trans = new SupportTicket_Delete();
            trans.SupportTicket = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.SupportTicketId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _SupportTicketId;
        private long _ClientId;
        private long _SiteId;
        private long _Agent_PersonnelId;
        private DateTime? _CancelDate;
        private long _CancelBy_PersonnelId;
        private DateTime? _CompleteDate;
        private long _CompleteBy_PersonnelId;
        private long _Contact_PersonnelId;
        private string _ContactEmail;
        private string _ContactName;
        private string _ContactPhoneNumber;
        private long _DeleteBy_PersonnelId;
        private string _Description;
        private string _Status;
        private string _Subject;
        private string _Tags;
        private string _Type;
        #endregion
        
        #region Properties


        /// <summary>
        /// SupportTicketId property
        /// </summary>
        [DataMember]
        public long SupportTicketId
        {
            get { return _SupportTicketId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SupportTicketId); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// Agent_PersonnelId property
        /// </summary>
        [DataMember]
        public long Agent_PersonnelId
        {
            get { return _Agent_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Agent_PersonnelId); }
        }

        /// <summary>
        /// CancelDate property
        /// </summary>
        [DataMember]
        public DateTime? CancelDate
        {
            get { return _CancelDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _CancelDate); }
        }

        /// <summary>
        /// CancelBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long CancelBy_PersonnelId
        {
            get { return _CancelBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _CancelBy_PersonnelId); }
        }

        /// <summary>
        /// CompleteDate property
        /// </summary>
        [DataMember]
        public DateTime? CompleteDate
        {
            get { return _CompleteDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _CompleteDate); }
        }

        /// <summary>
        /// CompleteBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long CompleteBy_PersonnelId
        {
            get { return _CompleteBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _CompleteBy_PersonnelId); }
        }

        /// <summary>
        /// Contact_PersonnelId property
        /// </summary>
        [DataMember]
        public long Contact_PersonnelId
        {
            get { return _Contact_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Contact_PersonnelId); }
        }

        /// <summary>
        /// ContactEmail property
        /// </summary>
        [DataMember]
        public string ContactEmail
        {
            get { return _ContactEmail; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ContactEmail); }
        }

        /// <summary>
        /// ContactName property
        /// </summary>
        [DataMember]
        public string ContactName
        {
            get { return _ContactName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ContactName); }
        }

        /// <summary>
        /// ContactPhoneNumber property
        /// </summary>
        [DataMember]
        public string ContactPhoneNumber
        {
            get { return _ContactPhoneNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ContactPhoneNumber); }
        }

        /// <summary>
        /// DeleteBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long DeleteBy_PersonnelId
        {
            get { return _DeleteBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DeleteBy_PersonnelId); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }

        /// <summary>
        /// Subject property
        /// </summary>
        [DataMember]
        public string Subject
        {
            get { return _Subject; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Subject); }
        }

        /// <summary>
        /// Tags property
        /// </summary>
        [DataMember]
        public string Tags
        {
            get { return _Tags; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Tags); }
        }

        /// <summary>
        /// Type property
        /// </summary>
        [DataMember]
        public string Type
        {
            get { return _Type; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Type); }
        }
        #endregion
		
		
    }
}
