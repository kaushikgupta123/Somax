/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2020 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the UserInfo table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class UserInfo : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public UserInfo()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_UserInfo dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.UserInfoId = dbObj.UserInfoId;
            this.SecurityProfileId = dbObj.SecurityProfileId;
            this.FirstName = dbObj.FirstName;
            this.LastName = dbObj.LastName;
            this.MiddleName = dbObj.MiddleName;
            this.Email = dbObj.Email;
            this.Localization = dbObj.Localization;
            this.UIConfiguration = dbObj.UIConfiguration;
            this.TimeZone = dbObj.TimeZone;
            this.IsSuperUser = dbObj.IsSuperUser;
            this.DefaultSiteId = dbObj.DefaultSiteId;
            this.TabletUser = dbObj.TabletUser;
            this.PhoneUser = dbObj.PhoneUser;
            this.WebAppUser = dbObj.WebAppUser;
            this.UserType = dbObj.UserType;
            this.ResultsPerPage = dbObj.ResultsPerPage;
            this.StartPage = dbObj.StartPage;
            this.IsPasswordTemporary = dbObj.IsPasswordTemporary;
            this.MaintenanceNotify = dbObj.MaintenanceNotify;
            this.UIVersion = dbObj.UIVersion;
            this.IsSiteAdmin = dbObj.IsSiteAdmin;
            ////this.V2SecurityProfileId = dbObj.V2SecurityProfileId;
            this.EmployeeId = dbObj.EmployeeId;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_UserInfo dbObj = new b_UserInfo();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_UserInfo ToDatabaseObject()
        {
            b_UserInfo dbObj = new b_UserInfo();
            dbObj.ClientId = this.ClientId;
            dbObj.UserInfoId = this.UserInfoId;
            dbObj.SecurityProfileId = this.SecurityProfileId;
            dbObj.FirstName = this.FirstName;
            dbObj.LastName = this.LastName;
            dbObj.MiddleName = this.MiddleName;
            dbObj.Email = this.Email;
            dbObj.Localization = this.Localization;
            dbObj.UIConfiguration = this.UIConfiguration;
            dbObj.TimeZone = this.TimeZone;
            dbObj.IsSuperUser = this.IsSuperUser;
            dbObj.DefaultSiteId = this.DefaultSiteId;
            dbObj.TabletUser = this.TabletUser;
            dbObj.PhoneUser = this.PhoneUser;
            dbObj.WebAppUser = this.WebAppUser;
            dbObj.UserType = this.UserType;
            dbObj.ResultsPerPage = this.ResultsPerPage;
            dbObj.StartPage = this.StartPage;
            dbObj.IsPasswordTemporary = this.IsPasswordTemporary;
            dbObj.MaintenanceNotify = this.MaintenanceNotify;
            dbObj.UIVersion = this.UIVersion;
            dbObj.IsSiteAdmin = this.IsSiteAdmin;
            //dbObj.V2SecurityProfileId = this.V2SecurityProfileId;
            dbObj.EmployeeId = this.EmployeeId;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            UserInfo_Create trans = new UserInfo_Create();
            trans.UserInfo = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.UserInfo);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            UserInfo_Retrieve trans = new UserInfo_Retrieve();
            trans.UserInfo = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.UserInfo);
        }

        public void Update(DatabaseKey dbKey) 
        {
            UserInfo_Update trans = new UserInfo_Update();
            trans.UserInfo = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.UserInfo);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            UserInfo_Delete trans = new UserInfo_Delete();
            trans.UserInfo = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.UserInfoId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _UserInfoId;
        private long _SecurityProfileId;
        private string _FirstName;
        private string _LastName;
        private string _MiddleName;
        private string _Email;
        private string _Localization;
        private string _UIConfiguration;
        private string _TimeZone;
        private bool _IsSuperUser;
        private long _DefaultSiteId;
        private bool _TabletUser;
        private bool _PhoneUser;
        private bool _WebAppUser;
        private string _UserType;
        private int _ResultsPerPage;
        private string _StartPage;
        private bool _IsPasswordTemporary;
        private bool _MaintenanceNotify;
        private string _UIVersion;
        private bool _IsSiteAdmin;
        //private long _V2SecurityProfileId;
        private string _EmployeeId;
        private long _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// UserInfoId property
        /// </summary>
        [DataMember]
        public long UserInfoId
        {
            get { return _UserInfoId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UserInfoId); }
        }

        /// <summary>
        /// SecurityProfileId property
        /// </summary>
        [DataMember]
        public long SecurityProfileId
        {
            get { return _SecurityProfileId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SecurityProfileId); }
        }

        /// <summary>
        /// FirstName property
        /// </summary>
        [DataMember]
        public string FirstName
        {
            get { return _FirstName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FirstName); }
        }

        /// <summary>
        /// LastName property
        /// </summary>
        [DataMember]
        public string LastName
        {
            get { return _LastName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _LastName); }
        }

        /// <summary>
        /// MiddleName property
        /// </summary>
        [DataMember]
        public string MiddleName
        {
            get { return _MiddleName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _MiddleName); }
        }

        /// <summary>
        /// Email property
        /// </summary>
        [DataMember]
        public string Email
        {
            get { return _Email; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Email); }
        }

        /// <summary>
        /// Localization property
        /// </summary>
        [DataMember]
        public string Localization
        {
            get { return _Localization; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Localization); }
        }

        /// <summary>
        /// UIConfiguration property
        /// </summary>
        [DataMember]
        public string UIConfiguration
        {
            get { return _UIConfiguration; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _UIConfiguration); }
        }

        /// <summary>
        /// TimeZone property
        /// </summary>
        [DataMember]
        public string TimeZone
        {
            get { return _TimeZone; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _TimeZone); }
        }

        /// <summary>
        /// IsSuperUser property
        /// </summary>
        [DataMember]
        public bool IsSuperUser
        {
            get { return _IsSuperUser; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _IsSuperUser); }
        }

        /// <summary>
        /// DefaultSiteId property
        /// </summary>
        [DataMember]
        public long DefaultSiteId
        {
            get { return _DefaultSiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DefaultSiteId); }
        }

        /// <summary>
        /// TabletUser property
        /// </summary>
        [DataMember]
        public bool TabletUser
        {
            get { return _TabletUser; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _TabletUser); }
        }

        /// <summary>
        /// PhoneUser property
        /// </summary>
        [DataMember]
        public bool PhoneUser
        {
            get { return _PhoneUser; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _PhoneUser); }
        }

        /// <summary>
        /// WebAppUser property
        /// </summary>
        [DataMember]
        public bool WebAppUser
        {
            get { return _WebAppUser; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _WebAppUser); }
        }

        /// <summary>
        /// UserType property
        /// </summary>
        [DataMember]
        public string UserType
        {
            get { return _UserType; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _UserType); }
        }

        /// <summary>
        /// ResultsPerPage property
        /// </summary>
        [DataMember]
        public int ResultsPerPage
        {
            get { return _ResultsPerPage; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _ResultsPerPage); }
        }

        /// <summary>
        /// StartPage property
        /// </summary>
        [DataMember]
        public string StartPage
        {
            get { return _StartPage; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _StartPage); }
        }

        /// <summary>
        /// IsPasswordTemporary property
        /// </summary>
        [DataMember]
        public bool IsPasswordTemporary
        {
            get { return _IsPasswordTemporary; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _IsPasswordTemporary); }
        }

        /// <summary>
        /// MaintenanceNotify property
        /// </summary>
        [DataMember]
        public bool MaintenanceNotify
        {
            get { return _MaintenanceNotify; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _MaintenanceNotify); }
        }

        /// <summary>
        /// UIVersion property
        /// </summary>
        [DataMember]
        public string UIVersion
        {
            get { return _UIVersion; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _UIVersion); }
        }

        /// <summary>
        /// IsSiteAdmin property
        /// </summary>
        [DataMember]
        public bool IsSiteAdmin
        {
            get { return _IsSiteAdmin; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _IsSiteAdmin); }
        }

        /// <summary>
        /// V2SecurityProfileId property
        /// </summary>
        //[DataMember]
        //public long V2SecurityProfileId
        //{
        //    get { return _V2SecurityProfileId; }
        //    set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _V2SecurityProfileId); }
        //}

        /// <summary>
        /// EmployeeId property
        /// </summary>
        [DataMember]
        public string EmployeeId
        {
            get { return _EmployeeId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _EmployeeId); }
        }
        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public long UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
