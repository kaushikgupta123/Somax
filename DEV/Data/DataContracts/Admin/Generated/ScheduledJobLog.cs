/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2012 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using SOMAX.G4.Data.Database;
using SOMAX.G4.Data.Database.Business;

namespace SOMAX.G4.Data.DataContracts
{
    /// <summary>
    /// Business object that stores a record from the ScheduledJobLog table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class ScheduledJobLog : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ScheduledJobLog()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_ScheduledJobLog dbObj)
        {
		            this.ScheduledJobLogId = dbObj.ScheduledJobLogId;
            this.ScheduledJobId = dbObj.ScheduledJobId;
            this.StepDescription = dbObj.StepDescription;
            this.StartTime = dbObj.StartTime;
            this.EndTime = dbObj.EndTime;
            this.Message = dbObj.Message;
            this.Status = dbObj.Status;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_ScheduledJobLog dbObj = new b_ScheduledJobLog();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_ScheduledJobLog ToDatabaseObject()
        {
            b_ScheduledJobLog dbObj = new b_ScheduledJobLog();
            dbObj.ScheduledJobLogId = this.ScheduledJobLogId;
            dbObj.ScheduledJobId = this.ScheduledJobId;
            dbObj.StepDescription = this.StepDescription;
            dbObj.StartTime = this.StartTime;
            dbObj.EndTime = this.EndTime;
            dbObj.Message = this.Message;
            dbObj.Status = this.Status;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            ScheduledJobLog_Create trans = new ScheduledJobLog_Create();
            trans.ScheduledJobLog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.ScheduledJobLog);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            ScheduledJobLog_Retrieve trans = new ScheduledJobLog_Retrieve();
            trans.ScheduledJobLog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.ScheduledJobLog);
        }

        public void Update(DatabaseKey dbKey) 
        {
            ScheduledJobLog_Update trans = new ScheduledJobLog_Update();
            trans.ScheduledJobLog = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.ScheduledJobLog);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            ScheduledJobLog_Delete trans = new ScheduledJobLog_Delete();
            trans.ScheduledJobLog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.ScheduledJobLogId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ScheduledJobLogId;
        private long _ScheduledJobId;
        private string _StepDescription;
        private DateTime _StartTime;
        private DateTime _EndTime;
        private string _Message;
        private string _Status;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ScheduledJobLogId property
        /// </summary>
        [DataMember]
        public long ScheduledJobLogId
        {
            get { return _ScheduledJobLogId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ScheduledJobLogId); }
        }

        /// <summary>
        /// ScheduledJobId property
        /// </summary>
        [DataMember]
        public long ScheduledJobId
        {
            get { return _ScheduledJobId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ScheduledJobId); }
        }

        /// <summary>
        /// StepDescription property
        /// </summary>
        [DataMember]
        public string StepDescription
        {
            get { return _StepDescription; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _StepDescription); }
        }

        /// <summary>
        /// StartTime property
        /// </summary>
        [DataMember]
        public DateTime StartTime
        {
            get { return _StartTime; }
            set { Set<DateTime>(MethodBase.GetCurrentMethod().Name, value, ref _StartTime); }
        }

        /// <summary>
        /// EndTime property
        /// </summary>
        [DataMember]
        public DateTime EndTime
        {
            get { return _EndTime; }
            set { Set<DateTime>(MethodBase.GetCurrentMethod().Name, value, ref _EndTime); }
        }

        /// <summary>
        /// Message property
        /// </summary>
        [DataMember]
        public string Message
        {
            get { return _Message; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Message); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
