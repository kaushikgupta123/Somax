/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2012 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using Database.Business;
using Database.Transactions;

using System.Collections.Generic;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Contact table.
    /// </summary>
    public partial class AppGroupRequestors : DataContractBase
    {
        #region  Properties
        public string OrderByColumn { get; set; }
        public string OrderBy { get; set; }
        public int Offset { get; set; }
        public int Nextrow { get; set; }
        public string RequestorName { get; set; }
        public int TotalCount { get; set; }
        public string RequestType { get; set; }
        public long SiteId { get; set; }
        #endregion

        #region public Methods

        public b_AppGroupRequestors ToDateBaseObjectExtended()
        {
            b_AppGroupRequestors dbObj = ToDatabaseObject();
            dbObj.OrderbyColumn = this.OrderByColumn;
            dbObj.OrderBy = this.OrderBy;
            dbObj.OffSetVal = this.Offset;
            dbObj.NextRow = this.Nextrow;
            return dbObj;
        }
        public void UpdateFromDatabaseObjectExtended(b_AppGroupRequestors dbObj)
        {
            this.UpdateFromDatabaseObject(dbObj);
            this.RequestorName = dbObj.RequestorName;
        }
        public List<AppGroupRequestors> RetrieveChunkSearchForDetailsById(DatabaseKey dbKey)
        {
            List<AppGroupRequestors> AppGroupRequestorsList = new List<AppGroupRequestors>();
            AppGroupRequestors_RetrieveChunkSearchForDetailsById trans = new AppGroupRequestors_RetrieveChunkSearchForDetailsById()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };

            trans.AppGroupRequestors = ToDateBaseObjectExtended();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            foreach (b_AppGroupRequestors appGroupRequestors in trans.AppGroupRequestorsList)
            {
                var obj = new AppGroupRequestors();
                obj.RequestorName = appGroupRequestors.RequestorName;
                obj.TotalCount = appGroupRequestors.TotalCount;
                obj.AppGroupRequestorsId = appGroupRequestors.AppGroupRequestorsId;
                AppGroupRequestorsList.Add(obj);
            }
            return AppGroupRequestorsList;
        }
        #endregion
        #region RetrieveBy RequestorId And RequestType V2-726
        public AppGroupRequestors RetrieveByRequestorIdAndRequestType(DatabaseKey dbKey)
        {
            AppGroupRequestors AppGroupRequestors = new AppGroupRequestors();
            AppGroupRequestors_RetrieveByRequestorIdAndRequestType trans = new AppGroupRequestors_RetrieveByRequestorIdAndRequestType()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.AppGroupRequestors = ToDateBaseObjectExtendedRetrieveByRequestorIdAndRequestType();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            AppGroupRequestors.ApprovalGroupId = trans.AppGroupRequestorsData!=null? trans.AppGroupRequestorsData.ApprovalGroupId:0;
            return AppGroupRequestors;
        }
        public b_AppGroupRequestors ToDateBaseObjectExtendedRetrieveByRequestorIdAndRequestType()
        {
            b_AppGroupRequestors dbObj = ToDatabaseObject();
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.RequestType = this.RequestType;
            dbObj.RequestorId = this.RequestorId;
            return dbObj;
        }
        #endregion
    }
}
