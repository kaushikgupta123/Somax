/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2021 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;
using Common.Enumerations;
using Data.Database;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the LoginSSO table.
    /// </summary>
   
    public partial class LoginSSO: IStoredProcedureValidation
    {
        public string EmailId { get; set; }
        public string EmailType { get; set; }
        public string ValidateFor = string.Empty;
        public void RetrieveByEmail(DatabaseKey dbKey)
        {
            LoginSSO_TransactionByEmail trans = new LoginSSO_TransactionByEmail();
            trans.LoginSSO = ToDatabaseObjectCustom();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.LoginSSO);
        }

        public b_LoginSSO ToDatabaseObjectCustom()
        {
            b_LoginSSO sso = new b_LoginSSO();
            sso = this.ToDatabaseObject();
            sso.EmailId = this.EmailId;
            sso.EmailType = this.EmailType;
            return sso;
        }

        #region V2-803
        public void CheckvalidateGmailId(DatabaseKey dbKey)
        {
            ValidateFor = "ValidateGmailId";
            Validate<LoginSSO>(dbKey);
        }
        
        public List<StoredProcValidationError> RetrieveStoredProcValidationData(DatabaseKey dbKey)
        {
            List<StoredProcValidationError> errors = new List<StoredProcValidationError>();
            if (ValidateFor == "ValidateGmailId")
            {

                LoginSSO_ValidateGmailIdIdTransaction trans = new LoginSSO_ValidateGmailIdIdTransaction()
                {
                    CallerUserInfoId = dbKey.User.UserInfoId,
                    CallerUserName = dbKey.UserName
                };
                trans.LoginSSO = this.ToDatabaseObject();
                trans.dbKey = dbKey.ToTransDbKey();
                trans.Execute();
                errors = StoredProcValidationError.UpdateFromDatabaseObjects(trans.StoredProcValidationErrorList);

            }
            else
            {
                
            }
            return errors;
        }
        public void RetrieveLoginSSOByUserInfoId(DatabaseKey dbKey)
        {
            RetrieveLoginSSOByUserInfoId_V2 trans = new RetrieveLoginSSOByUserInfoId_V2()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.LoginSSO = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.UseDatabase = DatabaseTypeEnum.Client;
            trans.Execute();

            UpdateFromDatabaseObject(trans.LoginSSO.LoginSSO);
        }
        #endregion
    }
}
