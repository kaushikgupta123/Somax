/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System.Collections.Generic;
using Database.Business;
using Database.Transactions;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the UserSecurityGroup table.
    /// </summary>
    public partial class UserSecurityGroup : DataContractBase 
    {
        #region Constructors


        public void UpdateAdditionalDataFromDatabaseObject(b_UserSecurityGroup dbObj)
        {
            UpdateFromDatabaseObject(dbObj);
            this.SecurityGroupName = dbObj.SecurityGroupName;
            
        }

   

        #endregion

        #region Transaction Methods

        public List<UserSecurityGroup> RetrieveByUserInfoId(DatabaseKey dbKey)
        {
            UserSecurityGroup_RetrieveByUserInfoId trans = new UserSecurityGroup_RetrieveByUserInfoId()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.UserSecurityGroup = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            List<UserSecurityGroup> userSecurityGroupList = new List<UserSecurityGroup>();
            foreach (b_UserSecurityGroup securityGroup in trans.UserSecurityGroupList)
            {
                UserSecurityGroup temp = new UserSecurityGroup();
                temp.UpdateAdditionalDataFromDatabaseObject(securityGroup);
                userSecurityGroupList.Add(temp);
            }

            return userSecurityGroupList;

        }

        public void RetrieveGroupNamesByUserInfoId(DatabaseKey dbKey)
        {
            UserSecurityGroup_RetrieveByUserInfoId trans = new UserSecurityGroup_RetrieveByUserInfoId()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.UserSecurityGroup = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            SecurityGroupNames = new List<KeyValuePair<string, string>>();
            foreach (b_UserSecurityGroup securityGroup in trans.UserSecurityGroupList)
            {
                SecurityGroupNames.Add(new KeyValuePair<string, string>(securityGroup.SecurityGroupId.ToString(), securityGroup.SecurityGroupName));
            }
            
        }

        public List<UserSecurityGroup> RetrieveGroupNamesByGroupId(DatabaseKey dbKey)
        {
            UserSecurityGroup_RetrieveByGroupId trans = new UserSecurityGroup_RetrieveByGroupId()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.UserSecurityGroup = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            List<UserSecurityGroup> userSecurityGroupList = new List<UserSecurityGroup>();
            foreach (b_UserSecurityGroup securityGroup in trans.UserSecurityGroupList)
            {
                UserSecurityGroup temp = new UserSecurityGroup();
                temp.UpdateFromDatabaseObject(securityGroup);
                userSecurityGroupList.Add(temp);
            }

            return userSecurityGroupList;

        }
        /********************************Added By Indusnet Technologies****************************/
        public void CreateFromAdmintSite(DatabaseKey dbKey)
        {
            UserSecurityGroup_CreateFromAdmin trans = new UserSecurityGroup_CreateFromAdmin();
            trans.usersecuritygroup = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.usersecuritygroup);
        }
        public void DeleteFromAdmintSite(DatabaseKey dbKey)
        {
            UserSecurityGroup_DeleteFromAdmin trans = new UserSecurityGroup_DeleteFromAdmin();
            trans.usersecuritygroup = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            //UpdateFromDatabaseObject(trans.usersecuritygroup);
        }
        /********************************End Added By Indusnet Technologies************************/
        #endregion
        
        #region Properties

        public string SecurityGroupName { get; set; }

        public List<KeyValuePair<string, string>> SecurityGroupNames { get; set; }

        #endregion
    }
}
