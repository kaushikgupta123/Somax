/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Area table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class StoredProcValidationError : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public StoredProcValidationError()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_StoredProcValidationError dbObj)
        {
            this.TableName = dbObj.TableName;
            this.ErrorCode = dbObj.ErrorCode;
            this.Arg0 = dbObj.Arg0;
            this.Arg1 = dbObj.Arg1;
        }

        private void Initialize()
        {
            b_StoredProcValidationError dbObj = new b_StoredProcValidationError();
            UpdateFromDatabaseObject(dbObj);
        }

        public b_StoredProcValidationError ToDatabaseObject()
        {
            b_StoredProcValidationError dbObj = new b_StoredProcValidationError();
            dbObj.TableName = this.TableName;
            dbObj.ErrorCode = this.ErrorCode;
            dbObj.Arg0 = this.Arg0;
            dbObj.Arg1 = this.Arg1;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
          
        #endregion
        
        #region Properties


        /// <summary>
        /// TableName property
        /// </summary>
        [DataMember]
        public string TableName { get; set; }

        /// <summary>
        /// ErrorCode property
        /// </summary>
        [DataMember]
        public int ErrorCode { get; set; }

        /// <summary>
        /// Arg0 property
        /// </summary>
        [DataMember]
        public string Arg0 { get; set; }

        /// <summary>
        /// Arg1 property
        /// </summary>
        [DataMember]
        public string Arg1 { get; set; }

        #endregion

        #region Public Methods
        public static List<StoredProcValidationError> UpdateFromDatabaseObjects(List<b_StoredProcValidationError> errors)
        {
            List<StoredProcValidationError> errorList = new List<StoredProcValidationError>();

            if (errors != null)
            {
                foreach (b_StoredProcValidationError error in errors)
                {
                    StoredProcValidationError tmp = new StoredProcValidationError();
                    tmp.UpdateFromDatabaseObject(error);
                    errorList.Add(tmp);
                }
            }

            return errorList;
        }
        #endregion
    }
}
