/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

using Database;
using Database.Business;
using Common.Constants;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the UserPermission table.
    /// </summary>
    public partial class UserPermission : DataContractBase
    {

        #region Private Methods
        public void UpdateFromDatabaseObjectWithNames(b_UserPermission dbObj)
        {
            UpdateFromDatabaseObject(dbObj);
            this.Site = dbObj.Site;
            this.Area = dbObj.Area;
            this.Department = dbObj.Department;
            this.Storeroom = dbObj.Storeroom;
        }
        #endregion

        #region Properties

        /// <summary>
        /// Site property
        /// </summary>
        [DataMember]
        public string Site { get; set; }

        /// <summary>
        /// Site property
        /// </summary>
        [DataMember]
        public string Area { get; set; }

        /// <summary>
        /// Department property
        /// </summary>
        [DataMember]
        public string Department { get; set; }

        /// <summary>
        /// Storeroom property
        /// </summary>
        [DataMember]
        public string Storeroom { get; set; }
        public long SiteCount { get; set; }
        public List<UserPermission> RetrieveByUserInfoId(DatabaseKey dbKey)
        {
            UserPermission_RetrieveByUserInfoId trans = new UserPermission_RetrieveByUserInfoId()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.UserPermission = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            Initialize();

            List<UserPermission> userPermissionList = new List<UserPermission>();
            foreach (b_UserPermission userPermission in trans.UserPermissionList)
            {
                UserPermission temp = new UserPermission();
                temp.UpdateFromDatabaseObjectWithNames(userPermission);
                userPermissionList.Add(temp);
            }

            return userPermissionList;
            
        }

        public List<UserPermission> RetrieveWithGroupPermissionByUserInfoId(DatabaseKey dbKey)
        {
            UserPermission_RetrieveWithGroupPermissionByUserInfoId trans = new UserPermission_RetrieveWithGroupPermissionByUserInfoId()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.UserPermission = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            Initialize();

            List<UserPermission> userPermissionList = new List<UserPermission>();
            foreach (b_UserPermission userPermission in trans.UserPermissionList)
            {
                UserPermission temp = new UserPermission();
                temp.UpdateFromDatabaseObjectWithNames(userPermission);
                userPermissionList.Add(temp);
            }

            return userPermissionList;

        }

        //------------------------------------Added By Indusnet Technologies--------------------------

        //----------Client Connection string is required from accessing it from admin application
        //----------if accessing it from client side simply pass empty or null for ClientconnectionString argument

        public List<UserPermission> RetrieveByPermissionTypeAndUser(DatabaseKey dbKey,string ClientConnectionString)
        {
            UserPermission_RetrieveByPermissionTypeAndUser trans = new UserPermission_RetrieveByPermissionTypeAndUser()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.UserPermission = this.ToDatabaseObject();
            trans.ClientConnectionString = ClientConnectionString;
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            Initialize();

            List<UserPermission> userPermissionList = new List<UserPermission>();
            foreach (b_UserPermission userPermission in trans.UserPermissionList)
            {
                UserPermission temp = new UserPermission();
                temp.UpdateFromDatabaseObjectWithNames(userPermission);
                userPermissionList.Add(temp);
            }

            return userPermissionList;

        }

        public void DeleteBySiteAndUser(DatabaseKey dbKey)
        {
            UserPermission_DeleteBySiteAndUser trans = new UserPermission_DeleteBySiteAndUser();
            trans.UserPermission = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        //------------------------------------End Added By Indusnet Technologies----------------------
        public void RetrieveByGrant(DatabaseKey dbKey)
        {
            UserPermission_RetrieveByGrant trans = new UserPermission_RetrieveByGrant()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };
            trans.UserPermission = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            this.SiteCount = trans.UserPermission.SiteCount;
        }

        #endregion
        #region V2-962
        public void DeleteBySiteAndUserForAdmin(DatabaseKey dbKey)
        {
            UserPermission_DeleteBySiteAndUserForAdmin trans = new UserPermission_DeleteBySiteAndUserForAdmin();
            trans.UserPermission = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.customClientId = this.ClientId;
            trans.Execute();
        }
        public void CreateForAdmin(DatabaseKey dbKey)
        {
            UserPermission_CreateForAdmin trans = new UserPermission_CreateForAdmin();
            trans.UserPermission = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.customClientId = this.ClientId;
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.UserPermission);
        }
        #endregion
    }
}
