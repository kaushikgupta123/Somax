/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2018 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
   
    public partial class PartMasterResponse : DataContractBase 
    {
        #region Property
        public Int64 PerformById { get; set; }
        public string TransactionType { get; set; }
        public bool ImportError { get; set; }
        public Int64 OutPartHistoryId { get; set; }
        public Int64 OutPartId { get; set; }
        public Int64 OutPartMasterResponseId { get; set; }

        #endregion
        #region Transactions
        public void ImportData(DatabaseKey dbKey)
        {
            if (IsValid)
            {
                PartMasterResponse_ImportData trans = new PartMasterResponse_ImportData()
                {
                    CallerUserInfoId = dbKey.User.UserInfoId,
                    CallerUserName = dbKey.UserName
                };
                trans.PartMasterResponse = this.ToDatabaseObject();
                trans.PartMasterResponse.TransactionType = this.TransactionType;
                trans.PartMasterResponse.PerformById = this.PerformById;
                trans.dbKey = dbKey.ToTransDbKey();
                trans.Execute();
                // The create procedure may have populated an auto-incremented key. 
                UpdateFromDatabaseObject(trans.PartMasterResponse);
                this.ImportError = trans.PartMasterResponse.ImportError;
                this.OutPartHistoryId=trans.PartMasterResponse.OutPartHistoryId;
                this.OutPartId = trans.PartMasterResponse.OutPartId;
            }
        }
        public List<PartMasterResponse> PartMasterResponseRetrieveAll(DatabaseKey dbKey)
        {
            PartMasterResponse_RetrieveAll trans = new PartMasterResponse_RetrieveAll()
            {
                CallerUserInfoId = dbKey.User.UserInfoId,
                CallerUserName = dbKey.UserName
            };

            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            return UpdateFromDatabaseObjectList(trans.PartMasterResponseList);
        }

        #endregion
        public static List<PartMasterResponse> UpdateFromDatabaseObjectList(List<b_PartMasterResponse> dbObjs)
        {
            List<PartMasterResponse> result = new List<PartMasterResponse>();

            foreach (b_PartMasterResponse dbObj in dbObjs)
            {
                PartMasterResponse tmp = new PartMasterResponse();
                tmp.UpdateFromDatabaseObject(dbObj);
                result.Add(tmp);
            }
            return result;
        }
    }
}
