/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2018 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Runtime.Serialization;
using System.Reflection;
using Database.Business;
using Database.Transactions;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Localizations table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class Localizations : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Localizations()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_Localizations dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.LocalizationId = dbObj.LocalizationId;
            this.ResourceId = dbObj.ResourceId;
            this.Value = dbObj.Value;
            this.LocaleId = dbObj.LocaleId;
            this.ResourceSet = dbObj.ResourceSet;
            this.Type = dbObj.Type;
            this.BinFile = dbObj.BinFile;
            this.TextFile = dbObj.TextFile;
            this.Filename = dbObj.Filename;
            this.Comment = dbObj.Comment;
            this.ValueType = dbObj.ValueType;
            this.Updated = dbObj.Updated;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_Localizations dbObj = new b_Localizations();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_Localizations ToDatabaseObject()
        {
            b_Localizations dbObj = new b_Localizations();
            dbObj.ClientId = this.ClientId;
            dbObj.LocalizationId = this.LocalizationId;
            dbObj.ResourceId = this.ResourceId;
            dbObj.Value = this.Value;
            dbObj.LocaleId = this.LocaleId;
            dbObj.ResourceSet = this.ResourceSet;
            dbObj.Type = this.Type;
            dbObj.BinFile = this.BinFile;
            dbObj.TextFile = this.TextFile;
            dbObj.Filename = this.Filename;
            dbObj.Comment = this.Comment;
            dbObj.ValueType = this.ValueType;
            dbObj.Updated = this.Updated;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            Localizations_Create trans = new Localizations_Create();
            trans.Localizations = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.Localizations);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            Localizations_Retrieve trans = new Localizations_Retrieve();
            trans.Localizations = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.Localizations);
        }

        public void Update(DatabaseKey dbKey) 
        {
            Localizations_Update trans = new Localizations_Update();
            trans.Localizations = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.Localizations);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            Localizations_Delete trans = new Localizations_Delete();
            trans.Localizations = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.LocalizationId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _Localizationd;
        private string _ResourceId;
        private string _Value;
        private string _LocaleId;
        private string _ResourceSet;
        private string _Type;
        private byte[] _BinFile;
        private string _TextFile;
        private string _Filename;
        private string _Comment;
        private int _ValueType;
        private DateTime? _Updated;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// Localizationd property
        /// </summary>
        [DataMember]
        public long LocalizationId
        {
            get { return _Localizationd; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Localizationd); }
        }

        /// <summary>
        /// ResourceId property
        /// </summary>
        [DataMember]
        public string ResourceId
        {
            get { return _ResourceId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ResourceId); }
        }

        /// <summary>
        /// Value property
        /// </summary>
        [DataMember]
        public string Value
        {
            get { return _Value; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Value); }
        }

        /// <summary>
        /// LocaleId property
        /// </summary>
        [DataMember]
        public string LocaleId
        {
            get { return _LocaleId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _LocaleId); }
        }

        /// <summary>
        /// ResourceSet property
        /// </summary>
        [DataMember]
        public string ResourceSet
        {
            get { return _ResourceSet; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ResourceSet); }
        }

        /// <summary>
        /// Type property
        /// </summary>
        [DataMember]
        public string Type
        {
            get { return _Type; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Type); }
        }

        /// <summary>
        /// BinFile property
        /// </summary>
        [DataMember]
        public byte[] BinFile
        {
            get { return _BinFile; }
            set { Set<byte[]>(MethodBase.GetCurrentMethod().Name, value, ref _BinFile); }
        }

        /// <summary>
        /// TextFile property
        /// </summary>
        [DataMember]
        public string TextFile
        {
            get { return _TextFile; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _TextFile); }
        }

        /// <summary>
        /// Filename property
        /// </summary>
        [DataMember]
        public string Filename
        {
            get { return _Filename; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Filename); }
        }

        /// <summary>
        /// Comment property
        /// </summary>
        [DataMember]
        public string Comment
        {
            get { return _Comment; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Comment); }
        }

        /// <summary>
        /// ValueType property
        /// </summary>
        [DataMember]
        public int ValueType
        {
            get { return _ValueType; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _ValueType); }
        }

        /// <summary>
        /// Updated property
        /// </summary>
        [DataMember]
        public DateTime? Updated
        {
            get { return _Updated; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _Updated); }
        }
        #endregion
		
		
    }
}
