/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2014 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Location table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class Location : DataContractBase, IPermission 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Location()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_Location dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.LocationId = dbObj.LocationId;
            this.SiteId = dbObj.SiteId;
            this.AreaId = dbObj.AreaId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.ClientLookupId = dbObj.ClientLookupId;
            this.Address1 = dbObj.Address1;
            this.Address2 = dbObj.Address2;
            this.Address3 = dbObj.Address3;
            this.AddressCity = dbObj.AddressCity;
            this.AddressPostCode = dbObj.AddressPostCode;
            this.AddressState = dbObj.AddressState;
            this.AddressCountry = dbObj.AddressCountry;
            this.Complex = dbObj.Complex;
            this.CurrentValue = dbObj.CurrentValue;
            this.DepreciationCode = dbObj.DepreciationCode;
            this.DepreciationLTD = dbObj.DepreciationLTD;
            this.DepreciationPCT = dbObj.DepreciationPCT;
            this.DepreciationYTD = dbObj.DepreciationYTD;
            this.FacilitiyConditionIndex = dbObj.FacilitiyConditionIndex;
            this.InactiveFlag = dbObj.InactiveFlag;
            this.Labor_AccountId = dbObj.Labor_AccountId;
            this.LifeExpectMonths = dbObj.LifeExpectMonths;
            this.LifeExpectYears = dbObj.LifeExpectYears;
            this.Material_AccountId = dbObj.Material_AccountId;
            this.Name = dbObj.Name;
            this.OriginalCost = dbObj.OriginalCost;
            this.ParentId = dbObj.ParentId;
            this.ReplacementCost = dbObj.ReplacementCost;
            this.SquareFeet = dbObj.SquareFeet;
            this.Type = dbObj.Type;
            this.Usage = dbObj.Usage;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_Location dbObj = new b_Location();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_Location ToDatabaseObject()
        {
            b_Location dbObj = new b_Location();
            dbObj.ClientId = this.ClientId;
            dbObj.LocationId = this.LocationId;
            dbObj.SiteId = this.SiteId;
            dbObj.AreaId = this.AreaId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.ClientLookupId = this.ClientLookupId;
            dbObj.Address1 = this.Address1;
            dbObj.Address2 = this.Address2;
            dbObj.Address3 = this.Address3;
            dbObj.AddressCity = this.AddressCity;
            dbObj.AddressPostCode = this.AddressPostCode;
            dbObj.AddressState = this.AddressState;
            dbObj.AddressCountry = this.AddressCountry;
            dbObj.Complex = this.Complex;
            dbObj.CurrentValue = this.CurrentValue;
            dbObj.DepreciationCode = this.DepreciationCode;
            dbObj.DepreciationLTD = this.DepreciationLTD;
            dbObj.DepreciationPCT = this.DepreciationPCT;
            dbObj.DepreciationYTD = this.DepreciationYTD;
            dbObj.FacilitiyConditionIndex = this.FacilitiyConditionIndex;
            dbObj.InactiveFlag = this.InactiveFlag;
            dbObj.Labor_AccountId = this.Labor_AccountId;
            dbObj.LifeExpectMonths = this.LifeExpectMonths;
            dbObj.LifeExpectYears = this.LifeExpectYears;
            dbObj.Material_AccountId = this.Material_AccountId;
            dbObj.Name = this.Name;
            dbObj.OriginalCost = this.OriginalCost;
            dbObj.ParentId = this.ParentId;
            dbObj.ReplacementCost = this.ReplacementCost;
            dbObj.SquareFeet = this.SquareFeet;
            dbObj.Type = this.Type;
            dbObj.Usage = this.Usage;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            Location_Create trans = new Location_Create();
            trans.Location = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.Location);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            Location_Retrieve trans = new Location_Retrieve();
            trans.Location = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.Location);
        }

        public void Update(DatabaseKey dbKey) 
        {
            Location_Update trans = new Location_Update();
            trans.Location = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.Location);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            Location_Delete trans = new Location_Delete();
            trans.Location = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.LocationId;
			AuditTargetSiteId = this.SiteId;
			AuditTargetAreaId = this.AreaId;
			AuditTargetDepartmentId = this.DepartmentId;
			AuditTargetStoreRoomId = this.StoreroomId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _LocationId;
        private long _SiteId;
        private long _AreaId;
        private long _DepartmentId;
        private long _StoreroomId;
        private string _ClientLookupId;
        private string _Address1;
        private string _Address2;
        private string _Address3;
        private string _AddressCity;
        private string _AddressPostCode;
        private string _AddressState;
        private string _AddressCountry;
        private string _Complex;
        private decimal _CurrentValue;
        private string _DepreciationCode;
        private decimal _DepreciationLTD;
        private decimal _DepreciationPCT;
        private decimal _DepreciationYTD;
        private decimal _FacilitiyConditionIndex;
        private bool _InactiveFlag;
        private long _Labor_AccountId;
        private int _LifeExpectMonths;
        private int _LifeExpectYears;
        private long _Material_AccountId;
        private string _Name;
        private decimal _OriginalCost;
        private long _ParentId;
        private decimal _ReplacementCost;
        private decimal _SquareFeet;
        private string _Type;
        private string _Usage;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// LocationId property
        /// </summary>
        [DataMember]
        public long LocationId
        {
            get { return _LocationId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _LocationId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// AreaId property
        /// </summary>
        [DataMember]
        public long AreaId
        {
            get { return _AreaId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AreaId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// ClientLookupId property
        /// </summary>
        [DataMember]
        public string ClientLookupId
        {
            get { return _ClientLookupId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ClientLookupId); }
        }

        /// <summary>
        /// Address1 property
        /// </summary>
        [DataMember]
        public string Address1
        {
            get { return _Address1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address1); }
        }

        /// <summary>
        /// Address2 property
        /// </summary>
        [DataMember]
        public string Address2
        {
            get { return _Address2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address2); }
        }

        /// <summary>
        /// Address3 property
        /// </summary>
        [DataMember]
        public string Address3
        {
            get { return _Address3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address3); }
        }

        /// <summary>
        /// AddressCity property
        /// </summary>
        [DataMember]
        public string AddressCity
        {
            get { return _AddressCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCity); }
        }

        /// <summary>
        /// AddressPostCode property
        /// </summary>
        [DataMember]
        public string AddressPostCode
        {
            get { return _AddressPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressPostCode); }
        }

        /// <summary>
        /// AddressState property
        /// </summary>
        [DataMember]
        public string AddressState
        {
            get { return _AddressState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressState); }
        }

        /// <summary>
        /// AddressCountry property
        /// </summary>
        [DataMember]
        public string AddressCountry
        {
            get { return _AddressCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCountry); }
        }

        /// <summary>
        /// Complex property
        /// </summary>
        [DataMember]
        public string Complex
        {
            get { return _Complex; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Complex); }
        }

        /// <summary>
        /// CurrentValue property
        /// </summary>
        [DataMember]
        public decimal CurrentValue
        {
            get { return _CurrentValue; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _CurrentValue); }
        }

        /// <summary>
        /// DepreciationCode property
        /// </summary>
        [DataMember]
        public string DepreciationCode
        {
            get { return _DepreciationCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _DepreciationCode); }
        }

        /// <summary>
        /// DepreciationLTD property
        /// </summary>
        [DataMember]
        public decimal DepreciationLTD
        {
            get { return _DepreciationLTD; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _DepreciationLTD); }
        }

        /// <summary>
        /// DepreciationPCT property
        /// </summary>
        [DataMember]
        public decimal DepreciationPCT
        {
            get { return _DepreciationPCT; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _DepreciationPCT); }
        }

        /// <summary>
        /// DepreciationYTD property
        /// </summary>
        [DataMember]
        public decimal DepreciationYTD
        {
            get { return _DepreciationYTD; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _DepreciationYTD); }
        }

        /// <summary>
        /// FacilitiyConditionIndex property
        /// </summary>
        [DataMember]
        public decimal FacilitiyConditionIndex
        {
            get { return _FacilitiyConditionIndex; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _FacilitiyConditionIndex); }
        }

        /// <summary>
        /// InactiveFlag property
        /// </summary>
        [DataMember]
        public bool InactiveFlag
        {
            get { return _InactiveFlag; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _InactiveFlag); }
        }

        /// <summary>
        /// Labor_AccountId property
        /// </summary>
        [DataMember]
        public long Labor_AccountId
        {
            get { return _Labor_AccountId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Labor_AccountId); }
        }

        /// <summary>
        /// LifeExpectMonths property
        /// </summary>
        [DataMember]
        public int LifeExpectMonths
        {
            get { return _LifeExpectMonths; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _LifeExpectMonths); }
        }

        /// <summary>
        /// LifeExpectYears property
        /// </summary>
        [DataMember]
        public int LifeExpectYears
        {
            get { return _LifeExpectYears; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _LifeExpectYears); }
        }

        /// <summary>
        /// Material_AccountId property
        /// </summary>
        [DataMember]
        public long Material_AccountId
        {
            get { return _Material_AccountId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Material_AccountId); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// OriginalCost property
        /// </summary>
        [DataMember]
        public decimal OriginalCost
        {
            get { return _OriginalCost; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _OriginalCost); }
        }

        /// <summary>
        /// ParentId property
        /// </summary>
        [DataMember]
        public long ParentId
        {
            get { return _ParentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ParentId); }
        }

        /// <summary>
        /// ReplacementCost property
        /// </summary>
        [DataMember]
        public decimal ReplacementCost
        {
            get { return _ReplacementCost; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _ReplacementCost); }
        }

        /// <summary>
        /// SquareFeet property
        /// </summary>
        [DataMember]
        public decimal SquareFeet
        {
            get { return _SquareFeet; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _SquareFeet); }
        }

        /// <summary>
        /// Type property
        /// </summary>
        [DataMember]
        public string Type
        {
            get { return _Type; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Type); }
        }

        /// <summary>
        /// Usage property
        /// </summary>
        [DataMember]
        public string Usage
        {
            get { return _Usage; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Usage); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
