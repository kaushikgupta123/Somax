/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2021 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the POImport2 table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class POImport2 : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public POImport2()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_POImport2 dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.POImport2Id = dbObj.POImport2Id;
            this.SiteId = dbObj.SiteId;
            this.PurchaseOrder = dbObj.PurchaseOrder;
            this.ExPurchaseOrderId = dbObj.ExPurchaseOrderId;
            this.PurchaseRequest = dbObj.PurchaseRequest;
            this.PurchaseRequestId = dbObj.PurchaseRequestId;
            this.ExRequest = dbObj.ExRequest;
            this.Required = dbObj.Required;
            this.POCreateDate = dbObj.POCreateDate;
            this.Currency = dbObj.Currency;
            this.ExVendor = dbObj.ExVendor;
            this.ExVendorId = dbObj.ExVendorId;
            this.ExVendorSiteId = dbObj.ExVendorSiteId;
            this.PRLineItemId = dbObj.PRLineItemId;
            this.LineNumber = dbObj.LineNumber;
            this.ExPurchaseOrderLineId = dbObj.ExPurchaseOrderLineId;
            this.ExPart = dbObj.ExPart;
            this.ExPartId = dbObj.ExPartId;
            this.Description = dbObj.Description;
            this.Category = dbObj.Category;
            this.PurchaseQuantity = dbObj.PurchaseQuantity;
            this.PurchaseUOM = dbObj.PurchaseUOM;
            this.UnitCost = dbObj.UnitCost;
            this.UOMConversion = dbObj.UOMConversion;
            this.WorkOrder = dbObj.WorkOrder;
            this.LineStatus = dbObj.LineStatus;
            this.ErrorMessage = dbObj.ErrorMessage;
            this.LastProcess = dbObj.LastProcess;
            this.Revision = dbObj.Revision;
            this.PaymentTerms = dbObj.PaymentTerms;
            this.BillToAddress1 = dbObj.BillToAddress1;
            this.BillToAddress2 = dbObj.BillToAddress2;
            this.BillToCity = dbObj.BillToCity;
            this.BillToState = dbObj.BillToState;
            this.BillToZip = dbObj.BillToZip;
            this.BillToCountry = dbObj.BillToCountry;
            this.ShipToAddress1 = dbObj.ShipToAddress1;
            this.ShipToAddress2 = dbObj.ShipToAddress2;
            this.ShipToCity = dbObj.ShipToCity;
            this.ShipToState = dbObj.ShipToState;
            this.ShipToZip = dbObj.ShipToZip;
            this.ShipToCountry = dbObj.ShipToCountry;
            this.POBuyer_PersonnelId = dbObj.POBuyer_PersonnelId;
            this.POCreator_PersonnelId = dbObj.POCreator_PersonnelId;
            this.VendorAutoEmail = dbObj.VendorAutoEmail;
            this.VendorEmailAddress = dbObj.VendorEmailAddress;
            this.PurchaseOrderId = dbObj.PurchaseOrderId;
            this.ExpenseAccount = dbObj.ExpenseAccount;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_POImport2 dbObj = new b_POImport2();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_POImport2 ToDatabaseObject()
        {
            b_POImport2 dbObj = new b_POImport2();
            dbObj.ClientId = this.ClientId;
            dbObj.POImport2Id = this.POImport2Id;
            dbObj.SiteId = this.SiteId;
            dbObj.PurchaseOrder = this.PurchaseOrder;
            dbObj.ExPurchaseOrderId = this.ExPurchaseOrderId;
            dbObj.PurchaseRequest = this.PurchaseRequest;
            dbObj.PurchaseRequestId = this.PurchaseRequestId;
            dbObj.ExRequest = this.ExRequest;
            dbObj.Required = this.Required;
            dbObj.POCreateDate = this.POCreateDate;
            dbObj.Currency = this.Currency;
            dbObj.ExVendor = this.ExVendor;
            dbObj.ExVendorId = this.ExVendorId;
            dbObj.ExVendorSiteId = this.ExVendorSiteId;
            dbObj.PRLineItemId = this.PRLineItemId;
            dbObj.LineNumber = this.LineNumber;
            dbObj.ExPurchaseOrderLineId = this.ExPurchaseOrderLineId;
            dbObj.ExPart = this.ExPart;
            dbObj.ExPartId = this.ExPartId;
            dbObj.Description = this.Description;
            dbObj.Category = this.Category;
            dbObj.PurchaseQuantity = this.PurchaseQuantity;
            dbObj.PurchaseUOM = this.PurchaseUOM;
            dbObj.UnitCost = this.UnitCost;
            dbObj.UOMConversion = this.UOMConversion;
            dbObj.WorkOrder = this.WorkOrder;
            dbObj.LineStatus = this.LineStatus;
            dbObj.ErrorMessage = this.ErrorMessage;
            dbObj.LastProcess = this.LastProcess;
            dbObj.Revision = this.Revision;
            dbObj.PaymentTerms = this.PaymentTerms;
            dbObj.BillToAddress1 = this.BillToAddress1;
            dbObj.BillToAddress2 = this.BillToAddress2;
            dbObj.BillToCity = this.BillToCity;
            dbObj.BillToState = this.BillToState;
            dbObj.BillToZip = this.BillToZip;
            dbObj.BillToCountry = this.BillToCountry;
            dbObj.ShipToAddress1 = this.ShipToAddress1;
            dbObj.ShipToAddress2 = this.ShipToAddress2;
            dbObj.ShipToCity = this.ShipToCity;
            dbObj.ShipToState = this.ShipToState;
            dbObj.ShipToZip = this.ShipToZip;
            dbObj.ShipToCountry = this.ShipToCountry;
            dbObj.POBuyer_PersonnelId = this.POBuyer_PersonnelId;
            dbObj.POCreator_PersonnelId = this.POCreator_PersonnelId;
            dbObj.VendorAutoEmail = this.VendorAutoEmail;
            dbObj.VendorEmailAddress = this.VendorEmailAddress;
            dbObj.PurchaseOrderId = this.PurchaseOrderId;
            dbObj.ExpenseAccount = this.ExpenseAccount;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            POImport2_Create trans = new POImport2_Create();
            trans.POImport2 = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.POImport2);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            POImport2_Retrieve trans = new POImport2_Retrieve();
            trans.POImport2 = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.POImport2);
        }

        public void Update(DatabaseKey dbKey) 
        {
            POImport2_Update trans = new POImport2_Update();
            trans.POImport2 = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.POImport2);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            POImport2_Delete trans = new POImport2_Delete();
            trans.POImport2 = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.POImport2Id;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _POImport2Id;
        private long _SiteId;
        private string _PurchaseOrder;
        private long _ExPurchaseOrderId;
        private string _PurchaseRequest;
        private long _PurchaseRequestId;
        private string _ExRequest;
        private DateTime? _Required;
        private DateTime? _POCreateDate;
        private string _Currency;
        private string _ExVendor;
        private long _ExVendorId;
        private long _ExVendorSiteId;
        private long _PRLineItemId;
        private int _LineNumber;
        private long _ExPurchaseOrderLineId;
        private string _ExPart;
        private long _ExPartId;
        private string _Description;
        private string _Category;
        private decimal _PurchaseQuantity;
        private string _PurchaseUOM;
        private decimal _UnitCost;
        private decimal _UOMConversion;
        private string _WorkOrder;
        private string _LineStatus;
        private string _ErrorMessage;
        private DateTime? _LastProcess;
        private int _Revision;
        private string _PaymentTerms;
        private string _BillToAddress1;
        private string _BillToAddress2;
        private string _BillToCity;
        private string _BillToState;
        private string _BillToZip;
        private string _BillToCountry;
        private string _ShipToAddress1;
        private string _ShipToAddress2;
        private string _ShipToCity;
        private string _ShipToState;
        private string _ShipToZip;
        private string _ShipToCountry;
        private long _POBuyer_PersonnelId;
        private long _POCreator_PersonnelId;
        private bool _VendorAutoEmail;
        private string _VendorEmailAddress;
        private long _PurchaseOrderId;
        private string _ExpenseAccount;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// POImport2Id property
        /// </summary>
        [DataMember]
        public long POImport2Id
        {
            get { return _POImport2Id; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _POImport2Id); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// PurchaseOrder property
        /// </summary>
        [DataMember]
        public string PurchaseOrder
        {
            get { return _PurchaseOrder; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseOrder); }
        }

        /// <summary>
        /// ExPurchaseOrderId property
        /// </summary>
        [DataMember]
        public long ExPurchaseOrderId
        {
            get { return _ExPurchaseOrderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExPurchaseOrderId); }
        }

        /// <summary>
        /// PurchaseRequest property
        /// </summary>
        [DataMember]
        public string PurchaseRequest
        {
            get { return _PurchaseRequest; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseRequest); }
        }

        /// <summary>
        /// PurchaseRequestId property
        /// </summary>
        [DataMember]
        public long PurchaseRequestId
        {
            get { return _PurchaseRequestId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseRequestId); }
        }

        /// <summary>
        /// ExRequest property
        /// </summary>
        [DataMember]
        public string ExRequest
        {
            get { return _ExRequest; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ExRequest); }
        }

        /// <summary>
        /// Required property
        /// </summary>
        [DataMember]
        public DateTime? Required
        {
            get { return _Required; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _Required); }
        }

        /// <summary>
        /// POCreateDate property
        /// </summary>
        [DataMember]
        public DateTime? POCreateDate
        {
            get { return _POCreateDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _POCreateDate); }
        }

        /// <summary>
        /// Currency property
        /// </summary>
        [DataMember]
        public string Currency
        {
            get { return _Currency; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Currency); }
        }

        /// <summary>
        /// ExVendor property
        /// </summary>
        [DataMember]
        public string ExVendor
        {
            get { return _ExVendor; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ExVendor); }
        }

        /// <summary>
        /// ExVendorId property
        /// </summary>
        [DataMember]
        public long ExVendorId
        {
            get { return _ExVendorId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExVendorId); }
        }

        /// <summary>
        /// ExVendorSiteId property
        /// </summary>
        [DataMember]
        public long ExVendorSiteId
        {
            get { return _ExVendorSiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExVendorSiteId); }
        }

        /// <summary>
        /// PRLineItemId property
        /// </summary>
        [DataMember]
        public long PRLineItemId
        {
            get { return _PRLineItemId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PRLineItemId); }
        }

        /// <summary>
        /// LineNumber property
        /// </summary>
        [DataMember]
        public int LineNumber
        {
            get { return _LineNumber; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _LineNumber); }
        }

        /// <summary>
        /// ExPurchaseOrderLineId property
        /// </summary>
        [DataMember]
        public long ExPurchaseOrderLineId
        {
            get { return _ExPurchaseOrderLineId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExPurchaseOrderLineId); }
        }

        /// <summary>
        /// ExPart property
        /// </summary>
        [DataMember]
        public string ExPart
        {
            get { return _ExPart; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ExPart); }
        }

        /// <summary>
        /// ExPartId property
        /// </summary>
        [DataMember]
        public long ExPartId
        {
            get { return _ExPartId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExPartId); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// Category property
        /// </summary>
        [DataMember]
        public string Category
        {
            get { return _Category; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Category); }
        }

        /// <summary>
        /// PurchaseQuantity property
        /// </summary>
        [DataMember]
        public decimal PurchaseQuantity
        {
            get { return _PurchaseQuantity; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseQuantity); }
        }

        /// <summary>
        /// PurchaseUOM property
        /// </summary>
        [DataMember]
        public string PurchaseUOM
        {
            get { return _PurchaseUOM; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseUOM); }
        }

        /// <summary>
        /// UnitCost property
        /// </summary>
        [DataMember]
        public decimal UnitCost
        {
            get { return _UnitCost; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _UnitCost); }
        }

        /// <summary>
        /// UOMConversion property
        /// </summary>
        [DataMember]
        public decimal UOMConversion
        {
            get { return _UOMConversion; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _UOMConversion); }
        }

        /// <summary>
        /// WorkOrder property
        /// </summary>
        [DataMember]
        public string WorkOrder
        {
            get { return _WorkOrder; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _WorkOrder); }
        }

        /// <summary>
        /// LineStatus property
        /// </summary>
        [DataMember]
        public string LineStatus
        {
            get { return _LineStatus; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _LineStatus); }
        }

        /// <summary>
        /// ErrorMessage property
        /// </summary>
        [DataMember]
        public string ErrorMessage
        {
            get { return _ErrorMessage; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ErrorMessage); }
        }

        /// <summary>
        /// LastProcess property
        /// </summary>
        [DataMember]
        public DateTime? LastProcess
        {
            get { return _LastProcess; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _LastProcess); }
        }

        /// <summary>
        /// Revision property
        /// </summary>
        [DataMember]
        public int Revision
        {
            get { return _Revision; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _Revision); }
        }

        /// <summary>
        /// PaymentTerms property
        /// </summary>
        [DataMember]
        public string PaymentTerms
        {
            get { return _PaymentTerms; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PaymentTerms); }
        }

        /// <summary>
        /// BillToAddress1 property
        /// </summary>
        [DataMember]
        public string BillToAddress1
        {
            get { return _BillToAddress1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _BillToAddress1); }
        }

        /// <summary>
        /// BillToAddress2 property
        /// </summary>
        [DataMember]
        public string BillToAddress2
        {
            get { return _BillToAddress2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _BillToAddress2); }
        }

        /// <summary>
        /// BillToCity property
        /// </summary>
        [DataMember]
        public string BillToCity
        {
            get { return _BillToCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _BillToCity); }
        }

        /// <summary>
        /// BillToState property
        /// </summary>
        [DataMember]
        public string BillToState
        {
            get { return _BillToState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _BillToState); }
        }

        /// <summary>
        /// BillToZip property
        /// </summary>
        [DataMember]
        public string BillToZip
        {
            get { return _BillToZip; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _BillToZip); }
        }

        /// <summary>
        /// BillToCountry property
        /// </summary>
        [DataMember]
        public string BillToCountry
        {
            get { return _BillToCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _BillToCountry); }
        }

        /// <summary>
        /// ShipToAddress1 property
        /// </summary>
        [DataMember]
        public string ShipToAddress1
        {
            get { return _ShipToAddress1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ShipToAddress1); }
        }

        /// <summary>
        /// ShipToAddress2 property
        /// </summary>
        [DataMember]
        public string ShipToAddress2
        {
            get { return _ShipToAddress2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ShipToAddress2); }
        }

        /// <summary>
        /// ShipToCity property
        /// </summary>
        [DataMember]
        public string ShipToCity
        {
            get { return _ShipToCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ShipToCity); }
        }

        /// <summary>
        /// ShipToState property
        /// </summary>
        [DataMember]
        public string ShipToState
        {
            get { return _ShipToState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ShipToState); }
        }

        /// <summary>
        /// ShipToZip property
        /// </summary>
        [DataMember]
        public string ShipToZip
        {
            get { return _ShipToZip; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ShipToZip); }
        }

        /// <summary>
        /// ShipToCountry property
        /// </summary>
        [DataMember]
        public string ShipToCountry
        {
            get { return _ShipToCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ShipToCountry); }
        }

        /// <summary>
        /// POBuyer_PersonnelId property
        /// </summary>
        [DataMember]
        public long POBuyer_PersonnelId
        {
            get { return _POBuyer_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _POBuyer_PersonnelId); }
        }

        /// <summary>
        /// POCreator_PersonnelId property
        /// </summary>
        [DataMember]
        public long POCreator_PersonnelId
        {
            get { return _POCreator_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _POCreator_PersonnelId); }
        }

        /// <summary>
        /// VendorAutoEmail property
        /// </summary>
        [DataMember]
        public bool VendorAutoEmail
        {
            get { return _VendorAutoEmail; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _VendorAutoEmail); }
        }

        /// <summary>
        /// VendorEmailAddress property
        /// </summary>
        [DataMember]
        public string VendorEmailAddress
        {
            get { return _VendorEmailAddress; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _VendorEmailAddress); }
        }

        /// <summary>
        /// PurchaseOrderId property
        /// </summary>
        [DataMember]
        public long PurchaseOrderId
        {
            get { return _PurchaseOrderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseOrderId); }
        }

        /// <summary>
        /// ExpenseAccount property
        /// </summary>
        [DataMember]
        public string ExpenseAccount
        {
            get { return _ExpenseAccount; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ExpenseAccount); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
