/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2022 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the WOCompletionSettings table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class WOCompletionSettings : DataContractBase
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public WOCompletionSettings()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_WOCompletionSettings dbObj)
        {
            this.WOCompletionSettingsId = dbObj.WOCompletionSettingsId;
            this.ClientId = dbObj.ClientId;
            this.UseWOCompletionWizard = dbObj.UseWOCompletionWizard;
            this.WOCommentTab = dbObj.WOCommentTab;
            this.TimecardTab = dbObj.TimecardTab;
            this.AutoAddTimecard = dbObj.AutoAddTimecard;
            this.WOCompCriteriaTab = dbObj.WOCompCriteriaTab;
            this.WOCompCriteriaTitle = dbObj.WOCompCriteriaTitle;
            this.WOCompCriteria = dbObj.WOCompCriteria;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_WOCompletionSettings dbObj = new b_WOCompletionSettings();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_WOCompletionSettings ToDatabaseObject()
        {
            b_WOCompletionSettings dbObj = new b_WOCompletionSettings();
            dbObj.WOCompletionSettingsId = this.WOCompletionSettingsId;
            dbObj.ClientId = this.ClientId;
            dbObj.UseWOCompletionWizard = this.UseWOCompletionWizard;
            dbObj.WOCommentTab = this.WOCommentTab;
            dbObj.TimecardTab = this.TimecardTab;
            dbObj.AutoAddTimecard = this.AutoAddTimecard;
            dbObj.WOCompCriteriaTab = this.WOCompCriteriaTab;
            dbObj.WOCompCriteriaTitle = this.WOCompCriteriaTitle;
            dbObj.WOCompCriteria = this.WOCompCriteria;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            WOCompletionSettings_Create trans = new WOCompletionSettings_Create();
            trans.WOCompletionSettings = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.WOCompletionSettings);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            WOCompletionSettings_Retrieve trans = new WOCompletionSettings_Retrieve();
            trans.WOCompletionSettings = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.WOCompletionSettings);
        }

        public void Update(DatabaseKey dbKey)
        {
            WOCompletionSettings_Update trans = new WOCompletionSettings_Update();
            trans.WOCompletionSettings = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.WOCompletionSettings);
        }

        public void Delete(DatabaseKey dbKey)
        {
            WOCompletionSettings_Delete trans = new WOCompletionSettings_Delete();
            trans.WOCompletionSettings = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.WOCompletionSettingsId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _WOCompletionSettingsId;
        private long _ClientId;
        private bool _UseWOCompletionWizard;
        private bool _WOCommentTab;
        private bool _TimecardTab;
        private bool _AutoAddTimecard;
        private bool _WOCompCriteriaTab;
        private string _WOCompCriteriaTitle;
        private string _WOCompCriteria;
        #endregion

        #region Properties


        /// <summary>
        /// WOCompletionSettingsId property
        /// </summary>
        [DataMember]
        public long WOCompletionSettingsId
        {
            get { return _WOCompletionSettingsId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _WOCompletionSettingsId); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// UseWOCompletionWizard property
        /// </summary>
        [DataMember]
        public bool UseWOCompletionWizard
        {
            get { return _UseWOCompletionWizard; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _UseWOCompletionWizard); }
        }

        /// <summary>
        /// WOCommentTab property
        /// </summary>
        [DataMember]
        public bool WOCommentTab
        {
            get { return _WOCommentTab; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _WOCommentTab); }
        }

        /// <summary>
        /// TimecardTab property
        /// </summary>
        [DataMember]
        public bool TimecardTab
        {
            get { return _TimecardTab; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _TimecardTab); }
        }

        /// <summary>
        /// AutoAddTimecard property
        /// </summary>
        [DataMember]
        public bool AutoAddTimecard
        {
            get { return _AutoAddTimecard; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _AutoAddTimecard); }
        }

        /// <summary>
        /// WOCompCriteriaTab property
        /// </summary>
        [DataMember]
        public bool WOCompCriteriaTab
        {
            get { return _WOCompCriteriaTab; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _WOCompCriteriaTab); }
        }

        /// <summary>
        /// WOCompCriteriaTitle property
        /// </summary>
        [DataMember]
        public string WOCompCriteriaTitle
        {
            get { return _WOCompCriteriaTitle; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _WOCompCriteriaTitle); }
        }

        /// <summary>
        /// WOCompCriteria property
        /// </summary>
        [DataMember]
        public string WOCompCriteria
        {
            get { return _WOCompCriteria; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _WOCompCriteria); }
        }
        #endregion


    }
}
