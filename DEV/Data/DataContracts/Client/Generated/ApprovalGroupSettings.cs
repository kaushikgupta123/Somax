/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2022 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the ApprovalGroupSettings table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class ApprovalGroupSettings : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ApprovalGroupSettings()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_ApprovalGroupSettings dbObj)
        {
		            this.ApprovalGroupSettingsId = dbObj.ApprovalGroupSettingsId;
            this.ClientId = dbObj.ClientId;
            this.SiteId = dbObj.SiteId;
            this.WorkRequests = dbObj.WorkRequests;
            this.PurchaseRequests = dbObj.PurchaseRequests;
            this.MaterialRequests = dbObj.MaterialRequests;
            this.SanitationRequests = dbObj.SanitationRequests;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_ApprovalGroupSettings dbObj = new b_ApprovalGroupSettings();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_ApprovalGroupSettings ToDatabaseObject()
        {
            b_ApprovalGroupSettings dbObj = new b_ApprovalGroupSettings();
            dbObj.ApprovalGroupSettingsId = this.ApprovalGroupSettingsId;
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.WorkRequests = this.WorkRequests;
            dbObj.PurchaseRequests = this.PurchaseRequests;
            dbObj.MaterialRequests = this.MaterialRequests;
            dbObj.SanitationRequests = this.SanitationRequests;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            ApprovalGroupSettings_Create trans = new ApprovalGroupSettings_Create();
            trans.ApprovalGroupSettings = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.ApprovalGroupSettings);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            ApprovalGroupSettings_Retrieve trans = new ApprovalGroupSettings_Retrieve();
            trans.ApprovalGroupSettings = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.ApprovalGroupSettings);
        }

        public void Update(DatabaseKey dbKey) 
        {
            ApprovalGroupSettings_Update trans = new ApprovalGroupSettings_Update();
            trans.ApprovalGroupSettings = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.ApprovalGroupSettings);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            ApprovalGroupSettings_Delete trans = new ApprovalGroupSettings_Delete();
            trans.ApprovalGroupSettings = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.ApprovalGroupSettingsId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ApprovalGroupSettingsId;
        private long _ClientId;
        private long _SiteId;
        private bool _WorkRequests;
        private bool _PurchaseRequests;
        private bool _MaterialRequests;
        private bool _SanitationRequests;
        #endregion
        
        #region Properties


        /// <summary>
        /// ApprovalGroupSettingsId property
        /// </summary>
        [DataMember]
        public long ApprovalGroupSettingsId
        {
            get { return _ApprovalGroupSettingsId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ApprovalGroupSettingsId); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// WorkRequests property
        /// </summary>
        [DataMember]
        public bool WorkRequests
        {
            get { return _WorkRequests; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _WorkRequests); }
        }

        /// <summary>
        /// PurchaseRequests property
        /// </summary>
        [DataMember]
        public bool PurchaseRequests
        {
            get { return _PurchaseRequests; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseRequests); }
        }

        /// <summary>
        /// MaterialRequests property
        /// </summary>
        [DataMember]
        public bool MaterialRequests
        {
            get { return _MaterialRequests; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _MaterialRequests); }
        }

        /// <summary>
        /// SanitationRequests property
        /// </summary>
        [DataMember]
        public bool SanitationRequests
        {
            get { return _SanitationRequests; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _SanitationRequests); }
        }
        #endregion
		
		
    }
}
