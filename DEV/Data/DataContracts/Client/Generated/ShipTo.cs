/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2024 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the ShipTo table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class ShipTo : DataContractBase, IPermission 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ShipTo()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_ShipTo dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.ShipToId = dbObj.ShipToId;
            this.SiteId = dbObj.SiteId;
            this.AreaId = dbObj.AreaId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.ClientLookupId = dbObj.ClientLookupId;
            this.Address1 = dbObj.Address1;
            this.Address2 = dbObj.Address2;
            this.Address3 = dbObj.Address3;
            this.AddressCity = dbObj.AddressCity;
            this.AddressCountry = dbObj.AddressCountry;
            this.AddressPostCode = dbObj.AddressPostCode;
            this.AddressState = dbObj.AddressState;
            this.EmailAddress = dbObj.EmailAddress;
            this.FaxNumber = dbObj.FaxNumber;
            this.AttnName = dbObj.AttnName;
            this.PhoneNumber = dbObj.PhoneNumber;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_ShipTo dbObj = new b_ShipTo();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_ShipTo ToDatabaseObject()
        {
            b_ShipTo dbObj = new b_ShipTo();
            dbObj.ClientId = this.ClientId;
            dbObj.ShipToId = this.ShipToId;
            dbObj.SiteId = this.SiteId;
            dbObj.AreaId = this.AreaId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.ClientLookupId = this.ClientLookupId;
            dbObj.Address1 = this.Address1;
            dbObj.Address2 = this.Address2;
            dbObj.Address3 = this.Address3;
            dbObj.AddressCity = this.AddressCity;
            dbObj.AddressCountry = this.AddressCountry;
            dbObj.AddressPostCode = this.AddressPostCode;
            dbObj.AddressState = this.AddressState;
            dbObj.EmailAddress = this.EmailAddress;
            dbObj.FaxNumber = this.FaxNumber;
            dbObj.AttnName = this.AttnName;
            dbObj.PhoneNumber = this.PhoneNumber;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            ShipTo_Create trans = new ShipTo_Create();
            trans.ShipTo = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.ShipTo);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            ShipTo_Retrieve trans = new ShipTo_Retrieve();
            trans.ShipTo = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.ShipTo);
        }

        public void Update(DatabaseKey dbKey) 
        {
            ShipTo_Update trans = new ShipTo_Update();
            trans.ShipTo = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.ShipTo);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            ShipTo_Delete trans = new ShipTo_Delete();
            trans.ShipTo = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.ShipToId;
			AuditTargetSiteId = this.SiteId;
			AuditTargetAreaId = this.AreaId;
			AuditTargetDepartmentId = this.DepartmentId;
			AuditTargetStoreRoomId = this.StoreroomId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _ShipToId;
        private long _SiteId;
        private long _AreaId;
        private long _DepartmentId;
        private long _StoreroomId;
        private string _ClientLookupId;
        private string _Address1;
        private string _Address2;
        private string _Address3;
        private string _AddressCity;
        private string _AddressCountry;
        private string _AddressPostCode;
        private string _AddressState;
        private string _EmailAddress;
        private string _FaxNumber;
        private string _AttnName;
        private string _PhoneNumber;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// ShipToId property
        /// </summary>
        [DataMember]
        public long ShipToId
        {
            get { return _ShipToId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ShipToId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// AreaId property
        /// </summary>
        [DataMember]
        public long AreaId
        {
            get { return _AreaId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AreaId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// ClientLookupId property
        /// </summary>
        [DataMember]
        public string ClientLookupId
        {
            get { return _ClientLookupId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ClientLookupId); }
        }

        /// <summary>
        /// Address1 property
        /// </summary>
        [DataMember]
        public string Address1
        {
            get { return _Address1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address1); }
        }

        /// <summary>
        /// Address2 property
        /// </summary>
        [DataMember]
        public string Address2
        {
            get { return _Address2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address2); }
        }

        /// <summary>
        /// Address3 property
        /// </summary>
        [DataMember]
        public string Address3
        {
            get { return _Address3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address3); }
        }

        /// <summary>
        /// AddressCity property
        /// </summary>
        [DataMember]
        public string AddressCity
        {
            get { return _AddressCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCity); }
        }

        /// <summary>
        /// AddressCountry property
        /// </summary>
        [DataMember]
        public string AddressCountry
        {
            get { return _AddressCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCountry); }
        }

        /// <summary>
        /// AddressPostCode property
        /// </summary>
        [DataMember]
        public string AddressPostCode
        {
            get { return _AddressPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressPostCode); }
        }

        /// <summary>
        /// AddressState property
        /// </summary>
        [DataMember]
        public string AddressState
        {
            get { return _AddressState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressState); }
        }

        /// <summary>
        /// EmailAddress property
        /// </summary>
        [DataMember]
        public string EmailAddress
        {
            get { return _EmailAddress; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _EmailAddress); }
        }

        /// <summary>
        /// FaxNumber property
        /// </summary>
        [DataMember]
        public string FaxNumber
        {
            get { return _FaxNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FaxNumber); }
        }

        /// <summary>
        /// AttnName property
        /// </summary>
        [DataMember]
        public string AttnName
        {
            get { return _AttnName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AttnName); }
        }

        /// <summary>
        /// PhoneNumber property
        /// </summary>
        [DataMember]
        public string PhoneNumber
        {
            get { return _PhoneNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PhoneNumber); }
        }
        #endregion
		
		
    }
}
