/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2023 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Vendor table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class Vendor : DataContractBase, IPermission
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Vendor()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_Vendor dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.VendorId = dbObj.VendorId;
            this.SiteId = dbObj.SiteId;
            this.AreaId = dbObj.AreaId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.ClientLookupId = dbObj.ClientLookupId;
            this.Address1 = dbObj.Address1;
            this.Address2 = dbObj.Address2;
            this.Address3 = dbObj.Address3;
            this.AddressCity = dbObj.AddressCity;
            this.AddressCountry = dbObj.AddressCountry;
            this.AddressPostCode = dbObj.AddressPostCode;
            this.AddressState = dbObj.AddressState;
            this.CustomerAccount = dbObj.CustomerAccount;
            this.EmailAddress = dbObj.EmailAddress;
            this.FaxNumber = dbObj.FaxNumber;
            this.FOBCode = dbObj.FOBCode;
            this.InactiveFlag = dbObj.InactiveFlag;
            this.Name = dbObj.Name;
            this.PhoneNumber = dbObj.PhoneNumber;
            this.RemitAddress1 = dbObj.RemitAddress1;
            this.RemitAddress2 = dbObj.RemitAddress2;
            this.RemitAddress3 = dbObj.RemitAddress3;
            this.RemitCity = dbObj.RemitCity;
            this.RemitCountry = dbObj.RemitCountry;
            this.RemitPostCode = dbObj.RemitPostCode;
            this.RemitState = dbObj.RemitState;
            this.RemitUseBusiness = dbObj.RemitUseBusiness;
            this.Terms = dbObj.Terms;
            this.Type = dbObj.Type;
            this.Website = dbObj.Website;
            this.VendorMasterId = dbObj.VendorMasterId;
            this.AutoEmailPO = dbObj.AutoEmailPO;
            this.IsExternal = dbObj.IsExternal;
            this.PunchoutIndicator = dbObj.PunchoutIndicator;
            this.VendorDomain = dbObj.VendorDomain;
            this.VendorIdentity = dbObj.VendorIdentity;
            this.SharedSecret = dbObj.SharedSecret;
            this.SenderDomain = dbObj.SenderDomain;
            this.SenderIdentity = dbObj.SenderIdentity;
            this.PunchoutURL = dbObj.PunchoutURL;
            this.AutoSendPunchOutPO = dbObj.AutoSendPunchOutPO;
            this.SendPunchoutPOURL = dbObj.SendPunchoutPOURL;
            this.SendPunchoutPOEmail = dbObj.SendPunchoutPOEmail;
            this.SourceId = dbObj.SourceId;
            this.InsuranceOverride = dbObj.InsuranceOverride;
            this.InsuranceOverrideDate = dbObj.InsuranceOverrideDate;
            this.InsuranceRequired = dbObj.InsuranceRequired;
            this.InsuranceSource = dbObj.InsuranceSource;
            this.InsuranceExpireDate = dbObj.InsuranceExpireDate;
            this.ContractorOwner = dbObj.ContractorOwner;
            this.SICCode = dbObj.SICCode;
            this.OSHARate = dbObj.OSHARate;
            this.ExpModRate = dbObj.ExpModRate;
            this.NAICSCode = dbObj.NAICSCode;
            this.ClassCode = dbObj.ClassCode;
            this.AssetMgtOverride = dbObj.AssetMgtOverride;
            this.AssetMgtOverrideDate = dbObj.AssetMgtOverrideDate;
            this.AssetMgtRequired = dbObj.AssetMgtRequired;
            this.AssetMgtSource = dbObj.AssetMgtSource;
            this.AssetMgtExpireDate = dbObj.AssetMgtExpireDate;
            this.AssetMgtOwner = dbObj.AssetMgtOwner;
            this.UpdateIndex = dbObj.UpdateIndex;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_Vendor dbObj = new b_Vendor();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_Vendor ToDatabaseObject()
        {
            b_Vendor dbObj = new b_Vendor();
            dbObj.ClientId = this.ClientId;
            dbObj.VendorId = this.VendorId;
            dbObj.SiteId = this.SiteId;
            dbObj.AreaId = this.AreaId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.ClientLookupId = this.ClientLookupId;
            dbObj.Address1 = this.Address1;
            dbObj.Address2 = this.Address2;
            dbObj.Address3 = this.Address3;
            dbObj.AddressCity = this.AddressCity;
            dbObj.AddressCountry = this.AddressCountry;
            dbObj.AddressPostCode = this.AddressPostCode;
            dbObj.AddressState = this.AddressState;
            dbObj.CustomerAccount = this.CustomerAccount;
            dbObj.EmailAddress = this.EmailAddress;
            dbObj.FaxNumber = this.FaxNumber;
            dbObj.FOBCode = this.FOBCode;
            dbObj.InactiveFlag = this.InactiveFlag;
            dbObj.Name = this.Name;
            dbObj.PhoneNumber = this.PhoneNumber;
            dbObj.RemitAddress1 = this.RemitAddress1;
            dbObj.RemitAddress2 = this.RemitAddress2;
            dbObj.RemitAddress3 = this.RemitAddress3;
            dbObj.RemitCity = this.RemitCity;
            dbObj.RemitCountry = this.RemitCountry;
            dbObj.RemitPostCode = this.RemitPostCode;
            dbObj.RemitState = this.RemitState;
            dbObj.RemitUseBusiness = this.RemitUseBusiness;
            dbObj.Terms = this.Terms;
            dbObj.Type = this.Type;
            dbObj.Website = this.Website;
            dbObj.VendorMasterId = this.VendorMasterId;
            dbObj.AutoEmailPO = this.AutoEmailPO;
            dbObj.IsExternal = this.IsExternal;
            dbObj.PunchoutIndicator = this.PunchoutIndicator;
            dbObj.VendorDomain = this.VendorDomain;
            dbObj.VendorIdentity = this.VendorIdentity;
            dbObj.SharedSecret = this.SharedSecret;
            dbObj.SenderDomain = this.SenderDomain;
            dbObj.SenderIdentity = this.SenderIdentity;
            dbObj.PunchoutURL = this.PunchoutURL;
            dbObj.AutoSendPunchOutPO = this.AutoSendPunchOutPO;
            dbObj.SendPunchoutPOURL = this.SendPunchoutPOURL;
            dbObj.SendPunchoutPOEmail = this.SendPunchoutPOEmail;
            dbObj.SourceId = this.SourceId;
            dbObj.InsuranceOverride = this.InsuranceOverride;
            dbObj.InsuranceOverrideDate = this.InsuranceOverrideDate;
            dbObj.InsuranceRequired = this.InsuranceRequired;
            dbObj.InsuranceSource = this.InsuranceSource;
            dbObj.InsuranceExpireDate = this.InsuranceExpireDate;
            dbObj.ContractorOwner = this.ContractorOwner;
            dbObj.SICCode = this.SICCode;
            dbObj.OSHARate = this.OSHARate;
            dbObj.ExpModRate = this.ExpModRate;
            dbObj.NAICSCode = this.NAICSCode;
            dbObj.ClassCode = this.ClassCode;
            dbObj.AssetMgtOverride = this.AssetMgtOverride;
            dbObj.AssetMgtOverrideDate = this.AssetMgtOverrideDate;
            dbObj.AssetMgtRequired = this.AssetMgtRequired;
            dbObj.AssetMgtSource = this.AssetMgtSource;
            dbObj.AssetMgtExpireDate = this.AssetMgtExpireDate;
            dbObj.AssetMgtOwner = this.AssetMgtOwner;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            Vendor_Create trans = new Vendor_Create();
            trans.Vendor = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.Vendor);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            Vendor_Retrieve trans = new Vendor_Retrieve();
            trans.Vendor = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.Vendor);
        }

        public void Update(DatabaseKey dbKey)
        {
            Vendor_Update trans = new Vendor_Update();
            trans.Vendor = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.Vendor);
        }

        public void Delete(DatabaseKey dbKey)
        {
            Vendor_Delete trans = new Vendor_Delete();
            trans.Vendor = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.VendorId;
            AuditTargetSiteId = this.SiteId;
            AuditTargetAreaId = this.AreaId;
            AuditTargetDepartmentId = this.DepartmentId;
            AuditTargetStoreRoomId = this.StoreroomId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _ClientId;
        private long _VendorId;
        private long _SiteId;
        private long _AreaId;
        private long _DepartmentId;
        private long _StoreroomId;
        private string _ClientLookupId;
        private string _Address1;
        private string _Address2;
        private string _Address3;
        private string _AddressCity;
        private string _AddressCountry;
        private string _AddressPostCode;
        private string _AddressState;
        private string _CustomerAccount;
        private string _EmailAddress;
        private string _FaxNumber;
        private string _FOBCode;
        private bool _InactiveFlag;
        private string _Name;
        private string _PhoneNumber;
        private string _RemitAddress1;
        private string _RemitAddress2;
        private string _RemitAddress3;
        private string _RemitCity;
        private string _RemitCountry;
        private string _RemitPostCode;
        private string _RemitState;
        private bool _RemitUseBusiness;
        private string _Terms;
        private string _Type;
        private string _Website;
        private long _VendorMasterId;
        private bool _AutoEmailPO;
        private bool _IsExternal;
        private bool _PunchoutIndicator;
        private string _VendorDomain;
        private string _VendorIdentity;
        private string _SharedSecret;
        private string _SenderDomain;
        private string _SenderIdentity;
        private string _PunchoutURL;
        private bool _AutoSendPunchOutPO;
        private string _SendPunchoutPOURL;
        private string _SendPunchoutPOEmail;
        private long _SourceId;
        private bool _InsuranceOverride;
        private DateTime? _InsuranceOverrideDate;
        private bool _InsuranceRequired;
        private long _InsuranceSource;
        private DateTime? _InsuranceExpireDate;
        private long _ContractorOwner;
        private string _SICCode;
        private decimal _OSHARate;
        private decimal _ExpModRate;
        private string _NAICSCode;
        private string _ClassCode;
        private bool _AssetMgtOverride;
        private DateTime? _AssetMgtOverrideDate;
        private bool _AssetMgtRequired;
        private long _AssetMgtSource;
        private DateTime? _AssetMgtExpireDate;
        private long _AssetMgtOwner;
        private int _UpdateIndex;
        #endregion

        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// VendorId property
        /// </summary>
        [DataMember]
        public long VendorId
        {
            get { return _VendorId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// AreaId property
        /// </summary>
        [DataMember]
        public long AreaId
        {
            get { return _AreaId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AreaId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// ClientLookupId property
        /// </summary>
        [DataMember]
        public string ClientLookupId
        {
            get { return _ClientLookupId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ClientLookupId); }
        }

        /// <summary>
        /// Address1 property
        /// </summary>
        [DataMember]
        public string Address1
        {
            get { return _Address1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address1); }
        }

        /// <summary>
        /// Address2 property
        /// </summary>
        [DataMember]
        public string Address2
        {
            get { return _Address2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address2); }
        }

        /// <summary>
        /// Address3 property
        /// </summary>
        [DataMember]
        public string Address3
        {
            get { return _Address3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address3); }
        }

        /// <summary>
        /// AddressCity property
        /// </summary>
        [DataMember]
        public string AddressCity
        {
            get { return _AddressCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCity); }
        }

        /// <summary>
        /// AddressCountry property
        /// </summary>
        [DataMember]
        public string AddressCountry
        {
            get { return _AddressCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCountry); }
        }

        /// <summary>
        /// AddressPostCode property
        /// </summary>
        [DataMember]
        public string AddressPostCode
        {
            get { return _AddressPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressPostCode); }
        }

        /// <summary>
        /// AddressState property
        /// </summary>
        [DataMember]
        public string AddressState
        {
            get { return _AddressState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressState); }
        }

        /// <summary>
        /// CustomerAccount property
        /// </summary>
        [DataMember]
        public string CustomerAccount
        {
            get { return _CustomerAccount; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _CustomerAccount); }
        }

        /// <summary>
        /// EmailAddress property
        /// </summary>
        [DataMember]
        public string EmailAddress
        {
            get { return _EmailAddress; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _EmailAddress); }
        }

        /// <summary>
        /// FaxNumber property
        /// </summary>
        [DataMember]
        public string FaxNumber
        {
            get { return _FaxNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FaxNumber); }
        }

        /// <summary>
        /// FOBCode property
        /// </summary>
        [DataMember]
        public string FOBCode
        {
            get { return _FOBCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FOBCode); }
        }

        /// <summary>
        /// InactiveFlag property
        /// </summary>
        [DataMember]
        public bool InactiveFlag
        {
            get { return _InactiveFlag; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _InactiveFlag); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// PhoneNumber property
        /// </summary>
        [DataMember]
        public string PhoneNumber
        {
            get { return _PhoneNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PhoneNumber); }
        }

        /// <summary>
        /// RemitAddress1 property
        /// </summary>
        [DataMember]
        public string RemitAddress1
        {
            get { return _RemitAddress1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress1); }
        }

        /// <summary>
        /// RemitAddress2 property
        /// </summary>
        [DataMember]
        public string RemitAddress2
        {
            get { return _RemitAddress2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress2); }
        }

        /// <summary>
        /// RemitAddress3 property
        /// </summary>
        [DataMember]
        public string RemitAddress3
        {
            get { return _RemitAddress3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress3); }
        }

        /// <summary>
        /// RemitCity property
        /// </summary>
        [DataMember]
        public string RemitCity
        {
            get { return _RemitCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitCity); }
        }

        /// <summary>
        /// RemitCountry property
        /// </summary>
        [DataMember]
        public string RemitCountry
        {
            get { return _RemitCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitCountry); }
        }

        /// <summary>
        /// RemitPostCode property
        /// </summary>
        [DataMember]
        public string RemitPostCode
        {
            get { return _RemitPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitPostCode); }
        }

        /// <summary>
        /// RemitState property
        /// </summary>
        [DataMember]
        public string RemitState
        {
            get { return _RemitState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitState); }
        }

        /// <summary>
        /// RemitUseBusiness property
        /// </summary>
        [DataMember]
        public bool RemitUseBusiness
        {
            get { return _RemitUseBusiness; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _RemitUseBusiness); }
        }

        /// <summary>
        /// Terms property
        /// </summary>
        [DataMember]
        public string Terms
        {
            get { return _Terms; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Terms); }
        }

        /// <summary>
        /// Type property
        /// </summary>
        [DataMember]
        public string Type
        {
            get { return _Type; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Type); }
        }

        /// <summary>
        /// Website property
        /// </summary>
        [DataMember]
        public string Website
        {
            get { return _Website; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Website); }
        }

        /// <summary>
        /// VendorMasterId property
        /// </summary>
        [DataMember]
        public long VendorMasterId
        {
            get { return _VendorMasterId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorMasterId); }
        }

        /// <summary>
        /// AutoEmailPO property
        /// </summary>
        [DataMember]
        public bool AutoEmailPO
        {
            get { return _AutoEmailPO; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _AutoEmailPO); }
        }

        /// <summary>
        /// IsExternal property
        /// </summary>
        [DataMember]
        public bool IsExternal
        {
            get { return _IsExternal; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _IsExternal); }
        }

        /// <summary>
        /// PunchoutIndicator property
        /// </summary>
        [DataMember]
        public bool PunchoutIndicator
        {
            get { return _PunchoutIndicator; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _PunchoutIndicator); }
        }

        /// <summary>
        /// VendorDomain property
        /// </summary>
        [DataMember]
        public string VendorDomain
        {
            get { return _VendorDomain; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _VendorDomain); }
        }

        /// <summary>
        /// VendorIdentity property
        /// </summary>
        [DataMember]
        public string VendorIdentity
        {
            get { return _VendorIdentity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _VendorIdentity); }
        }

        /// <summary>
        /// SharedSecret property
        /// </summary>
        [DataMember]
        public string SharedSecret
        {
            get { return _SharedSecret; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SharedSecret); }
        }

        /// <summary>
        /// SenderDomain property
        /// </summary>
        [DataMember]
        public string SenderDomain
        {
            get { return _SenderDomain; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SenderDomain); }
        }

        /// <summary>
        /// SenderIdentity property
        /// </summary>
        [DataMember]
        public string SenderIdentity
        {
            get { return _SenderIdentity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SenderIdentity); }
        }

        /// <summary>
        /// PunchoutURL property
        /// </summary>
        [DataMember]
        public string PunchoutURL
        {
            get { return _PunchoutURL; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PunchoutURL); }
        }

        /// <summary>
        /// AutoSendPunchOutPO property
        /// </summary>
        [DataMember]
        public bool AutoSendPunchOutPO
        {
            get { return _AutoSendPunchOutPO; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _AutoSendPunchOutPO); }
        }

        /// <summary>
        /// SendPunchoutPOURL property
        /// </summary>
        [DataMember]
        public string SendPunchoutPOURL
        {
            get { return _SendPunchoutPOURL; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SendPunchoutPOURL); }
        }

        /// <summary>
        /// SendPunchoutPOEmail property
        /// </summary>
        [DataMember]
        public string SendPunchoutPOEmail
        {
            get { return _SendPunchoutPOEmail; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SendPunchoutPOEmail); }
        }

        /// <summary>
        /// SourceId property
        /// </summary>
        [DataMember]
        public long SourceId
        {
            get { return _SourceId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SourceId); }
        }

        /// <summary>
        /// InsuranceOverride property
        /// </summary>
        [DataMember]
        public bool InsuranceOverride
        {
            get { return _InsuranceOverride; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _InsuranceOverride); }
        }

        /// <summary>
        /// InsuranceOverrideDate property
        /// </summary>
        [DataMember]
        public DateTime? InsuranceOverrideDate
        {
            get { return _InsuranceOverrideDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _InsuranceOverrideDate); }
        }

        /// <summary>
        /// InsuranceRequired property
        /// </summary>
        [DataMember]
        public bool InsuranceRequired
        {
            get { return _InsuranceRequired; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _InsuranceRequired); }
        }

        /// <summary>
        /// InsuranceSource property
        /// </summary>
        [DataMember]
        public long InsuranceSource
        {
            get { return _InsuranceSource; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _InsuranceSource); }
        }

        /// <summary>
        /// InsuranceExpireDate property
        /// </summary>
        [DataMember]
        public DateTime? InsuranceExpireDate
        {
            get { return _InsuranceExpireDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _InsuranceExpireDate); }
        }

        /// <summary>
        /// ContractorOwner property
        /// </summary>
        [DataMember]
        public long ContractorOwner
        {
            get { return _ContractorOwner; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ContractorOwner); }
        }

        /// <summary>
        /// SICCode property
        /// </summary>
        [DataMember]
        public string SICCode
        {
            get { return _SICCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SICCode); }
        }

        /// <summary>
        /// OSHARate property
        /// </summary>
        [DataMember]
        public decimal OSHARate
        {
            get { return _OSHARate; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _OSHARate); }
        }

        /// <summary>
        /// ExpModRate property
        /// </summary>
        [DataMember]
        public decimal ExpModRate
        {
            get { return _ExpModRate; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _ExpModRate); }
        }

        /// <summary>
        /// NAICSCode property
        /// </summary>
        [DataMember]
        public string NAICSCode
        {
            get { return _NAICSCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _NAICSCode); }
        }

        /// <summary>
        /// ClassCode property
        /// </summary>
        [DataMember]
        public string ClassCode
        {
            get { return _ClassCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ClassCode); }
        }

        /// <summary>
        /// AssetMgtOverride property
        /// </summary>
        [DataMember]
        public bool AssetMgtOverride
        {
            get { return _AssetMgtOverride; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _AssetMgtOverride); }
        }

        /// <summary>
        /// AssetMgtOverrideDate property
        /// </summary>
        [DataMember]
        public DateTime? AssetMgtOverrideDate
        {
            get { return _AssetMgtOverrideDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _AssetMgtOverrideDate); }
        }

        /// <summary>
        /// AssetMgtRequired property
        /// </summary>
        [DataMember]
        public bool AssetMgtRequired
        {
            get { return _AssetMgtRequired; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _AssetMgtRequired); }
        }

        /// <summary>
        /// AssetMgtSource property
        /// </summary>
        [DataMember]
        public long AssetMgtSource
        {
            get { return _AssetMgtSource; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AssetMgtSource); }
        }

        /// <summary>
        /// AssetMgtExpireDate property
        /// </summary>
        [DataMember]
        public DateTime? AssetMgtExpireDate
        {
            get { return _AssetMgtExpireDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _AssetMgtExpireDate); }
        }

        /// <summary>
        /// AssetMgtOwner property
        /// </summary>
        [DataMember]
        public long AssetMgtOwner
        {
            get { return _AssetMgtOwner; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AssetMgtOwner); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion


    }
}
