/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2016 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the EstimatedCosts table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class EstimatedCosts : DataContractBase
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EstimatedCosts()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_EstimatedCosts dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.EstimatedCostsId = dbObj.EstimatedCostsId;
            this.ObjectType = dbObj.ObjectType;
            this.ObjectId = dbObj.ObjectId;
            this.Category = dbObj.Category;
            this.CategoryId = dbObj.CategoryId;
            this.Description = dbObj.Description;
            this.Duration = dbObj.Duration;
            this.UnitCost = dbObj.UnitCost;
            this.Quantity = dbObj.Quantity;
            this.Source = dbObj.Source;
            this.VendorId = dbObj.VendorId;
            this.UNSPSC = dbObj.UNSPSC;
            this.Status = dbObj.Status;
            this.StoreroomId = dbObj.StoreroomId;
            this.PartStoreroomId = dbObj.PartStoreroomId;
            this.AccountId = dbObj.AccountId;
            this.UnitOfMeasure = dbObj.UnitOfMeasure;
            this.PurchaseRequestId = dbObj.PurchaseRequestId;
            this.PurchaseRequestLineItemId = dbObj.PurchaseRequestLineItemId;
            this.PartHistoryId = dbObj.PartHistoryId;
            this.UpdateIndex = dbObj.UpdateIndex;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_EstimatedCosts dbObj = new b_EstimatedCosts();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_EstimatedCosts ToDatabaseObject()
        {
            b_EstimatedCosts dbObj = new b_EstimatedCosts();
            dbObj.ClientId = this.ClientId;
            dbObj.EstimatedCostsId = this.EstimatedCostsId;
            dbObj.ObjectType = this.ObjectType;
            dbObj.ObjectId = this.ObjectId;
            dbObj.Category = this.Category;
            dbObj.CategoryId = this.CategoryId;
            dbObj.Description = this.Description;
            dbObj.Duration = this.Duration;
            dbObj.UnitCost = this.UnitCost;
            dbObj.Quantity = this.Quantity;
            dbObj.Source = this.Source;
            dbObj.VendorId = this.VendorId;
            dbObj.UNSPSC = this.UNSPSC;
            dbObj.Status = this.Status;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.PartStoreroomId = this.PartStoreroomId;
            dbObj.AccountId = this.AccountId;
            dbObj.UnitOfMeasure = this.UnitOfMeasure;
            dbObj.PurchaseRequestId = this.PurchaseRequestId;
            dbObj.PurchaseRequestLineItemId = this.PurchaseRequestLineItemId;
            dbObj.PartHistoryId = this.PartHistoryId;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            EstimatedCosts_Create trans = new EstimatedCosts_Create();
            trans.EstimatedCosts = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.EstimatedCosts);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            EstimatedCosts_Retrieve trans = new EstimatedCosts_Retrieve();
            trans.EstimatedCosts = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.EstimatedCosts);
        }

        public void Update(DatabaseKey dbKey)
        {
            EstimatedCosts_Update trans = new EstimatedCosts_Update();
            trans.EstimatedCosts = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.EstimatedCosts);
        }

        public void Delete(DatabaseKey dbKey)
        {
            EstimatedCosts_Delete trans = new EstimatedCosts_Delete();
            trans.EstimatedCosts = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.EstimatedCostsId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _ClientId;
        private long _EstimatedCostsId;
        private string _ObjectType;
        private long _ObjectId;
        private string _Category;
        private long _CategoryId;
        private string _Description;
        private decimal _Duration;
        private decimal _UnitCost;
        private decimal _Quantity;
        private string _Source;
        private long _VendorId;
        private long _UNSPSC;
        private string _Status;
        private long _StoreroomId;
        private long _PartStoreroomId;
        private long _AccountId;
        private string _UnitOfMeasure;
        private long _PurchaseRequestId;
        private long _PurchaseRequestLineItemId;
        private long _PartHistoryId;
        private long _UpdateIndex;
        #endregion

        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// EstimatedCostsId property
        /// </summary>
        [DataMember]
        public long EstimatedCostsId
        {
            get { return _EstimatedCostsId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EstimatedCostsId); }
        }

        /// <summary>
        /// ObjectType property
        /// </summary>
        [DataMember]
        public string ObjectType
        {
            get { return _ObjectType; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ObjectType); }
        }

        /// <summary>
        /// ObjectId property
        /// </summary>
        [DataMember]
        public long ObjectId
        {
            get { return _ObjectId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ObjectId); }
        }

        /// <summary>
        /// Category property
        /// </summary>
        [DataMember]
        public string Category
        {
            get { return _Category; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Category); }
        }

        /// <summary>
        /// CategoryId property
        /// </summary>
        [DataMember]
        public long CategoryId
        {
            get { return _CategoryId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _CategoryId); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// Duration property
        /// </summary>
        [DataMember]
        public decimal Duration
        {
            get { return _Duration; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _Duration); }
        }

        /// <summary>
        /// UnitCost property
        /// </summary>
        [DataMember]
        public decimal UnitCost
        {
            get { return _UnitCost; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _UnitCost); }
        }

        /// <summary>
        /// Quantity property
        /// </summary>
        [DataMember]
        public decimal Quantity
        {
            get { return _Quantity; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _Quantity); }
        }

        /// <summary>
        /// Source property
        /// </summary>
        [DataMember]
        public string Source
        {
            get { return _Source; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Source); }
        }

        /// <summary>
        /// VendorId property
        /// </summary>
        [DataMember]
        public long VendorId
        {
            get { return _VendorId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorId); }
        }

        /// <summary>
        /// UNSPSC property
        /// </summary>
        [DataMember]
        public long UNSPSC
        {
            get { return _UNSPSC; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UNSPSC); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// PartStoreroomId property
        /// </summary>
        [DataMember]
        public long PartStoreroomId
        {
            get { return _PartStoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PartStoreroomId); }
        }

        /// <summary>
        /// AccountId property
        /// </summary>
        [DataMember]
        public long AccountId
        {
            get { return _AccountId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AccountId); }
        }

        /// <summary>
        /// UnitOfMeasure property
        /// </summary>
        [DataMember]
        public string UnitOfMeasure
        {
            get { return _UnitOfMeasure; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _UnitOfMeasure); }
        }

        /// <summary>
        /// PurchaseRequestId property
        /// </summary>
        [DataMember]
        public long PurchaseRequestId
        {
            get { return _PurchaseRequestId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseRequestId); }
        }

        /// <summary>
        /// PurchaseRequestLineItemId property
        /// </summary>
        [DataMember]
        public long PurchaseRequestLineItemId
        {
            get { return _PurchaseRequestLineItemId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseRequestLineItemId); }
        }

        /// <summary>
        /// PartHistoryId property
        /// </summary>
        [DataMember]
        public long PartHistoryId
        {
            get { return _PartHistoryId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PartHistoryId); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public long UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion


    }
}
