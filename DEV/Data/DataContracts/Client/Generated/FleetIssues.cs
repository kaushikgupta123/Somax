/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2020 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the FleetIssues table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class FleetIssues : DataContractBase, IPermission 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public FleetIssues()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_FleetIssues dbObj)
        {
		            this.FleetIssuesId = dbObj.FleetIssuesId;
            this.ClientId = dbObj.ClientId;
            this.SiteId = dbObj.SiteId;
            this.AreaId = dbObj.AreaId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.CompleteDate = dbObj.CompleteDate;
            this.Defects = dbObj.Defects;
            this.Description = dbObj.Description;
            this.DriverName = dbObj.DriverName;
            this.EquipmentId = dbObj.EquipmentId;
            this.RecordDate = dbObj.RecordDate;
            this.ServiceOrderId = dbObj.ServiceOrderId;
            this.Status = dbObj.Status;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_FleetIssues dbObj = new b_FleetIssues();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_FleetIssues ToDatabaseObject()
        {
            b_FleetIssues dbObj = new b_FleetIssues();
            dbObj.FleetIssuesId = this.FleetIssuesId;
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.AreaId = this.AreaId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.CompleteDate = this.CompleteDate;
            dbObj.Defects = this.Defects;
            dbObj.Description = this.Description;
            dbObj.DriverName = this.DriverName;
            dbObj.EquipmentId = this.EquipmentId;
            dbObj.RecordDate = this.RecordDate;
            dbObj.ServiceOrderId = this.ServiceOrderId;
            dbObj.Status = this.Status;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            FleetIssues_Create trans = new FleetIssues_Create();
            trans.FleetIssues = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.FleetIssues);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            FleetIssues_Retrieve trans = new FleetIssues_Retrieve();
            trans.FleetIssues = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.FleetIssues);
        }

        public void Update(DatabaseKey dbKey) 
        {
            FleetIssues_Update trans = new FleetIssues_Update();
            trans.FleetIssues = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.FleetIssues);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            FleetIssues_Delete trans = new FleetIssues_Delete();
            trans.FleetIssues = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.FleetIssuesId;
			AuditTargetSiteId = this.SiteId;
			AuditTargetAreaId = this.AreaId;
			AuditTargetDepartmentId = this.DepartmentId;
			AuditTargetStoreRoomId = this.StoreroomId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _FleetIssuesId;
        private long _ClientId;
        private long _SiteId;
        private long _AreaId;
        private long _DepartmentId;
        private long _StoreroomId;
        private DateTime? _CompleteDate;
        private string _Defects;
        private string _Description;
        private string _DriverName;
        private long _EquipmentId;
        private DateTime? _RecordDate;
        private long _ServiceOrderId;
        private string _Status;
        #endregion
        
        #region Properties


        /// <summary>
        /// FleetIssuesId property
        /// </summary>
        [DataMember]
        public long FleetIssuesId
        {
            get { return _FleetIssuesId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _FleetIssuesId); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// AreaId property
        /// </summary>
        [DataMember]
        public long AreaId
        {
            get { return _AreaId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AreaId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// CompleteDate property
        /// </summary>
        [DataMember]
        public DateTime? CompleteDate
        {
            get { return _CompleteDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _CompleteDate); }
        }

        /// <summary>
        /// Defects property
        /// </summary>
        [DataMember]
        public string Defects
        {
            get { return _Defects; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Defects); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// DriverName property
        /// </summary>
        [DataMember]
        public string DriverName
        {
            get { return _DriverName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _DriverName); }
        }

        /// <summary>
        /// EquipmentId property
        /// </summary>
        [DataMember]
        public long EquipmentId
        {
            get { return _EquipmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EquipmentId); }
        }

        /// <summary>
        /// RecordDate property
        /// </summary>
        [DataMember]
        public DateTime? RecordDate
        {
            get { return _RecordDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _RecordDate); }
        }

        /// <summary>
        /// ServiceOrderId property
        /// </summary>
        [DataMember]
        public long ServiceOrderId
        {
            get { return _ServiceOrderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ServiceOrderId); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }
        #endregion
		
		
    }
}
