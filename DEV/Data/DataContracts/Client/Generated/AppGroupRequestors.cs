/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2022 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using Database.Business;
using Database.Transactions;

using System;
using System.Reflection;
using System.Runtime.Serialization;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the AppGroupRequestors table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class AppGroupRequestors : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AppGroupRequestors()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_AppGroupRequestors dbObj)
        {
		            this.AppGroupRequestorsId = dbObj.AppGroupRequestorsId;
            this.ClientId = dbObj.ClientId;
            this.RequestorId = dbObj.RequestorId;
            this.ApprovalGroupId = dbObj.ApprovalGroupId;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_AppGroupRequestors dbObj = new b_AppGroupRequestors();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_AppGroupRequestors ToDatabaseObject()
        {
            b_AppGroupRequestors dbObj = new b_AppGroupRequestors();
            dbObj.AppGroupRequestorsId = this.AppGroupRequestorsId;
            dbObj.ClientId = this.ClientId;
            dbObj.RequestorId = this.RequestorId;
            dbObj.ApprovalGroupId = this.ApprovalGroupId;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            AppGroupRequestors_Create trans = new AppGroupRequestors_Create();
            trans.AppGroupRequestors = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.AppGroupRequestors);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            AppGroupRequestors_Retrieve trans = new AppGroupRequestors_Retrieve();
            trans.AppGroupRequestors = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.AppGroupRequestors);
        }

        public void Update(DatabaseKey dbKey) 
        {
            AppGroupRequestors_Update trans = new AppGroupRequestors_Update();
            trans.AppGroupRequestors = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.AppGroupRequestors);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            AppGroupRequestors_Delete trans = new AppGroupRequestors_Delete();
            trans.AppGroupRequestors = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.AppGroupRequestorsId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _AppGroupRequestorsId;
        private long _ClientId;
        private long _RequestorId;
        private long _ApprovalGroupId;
        #endregion
        
        #region Properties


        /// <summary>
        /// AppGroupRequestorsId property
        /// </summary>
        [DataMember]
        public long AppGroupRequestorsId
        {
            get { return _AppGroupRequestorsId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AppGroupRequestorsId); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// RequestorId property
        /// </summary>
        [DataMember]
        public long RequestorId
        {
            get { return _RequestorId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _RequestorId); }
        }

        /// <summary>
        /// ApprovalGroupId property
        /// </summary>
        [DataMember]
        public long ApprovalGroupId
        {
            get { return _ApprovalGroupId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ApprovalGroupId); }
        }
        #endregion
		
		
    }
}
