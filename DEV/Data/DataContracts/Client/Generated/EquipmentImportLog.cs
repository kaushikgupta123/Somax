/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2018 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the EquipmentImportLog table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class EquipmentImportLog : DataContractBase, IPermission 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EquipmentImportLog()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_EquipmentImportLog dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.EquipmentImportLogId = dbObj.EquipmentImportLogId;
            this.SiteId = dbObj.SiteId;
            this.DataImportLogId = dbObj.DataImportLogId;
            this.AreaId = dbObj.AreaId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.EquipmentId = dbObj.EquipmentId;
            this.ClientLookupId = dbObj.ClientLookupId;
            this.Location = dbObj.Location;
            this.Make = dbObj.Make;
            this.Model = dbObj.Model;
            this.Name = dbObj.Name;
            this.SerialNumber = dbObj.SerialNumber;
            this.Type = dbObj.Type;
            this.AssetNumber = dbObj.AssetNumber;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_EquipmentImportLog dbObj = new b_EquipmentImportLog();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_EquipmentImportLog ToDatabaseObject()
        {
            b_EquipmentImportLog dbObj = new b_EquipmentImportLog();
            dbObj.ClientId = this.ClientId;
            dbObj.EquipmentImportLogId = this.EquipmentImportLogId;
            dbObj.SiteId = this.SiteId;
            dbObj.DataImportLogId = this.DataImportLogId;
            dbObj.AreaId = this.AreaId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.EquipmentId = this.EquipmentId;
            dbObj.ClientLookupId = this.ClientLookupId;
            dbObj.Location = this.Location;
            dbObj.Make = this.Make;
            dbObj.Model = this.Model;
            dbObj.Name = this.Name;
            dbObj.SerialNumber = this.SerialNumber;
            dbObj.Type = this.Type;
            dbObj.AssetNumber = this.AssetNumber;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            EquipmentImportLog_Create trans = new EquipmentImportLog_Create();
            trans.EquipmentImportLog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.EquipmentImportLog);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            EquipmentImportLog_Retrieve trans = new EquipmentImportLog_Retrieve();
            trans.EquipmentImportLog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.EquipmentImportLog);
        }

        public void Update(DatabaseKey dbKey) 
        {
            EquipmentImportLog_Update trans = new EquipmentImportLog_Update();
            trans.EquipmentImportLog = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.EquipmentImportLog);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            EquipmentImportLog_Delete trans = new EquipmentImportLog_Delete();
            trans.EquipmentImportLog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.EquipmentImportLogId;
			AuditTargetSiteId = this.SiteId;
			AuditTargetAreaId = this.AreaId;
			AuditTargetDepartmentId = this.DepartmentId;
			AuditTargetStoreRoomId = this.StoreroomId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _EquipmentImportLogId;
        private long _SiteId;
        private long _DataImportLogId;
        private long _AreaId;
        private long _DepartmentId;
        private long _StoreroomId;
        private long _EquipmentId;
        private string _ClientLookupId;
        private string _Location;
        private string _Make;
        private string _Model;
        private string _Name;
        private string _SerialNumber;
        private string _Type;
        private string _AssetNumber;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// EquipmentImportLogId property
        /// </summary>
        [DataMember]
        public long EquipmentImportLogId
        {
            get { return _EquipmentImportLogId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EquipmentImportLogId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// DataImportLogId property
        /// </summary>
        [DataMember]
        public long DataImportLogId
        {
            get { return _DataImportLogId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DataImportLogId); }
        }

        /// <summary>
        /// AreaId property
        /// </summary>
        [DataMember]
        public long AreaId
        {
            get { return _AreaId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AreaId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// EquipmentId property
        /// </summary>
        [DataMember]
        public long EquipmentId
        {
            get { return _EquipmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EquipmentId); }
        }

        /// <summary>
        /// ClientLookupId property
        /// </summary>
        [DataMember]
        public string ClientLookupId
        {
            get { return _ClientLookupId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ClientLookupId); }
        }

        /// <summary>
        /// Location property
        /// </summary>
        [DataMember]
        public string Location
        {
            get { return _Location; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Location); }
        }

        /// <summary>
        /// Make property
        /// </summary>
        [DataMember]
        public string Make
        {
            get { return _Make; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Make); }
        }

        /// <summary>
        /// Model property
        /// </summary>
        [DataMember]
        public string Model
        {
            get { return _Model; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Model); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// SerialNumber property
        /// </summary>
        [DataMember]
        public string SerialNumber
        {
            get { return _SerialNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SerialNumber); }
        }

        /// <summary>
        /// Type property
        /// </summary>
        [DataMember]
        public string Type
        {
            get { return _Type; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Type); }
        }

        /// <summary>
        /// AssetNumber property
        /// </summary>
        [DataMember]
        public string AssetNumber
        {
            get { return _AssetNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AssetNumber); }
        }
        #endregion
		
		
    }
}
