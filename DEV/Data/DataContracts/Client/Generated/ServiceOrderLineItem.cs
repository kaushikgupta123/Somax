/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2021 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the ServiceOrderLineItem table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class ServiceOrderLineItem : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ServiceOrderLineItem()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_ServiceOrderLineItem dbObj)
        {
		            this.ServiceOrderLineItemId = dbObj.ServiceOrderLineItemId;
            this.ClientId = dbObj.ClientId;
            this.ServiceOrderId = dbObj.ServiceOrderId;
            this.ServiceTaskId = dbObj.ServiceTaskId;
            this.Comment = dbObj.Comment;
            this.RepairReason = dbObj.RepairReason;
            this.SchedServiceId = dbObj.SchedServiceId;
            this.FleetIssueId = dbObj.FleetIssueId;
            this.VMRSSystem = dbObj.VMRSSystem;
            this.VMRSAssembly = dbObj.VMRSAssembly;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_ServiceOrderLineItem dbObj = new b_ServiceOrderLineItem();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_ServiceOrderLineItem ToDatabaseObject()
        {
            b_ServiceOrderLineItem dbObj = new b_ServiceOrderLineItem();
            dbObj.ServiceOrderLineItemId = this.ServiceOrderLineItemId;
            dbObj.ClientId = this.ClientId;
            dbObj.ServiceOrderId = this.ServiceOrderId;
            dbObj.ServiceTaskId = this.ServiceTaskId;
            dbObj.Comment = this.Comment;
            dbObj.RepairReason = this.RepairReason;
            dbObj.SchedServiceId = this.SchedServiceId;
            dbObj.FleetIssueId = this.FleetIssueId;
            dbObj.VMRSSystem = this.VMRSSystem;
            dbObj.VMRSAssembly = this.VMRSAssembly;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            ServiceOrderLineItem_Create trans = new ServiceOrderLineItem_Create();
            trans.ServiceOrderLineItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.ServiceOrderLineItem);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            ServiceOrderLineItem_Retrieve trans = new ServiceOrderLineItem_Retrieve();
            trans.ServiceOrderLineItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.ServiceOrderLineItem);
        }

        public void Update(DatabaseKey dbKey) 
        {
            ServiceOrderLineItem_Update trans = new ServiceOrderLineItem_Update();
            trans.ServiceOrderLineItem = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.ServiceOrderLineItem);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            ServiceOrderLineItem_Delete trans = new ServiceOrderLineItem_Delete();
            trans.ServiceOrderLineItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.ServiceOrderLineItemId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ServiceOrderLineItemId;
        private long _ClientId;
        private long _ServiceOrderId;
        private long _ServiceTaskId;
        private string _Comment;
        private string _RepairReason;
        private long _SchedServiceId;
        private long _FleetIssueId;
        private string _VMRSSystem;
        private string _VMRSAssembly;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ServiceOrderLineItemId property
        /// </summary>
        [DataMember]
        public long ServiceOrderLineItemId
        {
            get { return _ServiceOrderLineItemId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ServiceOrderLineItemId); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// ServiceOrderId property
        /// </summary>
        [DataMember]
        public long ServiceOrderId
        {
            get { return _ServiceOrderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ServiceOrderId); }
        }

        /// <summary>
        /// ServiceTaskId property
        /// </summary>
        [DataMember]
        public long ServiceTaskId
        {
            get { return _ServiceTaskId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ServiceTaskId); }
        }

        /// <summary>
        /// Comment property
        /// </summary>
        [DataMember]
        public string Comment
        {
            get { return _Comment; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Comment); }
        }

        /// <summary>
        /// RepairReason property
        /// </summary>
        [DataMember]
        public string RepairReason
        {
            get { return _RepairReason; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RepairReason); }
        }

        /// <summary>
        /// SchedServiceId property
        /// </summary>
        [DataMember]
        public long SchedServiceId
        {
            get { return _SchedServiceId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SchedServiceId); }
        }

        /// <summary>
        /// FleetIssueId property
        /// </summary>
        [DataMember]
        public long FleetIssueId
        {
            get { return _FleetIssueId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _FleetIssueId); }
        }

        /// <summary>
        /// VMRSSystem property
        /// </summary>
        [DataMember]
        public string VMRSSystem
        {
            get { return _VMRSSystem; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _VMRSSystem); }
        }

        /// <summary>
        /// VMRSAssembly property
        /// </summary>
        [DataMember]
        public string VMRSAssembly
        {
            get { return _VMRSAssembly; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _VMRSAssembly); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
