/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2013 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the AlertLocal table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class AlertLocal : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AlertLocal()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_AlertLocal dbObj)
        {
		            this.AlertDefineId = dbObj.AlertDefineId;
            this.AlertLocalId = dbObj.AlertLocalId;
            this.Localization = dbObj.Localization;
            this.Name = dbObj.Name;
            this.Headline = dbObj.Headline;
            this.Description = dbObj.Description;
            this.Summary = dbObj.Summary;
            this.Details = dbObj.Details;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_AlertLocal dbObj = new b_AlertLocal();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_AlertLocal ToDatabaseObject()
        {
            b_AlertLocal dbObj = new b_AlertLocal();
            dbObj.AlertDefineId = this.AlertDefineId;
            dbObj.AlertLocalId = this.AlertLocalId;
            dbObj.Localization = this.Localization;
            dbObj.Name = this.Name;
            dbObj.Headline = this.Headline;
            dbObj.Description = this.Description;
            dbObj.Summary = this.Summary;
            dbObj.Details = this.Details;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            AlertLocal_Create trans = new AlertLocal_Create();
            trans.AlertLocal = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.AlertLocal);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            AlertLocal_Retrieve trans = new AlertLocal_Retrieve();
            trans.AlertLocal = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.AlertLocal);
        }

        public void Update(DatabaseKey dbKey) 
        {
            AlertLocal_Update trans = new AlertLocal_Update();
            trans.AlertLocal = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.AlertLocal);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            AlertLocal_Delete trans = new AlertLocal_Delete();
            trans.AlertLocal = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.AlertLocalId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long? _AlertDefineId;
        private long _AlertLocalId;
        private string _Localization;
        private string _Name;
        private string _Headline;
        private string _Description;
        private string _Summary;
        private string _Details;
        private int? _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// AlertDefineId property
        /// </summary>
        [DataMember]
        public long? AlertDefineId
        {
            get { return _AlertDefineId; }
            set { Set<long?>(MethodBase.GetCurrentMethod().Name, value, ref _AlertDefineId); }
        }

        /// <summary>
        /// AlertLocalId property
        /// </summary>
        [DataMember]
        public long AlertLocalId
        {
            get { return _AlertLocalId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AlertLocalId); }
        }

        /// <summary>
        /// Localization property
        /// </summary>
        [DataMember]
        public string Localization
        {
            get { return _Localization; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Localization); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// Headline property
        /// </summary>
        [DataMember]
        public string Headline
        {
            get { return _Headline; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Headline); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// Summary property
        /// </summary>
        [DataMember]
        public string Summary
        {
            get { return _Summary; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Summary); }
        }

        /// <summary>
        /// Details property
        /// </summary>
        [DataMember]
        public string Details
        {
            get { return _Details; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Details); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int? UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int?>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
