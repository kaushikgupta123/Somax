/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2020 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the FleetDimensions table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class FleetDimensions : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public FleetDimensions()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_FleetDimensions dbObj)
        {
		            this.FleetDimensionsId = dbObj.FleetDimensionsId;
            this.ClientId = dbObj.ClientId;
            this.EquipmentId = dbObj.EquipmentId;
            this.Color = dbObj.Color;
            this.BodyType = dbObj.BodyType;
            this.Width = dbObj.Width;
            this.Height = dbObj.Height;
            this.Length = dbObj.Length;
            this.PassengerVolume = dbObj.PassengerVolume;
            this.CargoVolume = dbObj.CargoVolume;
            this.GroundClearance = dbObj.GroundClearance;
            this.BedLength = dbObj.BedLength;
            this.CurbWeight = dbObj.CurbWeight;
            this.VehicleWeight = dbObj.VehicleWeight;
            this.TowingCapacity = dbObj.TowingCapacity;
            this.MaxPayload = dbObj.MaxPayload;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_FleetDimensions dbObj = new b_FleetDimensions();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_FleetDimensions ToDatabaseObject()
        {
            b_FleetDimensions dbObj = new b_FleetDimensions();
            dbObj.FleetDimensionsId = this.FleetDimensionsId;
            dbObj.ClientId = this.ClientId;
            dbObj.EquipmentId = this.EquipmentId;
            dbObj.Color = this.Color;
            dbObj.BodyType = this.BodyType;
            dbObj.Width = this.Width;
            dbObj.Height = this.Height;
            dbObj.Length = this.Length;
            dbObj.PassengerVolume = this.PassengerVolume;
            dbObj.CargoVolume = this.CargoVolume;
            dbObj.GroundClearance = this.GroundClearance;
            dbObj.BedLength = this.BedLength;
            dbObj.CurbWeight = this.CurbWeight;
            dbObj.VehicleWeight = this.VehicleWeight;
            dbObj.TowingCapacity = this.TowingCapacity;
            dbObj.MaxPayload = this.MaxPayload;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            FleetDimensions_Create trans = new FleetDimensions_Create();
            trans.FleetDimensions = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.FleetDimensions);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            FleetDimensions_Retrieve trans = new FleetDimensions_Retrieve();
            trans.FleetDimensions = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.FleetDimensions);
        }

        public void Update(DatabaseKey dbKey) 
        {
            FleetDimensions_Update trans = new FleetDimensions_Update();
            trans.FleetDimensions = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.FleetDimensions);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            FleetDimensions_Delete trans = new FleetDimensions_Delete();
            trans.FleetDimensions = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.FleetDimensionsId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _FleetDimensionsId;
        private long _ClientId;
        private long _EquipmentId;
        private string _Color;
        private string _BodyType;
        private decimal _Width;
        private decimal? _Height;
        private decimal _Length;
        private decimal _PassengerVolume;
        private decimal _CargoVolume;
        private decimal _GroundClearance;
        private decimal _BedLength;
        private decimal _CurbWeight;
        private decimal _VehicleWeight;
        private decimal _TowingCapacity;
        private decimal _MaxPayload;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// FleetDimensionsId property
        /// </summary>
        [DataMember]
        public long FleetDimensionsId
        {
            get { return _FleetDimensionsId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _FleetDimensionsId); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// EquipmentId property
        /// </summary>
        [DataMember]
        public long EquipmentId
        {
            get { return _EquipmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EquipmentId); }
        }

        /// <summary>
        /// Color property
        /// </summary>
        [DataMember]
        public string Color
        {
            get { return _Color; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Color); }
        }

        /// <summary>
        /// BodyType property
        /// </summary>
        [DataMember]
        public string BodyType
        {
            get { return _BodyType; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _BodyType); }
        }

        /// <summary>
        /// Width property
        /// </summary>
        [DataMember]
        public decimal Width
        {
            get { return _Width; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _Width); }
        }

        /// <summary>
        /// Height property
        /// </summary>
        [DataMember]
        public decimal? Height
        {
            get { return _Height; }
            set { Set<decimal?>(MethodBase.GetCurrentMethod().Name, value, ref _Height); }
        }

        /// <summary>
        /// Length property
        /// </summary>
        [DataMember]
        public decimal Length
        {
            get { return _Length; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _Length); }
        }

        /// <summary>
        /// PassengerVolume property
        /// </summary>
        [DataMember]
        public decimal PassengerVolume
        {
            get { return _PassengerVolume; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _PassengerVolume); }
        }

        /// <summary>
        /// CargoVolume property
        /// </summary>
        [DataMember]
        public decimal CargoVolume
        {
            get { return _CargoVolume; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _CargoVolume); }
        }

        /// <summary>
        /// GroundClearance property
        /// </summary>
        [DataMember]
        public decimal GroundClearance
        {
            get { return _GroundClearance; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _GroundClearance); }
        }

        /// <summary>
        /// BedLength property
        /// </summary>
        [DataMember]
        public decimal BedLength
        {
            get { return _BedLength; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _BedLength); }
        }

        /// <summary>
        /// CurbWeight property
        /// </summary>
        [DataMember]
        public decimal CurbWeight
        {
            get { return _CurbWeight; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _CurbWeight); }
        }

        /// <summary>
        /// VehicleWeight property
        /// </summary>
        [DataMember]
        public decimal VehicleWeight
        {
            get { return _VehicleWeight; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _VehicleWeight); }
        }

        /// <summary>
        /// TowingCapacity property
        /// </summary>
        [DataMember]
        public decimal TowingCapacity
        {
            get { return _TowingCapacity; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _TowingCapacity); }
        }

        /// <summary>
        /// MaxPayload property
        /// </summary>
        [DataMember]
        public decimal MaxPayload
        {
            get { return _MaxPayload; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _MaxPayload); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
