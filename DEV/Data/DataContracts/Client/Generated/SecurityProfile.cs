/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2020 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the SecurityProfile table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class SecurityProfile : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public SecurityProfile()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_SecurityProfile dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.SecurityProfileId = dbObj.SecurityProfileId;
            this.Name = dbObj.Name;
            this.Description = dbObj.Description;
            this.SortOrder = dbObj.SortOrder;
            this.Protected = dbObj.Protected;
            this.UserType = dbObj.UserType;
            this.ProductGrouping = dbObj.ProductGrouping;
            this.PackageLevel = dbObj.PackageLevel;
            this.CMMSUser = dbObj.CMMSUser;
            this.SanitationUser = dbObj.SanitationUser;
            this.APMUser = dbObj.APMUser;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_SecurityProfile dbObj = new b_SecurityProfile();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_SecurityProfile ToDatabaseObject()
        {
            b_SecurityProfile dbObj = new b_SecurityProfile();
            dbObj.ClientId = this.ClientId;
            dbObj.SecurityProfileId = this.SecurityProfileId;
            dbObj.Name = this.Name;
            dbObj.Description = this.Description;
            dbObj.SortOrder = this.SortOrder;
            dbObj.Protected = this.Protected;
            dbObj.UserType = this.UserType;
            dbObj.ProductGrouping = this.ProductGrouping;
            dbObj.PackageLevel = this.PackageLevel;
            dbObj.CMMSUser = this.CMMSUser;
            dbObj.SanitationUser = this.SanitationUser;
            dbObj.APMUser = this.APMUser;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            SecurityProfile_Create trans = new SecurityProfile_Create();
            trans.SecurityProfile = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.SecurityProfile);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            SecurityProfile_Retrieve trans = new SecurityProfile_Retrieve();
            trans.SecurityProfile = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.SecurityProfile);
        }

        public void Update(DatabaseKey dbKey) 
        {
            SecurityProfile_Update trans = new SecurityProfile_Update();
            trans.SecurityProfile = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.SecurityProfile);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            SecurityProfile_Delete trans = new SecurityProfile_Delete();
            trans.SecurityProfile = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.SecurityProfileId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _SecurityProfileId;
        private string _Name;
        private string _Description;
        private int _SortOrder;
        private bool _Protected;
        private string _UserType;
        private int _ProductGrouping;
        private string _PackageLevel;
        private bool _CMMSUser;
        private bool _SanitationUser;
        private bool _APMUser;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// SecurityProfileId property
        /// </summary>
        [DataMember]
        public long SecurityProfileId
        {
            get { return _SecurityProfileId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SecurityProfileId); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// SortOrder property
        /// </summary>
        [DataMember]
        public int SortOrder
        {
            get { return _SortOrder; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _SortOrder); }
        }

        /// <summary>
        /// Protected property
        /// </summary>
        [DataMember]
        public bool Protected
        {
            get { return _Protected; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _Protected); }
        }

        /// <summary>
        /// UserType property
        /// </summary>
        [DataMember]
        public string UserType
        {
            get { return _UserType; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _UserType); }
        }

        /// <summary>
        /// ProductGrouping property
        /// </summary>
        [DataMember]
        public int ProductGrouping
        {
            get { return _ProductGrouping; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _ProductGrouping); }
        }

        /// <summary>
        /// PackageLevel property
        /// </summary>
        [DataMember]
        public string PackageLevel
        {
            get { return _PackageLevel; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PackageLevel); }
        }

        /// <summary>
        /// CMMSUser property
        /// </summary>
        [DataMember]
        public bool CMMSUser
        {
            get { return _CMMSUser; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _CMMSUser); }
        }

        /// <summary>
        /// SanitationUser property
        /// </summary>
        [DataMember]
        public bool SanitationUser
        {
            get { return _SanitationUser; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _SanitationUser); }
        }

        /// <summary>
        /// APMUser property
        /// </summary>
        [DataMember]
        public bool APMUser
        {
            get { return _APMUser; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _APMUser); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
