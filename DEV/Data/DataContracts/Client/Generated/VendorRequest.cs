/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2023 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the VendorRequest table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class VendorRequest : DataContractBase, IPermission
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public VendorRequest()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_VendorRequest dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.VendorRequestId = dbObj.VendorRequestId;
            this.SiteId = dbObj.SiteId;
            this.AreaId = dbObj.AreaId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.Address1 = dbObj.Address1;
            this.Address2 = dbObj.Address2;
            this.Address3 = dbObj.Address3;
            this.AddressCity = dbObj.AddressCity;
            this.AddressCountry = dbObj.AddressCountry;
            this.AddressPostCode = dbObj.AddressPostCode;
            this.AddressState = dbObj.AddressState;
            this.CustomerAccount = dbObj.CustomerAccount;
            this.EmailAddress = dbObj.EmailAddress;
            this.FaxNumber = dbObj.FaxNumber;
            this.FOBCode = dbObj.FOBCode;
            this.Name = dbObj.Name;
            this.PhoneNumber = dbObj.PhoneNumber;
            this.RemitAddress1 = dbObj.RemitAddress1;
            this.RemitAddress2 = dbObj.RemitAddress2;
            this.RemitAddress3 = dbObj.RemitAddress3;
            this.RemitCity = dbObj.RemitCity;
            this.RemitCountry = dbObj.RemitCountry;
            this.RemitPostCode = dbObj.RemitPostCode;
            this.RemitState = dbObj.RemitState;
            this.RemitUseBusiness = dbObj.RemitUseBusiness;
            this.Status = dbObj.Status;
            this.Terms = dbObj.Terms;
            this.Type = dbObj.Type;
            this.Website = dbObj.Website;
            this.ApproveDate = dbObj.ApproveDate;
            this.ApproveBy_PersonnelId = dbObj.ApproveBy_PersonnelId;
            this.DenyDate = dbObj.DenyDate;
            this.DenyBy_PersonnelId = dbObj.DenyBy_PersonnelId;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_VendorRequest dbObj = new b_VendorRequest();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_VendorRequest ToDatabaseObject()
        {
            b_VendorRequest dbObj = new b_VendorRequest();
            dbObj.ClientId = this.ClientId;
            dbObj.VendorRequestId = this.VendorRequestId;
            dbObj.SiteId = this.SiteId;
            dbObj.AreaId = this.AreaId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.Address1 = this.Address1;
            dbObj.Address2 = this.Address2;
            dbObj.Address3 = this.Address3;
            dbObj.AddressCity = this.AddressCity;
            dbObj.AddressCountry = this.AddressCountry;
            dbObj.AddressPostCode = this.AddressPostCode;
            dbObj.AddressState = this.AddressState;
            dbObj.CustomerAccount = this.CustomerAccount;
            dbObj.EmailAddress = this.EmailAddress;
            dbObj.FaxNumber = this.FaxNumber;
            dbObj.FOBCode = this.FOBCode;
            dbObj.Name = this.Name;
            dbObj.PhoneNumber = this.PhoneNumber;
            dbObj.RemitAddress1 = this.RemitAddress1;
            dbObj.RemitAddress2 = this.RemitAddress2;
            dbObj.RemitAddress3 = this.RemitAddress3;
            dbObj.RemitCity = this.RemitCity;
            dbObj.RemitCountry = this.RemitCountry;
            dbObj.RemitPostCode = this.RemitPostCode;
            dbObj.RemitState = this.RemitState;
            dbObj.RemitUseBusiness = this.RemitUseBusiness;
            dbObj.Status = this.Status;
            dbObj.Terms = this.Terms;
            dbObj.Type = this.Type;
            dbObj.Website = this.Website;
            dbObj.ApproveDate = this.ApproveDate;
            dbObj.ApproveBy_PersonnelId = this.ApproveBy_PersonnelId;
            dbObj.DenyDate = this.DenyDate;
            dbObj.DenyBy_PersonnelId = this.DenyBy_PersonnelId;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            VendorRequest_Create trans = new VendorRequest_Create();
            trans.VendorRequest = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.VendorRequest);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            VendorRequest_Retrieve trans = new VendorRequest_Retrieve();
            trans.VendorRequest = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.VendorRequest);
        }

        public void Update(DatabaseKey dbKey)
        {
            VendorRequest_Update trans = new VendorRequest_Update();
            trans.VendorRequest = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.VendorRequest);
        }

        public void Delete(DatabaseKey dbKey)
        {
            VendorRequest_Delete trans = new VendorRequest_Delete();
            trans.VendorRequest = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.VendorRequestId;
            AuditTargetSiteId = this.SiteId;
            AuditTargetAreaId = this.AreaId;
            AuditTargetDepartmentId = this.DepartmentId;
            AuditTargetStoreRoomId = this.StoreroomId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _ClientId;
        private long _VendorRequestId;
        private long _SiteId;
        private long _AreaId;
        private long _DepartmentId;
        private long _StoreroomId;
        private string _Address1;
        private string _Address2;
        private string _Address3;
        private string _AddressCity;
        private string _AddressCountry;
        private string _AddressPostCode;
        private string _AddressState;
        private string _CustomerAccount;
        private string _EmailAddress;
        private string _FaxNumber;
        private string _FOBCode;
        private string _Name;
        private string _PhoneNumber;
        private string _RemitAddress1;
        private string _RemitAddress2;
        private string _RemitAddress3;
        private string _RemitCity;
        private string _RemitCountry;
        private string _RemitPostCode;
        private string _RemitState;
        private bool _RemitUseBusiness;
        private string _Status;
        private string _Terms;
        private string _Type;
        private string _Website;
        private DateTime? _ApproveDate;
        private long _ApproveBy_PersonnelId;
        private DateTime? _DenyDate;
        private long _DenyBy_PersonnelId;
        #endregion

        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// VendorRequestId property
        /// </summary>
        [DataMember]
        public long VendorRequestId
        {
            get { return _VendorRequestId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorRequestId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// AreaId property
        /// </summary>
        [DataMember]
        public long AreaId
        {
            get { return _AreaId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AreaId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// Address1 property
        /// </summary>
        [DataMember]
        public string Address1
        {
            get { return _Address1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address1); }
        }

        /// <summary>
        /// Address2 property
        /// </summary>
        [DataMember]
        public string Address2
        {
            get { return _Address2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address2); }
        }

        /// <summary>
        /// Address3 property
        /// </summary>
        [DataMember]
        public string Address3
        {
            get { return _Address3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address3); }
        }

        /// <summary>
        /// AddressCity property
        /// </summary>
        [DataMember]
        public string AddressCity
        {
            get { return _AddressCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCity); }
        }

        /// <summary>
        /// AddressCountry property
        /// </summary>
        [DataMember]
        public string AddressCountry
        {
            get { return _AddressCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCountry); }
        }

        /// <summary>
        /// AddressPostCode property
        /// </summary>
        [DataMember]
        public string AddressPostCode
        {
            get { return _AddressPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressPostCode); }
        }

        /// <summary>
        /// AddressState property
        /// </summary>
        [DataMember]
        public string AddressState
        {
            get { return _AddressState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressState); }
        }

        /// <summary>
        /// CustomerAccount property
        /// </summary>
        [DataMember]
        public string CustomerAccount
        {
            get { return _CustomerAccount; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _CustomerAccount); }
        }

        /// <summary>
        /// EmailAddress property
        /// </summary>
        [DataMember]
        public string EmailAddress
        {
            get { return _EmailAddress; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _EmailAddress); }
        }

        /// <summary>
        /// FaxNumber property
        /// </summary>
        [DataMember]
        public string FaxNumber
        {
            get { return _FaxNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FaxNumber); }
        }

        /// <summary>
        /// FOBCode property
        /// </summary>
        [DataMember]
        public string FOBCode
        {
            get { return _FOBCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FOBCode); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// PhoneNumber property
        /// </summary>
        [DataMember]
        public string PhoneNumber
        {
            get { return _PhoneNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PhoneNumber); }
        }

        /// <summary>
        /// RemitAddress1 property
        /// </summary>
        [DataMember]
        public string RemitAddress1
        {
            get { return _RemitAddress1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress1); }
        }

        /// <summary>
        /// RemitAddress2 property
        /// </summary>
        [DataMember]
        public string RemitAddress2
        {
            get { return _RemitAddress2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress2); }
        }

        /// <summary>
        /// RemitAddress3 property
        /// </summary>
        [DataMember]
        public string RemitAddress3
        {
            get { return _RemitAddress3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress3); }
        }

        /// <summary>
        /// RemitCity property
        /// </summary>
        [DataMember]
        public string RemitCity
        {
            get { return _RemitCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitCity); }
        }

        /// <summary>
        /// RemitCountry property
        /// </summary>
        [DataMember]
        public string RemitCountry
        {
            get { return _RemitCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitCountry); }
        }

        /// <summary>
        /// RemitPostCode property
        /// </summary>
        [DataMember]
        public string RemitPostCode
        {
            get { return _RemitPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitPostCode); }
        }

        /// <summary>
        /// RemitState property
        /// </summary>
        [DataMember]
        public string RemitState
        {
            get { return _RemitState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitState); }
        }

        /// <summary>
        /// RemitUseBusiness property
        /// </summary>
        [DataMember]
        public bool RemitUseBusiness
        {
            get { return _RemitUseBusiness; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _RemitUseBusiness); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }

        /// <summary>
        /// Terms property
        /// </summary>
        [DataMember]
        public string Terms
        {
            get { return _Terms; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Terms); }
        }

        /// <summary>
        /// Type property
        /// </summary>
        [DataMember]
        public string Type
        {
            get { return _Type; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Type); }
        }

        /// <summary>
        /// Website property
        /// </summary>
        [DataMember]
        public string Website
        {
            get { return _Website; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Website); }
        }

        /// <summary>
        /// ApproveDate property
        /// </summary>
        [DataMember]
        public DateTime? ApproveDate
        {
            get { return _ApproveDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _ApproveDate); }
        }

        /// <summary>
        /// ApproveBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long ApproveBy_PersonnelId
        {
            get { return _ApproveBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ApproveBy_PersonnelId); }
        }

        /// <summary>
        /// DenyDate property
        /// </summary>
        [DataMember]
        public DateTime? DenyDate
        {
            get { return _DenyDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _DenyDate); }
        }

        /// <summary>
        /// DenyBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long DenyBy_PersonnelId
        {
            get { return _DenyBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DenyBy_PersonnelId); }
        }
        #endregion


    }
}
