/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2020 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the VendorMaster table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class VendorMaster : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public VendorMaster()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_VendorMaster dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.VendorMasterId = dbObj.VendorMasterId;
            this.ClientLookupId = dbObj.ClientLookupId;
            this.ExVendorId = dbObj.ExVendorId;
            this.ExVendorSiteId = dbObj.ExVendorSiteId;
            this.ExVendorSiteCode = dbObj.ExVendorSiteCode;
            this.Name = dbObj.Name;
            this.Type = dbObj.Type;
            this.Terms = dbObj.Terms;
            this.FOBCode = dbObj.FOBCode;
            this.Address1 = dbObj.Address1;
            this.Address2 = dbObj.Address2;
            this.Address3 = dbObj.Address3;
            this.AddressCity = dbObj.AddressCity;
            this.AddressState = dbObj.AddressState;
            this.AddressPostCode = dbObj.AddressPostCode;
            this.AddressCountry = dbObj.AddressCountry;
            this.RemitAddress1 = dbObj.RemitAddress1;
            this.RemitAddress2 = dbObj.RemitAddress2;
            this.RemitAddress3 = dbObj.RemitAddress3;
            this.RemitAddressCity = dbObj.RemitAddressCity;
            this.RemitAddressState = dbObj.RemitAddressState;
            this.RemitAddressPostCode = dbObj.RemitAddressPostCode;
            this.RemitAddressCountry = dbObj.RemitAddressCountry;
            this.RemitUseBusiness = dbObj.RemitUseBusiness;
            this.InactiveFlag = dbObj.InactiveFlag;
            this.FaxNumber = dbObj.FaxNumber;
            this.PhoneNumber = dbObj.PhoneNumber;
            this.EmailAddress = dbObj.EmailAddress;
            this.IsExternal = dbObj.IsExternal;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_VendorMaster dbObj = new b_VendorMaster();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_VendorMaster ToDatabaseObject()
        {
            b_VendorMaster dbObj = new b_VendorMaster();
            dbObj.ClientId = this.ClientId;
            dbObj.VendorMasterId = this.VendorMasterId;
            dbObj.ClientLookupId = this.ClientLookupId;
            dbObj.ExVendorId = this.ExVendorId;
            dbObj.ExVendorSiteId = this.ExVendorSiteId;
            dbObj.ExVendorSiteCode = this.ExVendorSiteCode;
            dbObj.Name = this.Name;
            dbObj.Type = this.Type;
            dbObj.Terms = this.Terms;
            dbObj.FOBCode = this.FOBCode;
            dbObj.Address1 = this.Address1;
            dbObj.Address2 = this.Address2;
            dbObj.Address3 = this.Address3;
            dbObj.AddressCity = this.AddressCity;
            dbObj.AddressState = this.AddressState;
            dbObj.AddressPostCode = this.AddressPostCode;
            dbObj.AddressCountry = this.AddressCountry;
            dbObj.RemitAddress1 = this.RemitAddress1;
            dbObj.RemitAddress2 = this.RemitAddress2;
            dbObj.RemitAddress3 = this.RemitAddress3;
            dbObj.RemitAddressCity = this.RemitAddressCity;
            dbObj.RemitAddressState = this.RemitAddressState;
            dbObj.RemitAddressPostCode = this.RemitAddressPostCode;
            dbObj.RemitAddressCountry = this.RemitAddressCountry;
            dbObj.RemitUseBusiness = this.RemitUseBusiness;
            dbObj.InactiveFlag = this.InactiveFlag;
            dbObj.FaxNumber = this.FaxNumber;
            dbObj.PhoneNumber = this.PhoneNumber;
            dbObj.EmailAddress = this.EmailAddress;
            dbObj.IsExternal = this.IsExternal;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            VendorMaster_Create trans = new VendorMaster_Create();
            trans.VendorMaster = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.VendorMaster);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            VendorMaster_Retrieve trans = new VendorMaster_Retrieve();
            trans.VendorMaster = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.VendorMaster);
        }

        public void Update(DatabaseKey dbKey) 
        {
            VendorMaster_Update trans = new VendorMaster_Update();
            trans.VendorMaster = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.VendorMaster);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            VendorMaster_Delete trans = new VendorMaster_Delete();
            trans.VendorMaster = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.VendorMasterId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _VendorMasterId;
        private string _ClientLookupId;
        private long _ExVendorId;
        private long _ExVendorSiteId;
        private string _ExVendorSiteCode;
        private string _Name;
        private string _Type;
        private string _Terms;
        private string _FOBCode;
        private string _Address1;
        private string _Address2;
        private string _Address3;
        private string _AddressCity;
        private string _AddressState;
        private string _AddressPostCode;
        private string _AddressCountry;
        private string _RemitAddress1;
        private string _RemitAddress2;
        private string _RemitAddress3;
        private string _RemitAddressCity;
        private string _RemitAddressState;
        private string _RemitAddressPostCode;
        private string _RemitAddressCountry;
        private bool _RemitUseBusiness;
        private bool _InactiveFlag;
        private string _FaxNumber;
        private string _PhoneNumber;
        private string _EmailAddress;
        private bool _IsExternal;
        private long _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// VendorMasterId property
        /// </summary>
        [DataMember]
        public long VendorMasterId
        {
            get { return _VendorMasterId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorMasterId); }
        }

        /// <summary>
        /// ClientLookupId property
        /// </summary>
        [DataMember]
        public string ClientLookupId
        {
            get { return _ClientLookupId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ClientLookupId); }
        }

        /// <summary>
        /// ExVendorId property
        /// </summary>
        [DataMember]
        public long ExVendorId
        {
            get { return _ExVendorId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExVendorId); }
        }

        /// <summary>
        /// ExVendorSiteId property
        /// </summary>
        [DataMember]
        public long ExVendorSiteId
        {
            get { return _ExVendorSiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExVendorSiteId); }
        }

        /// <summary>
        /// ExVendorSiteCode property
        /// </summary>
        [DataMember]
        public string ExVendorSiteCode
        {
            get { return _ExVendorSiteCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ExVendorSiteCode); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// Type property
        /// </summary>
        [DataMember]
        public string Type
        {
            get { return _Type; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Type); }
        }

        /// <summary>
        /// Terms property
        /// </summary>
        [DataMember]
        public string Terms
        {
            get { return _Terms; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Terms); }
        }

        /// <summary>
        /// FOBCode property
        /// </summary>
        [DataMember]
        public string FOBCode
        {
            get { return _FOBCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FOBCode); }
        }

        /// <summary>
        /// Address1 property
        /// </summary>
        [DataMember]
        public string Address1
        {
            get { return _Address1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address1); }
        }

        /// <summary>
        /// Address2 property
        /// </summary>
        [DataMember]
        public string Address2
        {
            get { return _Address2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address2); }
        }

        /// <summary>
        /// Address3 property
        /// </summary>
        [DataMember]
        public string Address3
        {
            get { return _Address3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address3); }
        }

        /// <summary>
        /// AddressCity property
        /// </summary>
        [DataMember]
        public string AddressCity
        {
            get { return _AddressCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCity); }
        }

        /// <summary>
        /// AddressState property
        /// </summary>
        [DataMember]
        public string AddressState
        {
            get { return _AddressState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressState); }
        }

        /// <summary>
        /// AddressPostCode property
        /// </summary>
        [DataMember]
        public string AddressPostCode
        {
            get { return _AddressPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressPostCode); }
        }

        /// <summary>
        /// AddressCountry property
        /// </summary>
        [DataMember]
        public string AddressCountry
        {
            get { return _AddressCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCountry); }
        }

        /// <summary>
        /// RemitAddress1 property
        /// </summary>
        [DataMember]
        public string RemitAddress1
        {
            get { return _RemitAddress1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress1); }
        }

        /// <summary>
        /// RemitAddress2 property
        /// </summary>
        [DataMember]
        public string RemitAddress2
        {
            get { return _RemitAddress2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress2); }
        }

        /// <summary>
        /// RemitAddress3 property
        /// </summary>
        [DataMember]
        public string RemitAddress3
        {
            get { return _RemitAddress3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddress3); }
        }

        /// <summary>
        /// RemitAddressCity property
        /// </summary>
        [DataMember]
        public string RemitAddressCity
        {
            get { return _RemitAddressCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddressCity); }
        }

        /// <summary>
        /// RemitAddressState property
        /// </summary>
        [DataMember]
        public string RemitAddressState
        {
            get { return _RemitAddressState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddressState); }
        }

        /// <summary>
        /// RemitAddressPostCode property
        /// </summary>
        [DataMember]
        public string RemitAddressPostCode
        {
            get { return _RemitAddressPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddressPostCode); }
        }

        /// <summary>
        /// RemitAddressCountry property
        /// </summary>
        [DataMember]
        public string RemitAddressCountry
        {
            get { return _RemitAddressCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RemitAddressCountry); }
        }

        /// <summary>
        /// RemitUseBusiness property
        /// </summary>
        [DataMember]
        public bool RemitUseBusiness
        {
            get { return _RemitUseBusiness; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _RemitUseBusiness); }
        }

        /// <summary>
        /// InactiveFlag property
        /// </summary>
        [DataMember]
        public bool InactiveFlag
        {
            get { return _InactiveFlag; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _InactiveFlag); }
        }

        /// <summary>
        /// FaxNumber property
        /// </summary>
        [DataMember]
        public string FaxNumber
        {
            get { return _FaxNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FaxNumber); }
        }

        /// <summary>
        /// PhoneNumber property
        /// </summary>
        [DataMember]
        public string PhoneNumber
        {
            get { return _PhoneNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PhoneNumber); }
        }

        /// <summary>
        /// EmailAddress property
        /// </summary>
        [DataMember]
        public string EmailAddress
        {
            get { return _EmailAddress; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _EmailAddress); }
        }

        /// <summary>
        /// IsExternal property
        /// </summary>
        [DataMember]
        public bool IsExternal
        {
            get { return _IsExternal; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _IsExternal); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public long UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
