/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2021 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the HierarchicalList table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class HierarchicalList : DataContractBase, IPermission 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public HierarchicalList()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_HierarchicalList dbObj)
        {
		            this.HierarchicalListId = dbObj.HierarchicalListId;
            this.ClientId = dbObj.ClientId;
            this.SiteId = dbObj.SiteId;
            this.AreaId = dbObj.AreaId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.ListName = dbObj.ListName;
            this.Level1Value = dbObj.Level1Value;
            this.Level1Description = dbObj.Level1Description;
            this.Level2Value = dbObj.Level2Value;
            this.Level2Description = dbObj.Level2Description;
            this.Level3Value = dbObj.Level3Value;
            this.Level3Description = dbObj.Level3Description;
            this.Level4Value = dbObj.Level4Value;
            this.Level4Description = dbObj.Level4Description;
            this.InactiveFlag = dbObj.InactiveFlag;
            this.Language = dbObj.Language;
            this.Culture = dbObj.Culture;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_HierarchicalList dbObj = new b_HierarchicalList();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_HierarchicalList ToDatabaseObject()
        {
            b_HierarchicalList dbObj = new b_HierarchicalList();
            dbObj.HierarchicalListId = this.HierarchicalListId;
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.AreaId = this.AreaId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.ListName = this.ListName;
            dbObj.Level1Value = this.Level1Value;
            dbObj.Level1Description = this.Level1Description;
            dbObj.Level2Value = this.Level2Value;
            dbObj.Level2Description = this.Level2Description;
            dbObj.Level3Value = this.Level3Value;
            dbObj.Level3Description = this.Level3Description;
            dbObj.Level4Value = this.Level4Value;
            dbObj.Level4Description = this.Level4Description;
            dbObj.InactiveFlag = this.InactiveFlag;
            dbObj.Language = this.Language;
            dbObj.Culture = this.Culture;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            HierarchicalList_Create trans = new HierarchicalList_Create();
            trans.HierarchicalList = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.HierarchicalList);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            HierarchicalList_Retrieve trans = new HierarchicalList_Retrieve();
            trans.HierarchicalList = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.HierarchicalList);
        }

        public void Update(DatabaseKey dbKey) 
        {
            HierarchicalList_Update trans = new HierarchicalList_Update();
            trans.HierarchicalList = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.HierarchicalList);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            HierarchicalList_Delete trans = new HierarchicalList_Delete();
            trans.HierarchicalList = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.HierarchicalListId;
			AuditTargetSiteId = this.SiteId;
			AuditTargetAreaId = this.AreaId;
			AuditTargetDepartmentId = this.DepartmentId;
			AuditTargetStoreRoomId = this.StoreroomId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _HierarchicalListId;
        private long _ClientId;
        private long _SiteId;
        private long _AreaId;
        private long _DepartmentId;
        private long _StoreroomId;
        private string _ListName;
        private string _Level1Value;
        private string _Level1Description;
        private string _Level2Value;
        private string _Level2Description;
        private string _Level3Value;
        private string _Level3Description;
        private string _Level4Value;
        private string _Level4Description;
        private bool _InactiveFlag;
        private string _Language;
        private string _Culture;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// HierarchicalListId property
        /// </summary>
        [DataMember]
        public long HierarchicalListId
        {
            get { return _HierarchicalListId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _HierarchicalListId); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// AreaId property
        /// </summary>
        [DataMember]
        public long AreaId
        {
            get { return _AreaId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AreaId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// ListName property
        /// </summary>
        [DataMember]
        public string ListName
        {
            get { return _ListName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ListName); }
        }

        /// <summary>
        /// Level1Value property
        /// </summary>
        [DataMember]
        public string Level1Value
        {
            get { return _Level1Value; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Level1Value); }
        }

        /// <summary>
        /// Level1Description property
        /// </summary>
        [DataMember]
        public string Level1Description
        {
            get { return _Level1Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Level1Description); }
        }

        /// <summary>
        /// Level2Value property
        /// </summary>
        [DataMember]
        public string Level2Value
        {
            get { return _Level2Value; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Level2Value); }
        }

        /// <summary>
        /// Level2Description property
        /// </summary>
        [DataMember]
        public string Level2Description
        {
            get { return _Level2Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Level2Description); }
        }

        /// <summary>
        /// Level3Value property
        /// </summary>
        [DataMember]
        public string Level3Value
        {
            get { return _Level3Value; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Level3Value); }
        }

        /// <summary>
        /// Level3Description property
        /// </summary>
        [DataMember]
        public string Level3Description
        {
            get { return _Level3Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Level3Description); }
        }

        /// <summary>
        /// Level4Value property
        /// </summary>
        [DataMember]
        public string Level4Value
        {
            get { return _Level4Value; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Level4Value); }
        }

        /// <summary>
        /// Level4Description property
        /// </summary>
        [DataMember]
        public string Level4Description
        {
            get { return _Level4Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Level4Description); }
        }

        /// <summary>
        /// InactiveFlag property
        /// </summary>
        [DataMember]
        public bool InactiveFlag
        {
            get { return _InactiveFlag; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _InactiveFlag); }
        }

        /// <summary>
        /// Language property
        /// </summary>
        [DataMember]
        public string Language
        {
            get { return _Language; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Language); }
        }

        /// <summary>
        /// Culture property
        /// </summary>
        [DataMember]
        public string Culture
        {
            get { return _Culture; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Culture); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
