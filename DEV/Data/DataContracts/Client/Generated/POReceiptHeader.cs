/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2017 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the POReceiptHeader table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class POReceiptHeader : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public POReceiptHeader()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_POReceiptHeader dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.POReceiptHeaderId = dbObj.POReceiptHeaderId;
            this.PurchaseOrderId = dbObj.PurchaseOrderId;
            this.Carrier = dbObj.Carrier;
            this.Comments = dbObj.Comments;
            this.FreightAmount = dbObj.FreightAmount;
            this.FreightBill = dbObj.FreightBill;
            this.PackingSlip = dbObj.PackingSlip;
            this.ReceiptNumber = dbObj.ReceiptNumber;
            this.ReceiveBy_PersonnelID = dbObj.ReceiveBy_PersonnelID;
            this.ReceiveDate = dbObj.ReceiveDate;
            this.ExReceiptId = dbObj.ExReceiptId;
            this.ExReceiptNo = dbObj.ExReceiptNo;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_POReceiptHeader dbObj = new b_POReceiptHeader();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_POReceiptHeader ToDatabaseObject()
        {
            b_POReceiptHeader dbObj = new b_POReceiptHeader();
            dbObj.ClientId = this.ClientId;
            dbObj.POReceiptHeaderId = this.POReceiptHeaderId;
            dbObj.PurchaseOrderId = this.PurchaseOrderId;
            dbObj.Carrier = this.Carrier;
            dbObj.Comments = this.Comments;
            dbObj.FreightAmount = this.FreightAmount;
            dbObj.FreightBill = this.FreightBill;
            dbObj.PackingSlip = this.PackingSlip;
            dbObj.ReceiptNumber = this.ReceiptNumber;
            dbObj.ReceiveBy_PersonnelID = this.ReceiveBy_PersonnelID;
            dbObj.ReceiveDate = this.ReceiveDate;
            dbObj.ExReceiptId = this.ExReceiptId;
            dbObj.ExReceiptNo = this.ExReceiptNo;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            POReceiptHeader_Create trans = new POReceiptHeader_Create();
            trans.POReceiptHeader = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.POReceiptHeader);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            POReceiptHeader_Retrieve trans = new POReceiptHeader_Retrieve();
            trans.POReceiptHeader = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.POReceiptHeader);
        }

        public void Update(DatabaseKey dbKey) 
        {
            POReceiptHeader_Update trans = new POReceiptHeader_Update();
            trans.POReceiptHeader = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.POReceiptHeader);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            POReceiptHeader_Delete trans = new POReceiptHeader_Delete();
            trans.POReceiptHeader = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.POReceiptHeaderId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _POReceiptHeaderId;
        private long _PurchaseOrderId;
        private string _Carrier;
        private string _Comments;
        private decimal _FreightAmount;
        private string _FreightBill;
        private string _PackingSlip;
        private int _ReceiptNumber;
        private long _ReceiveBy_PersonnelID;
        private DateTime? _ReceiveDate;
        private long _ExReceiptId;
        private string _ExReceiptNo;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// POReceiptHeaderId property
        /// </summary>
        [DataMember]
        public long POReceiptHeaderId
        {
            get { return _POReceiptHeaderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _POReceiptHeaderId); }
        }

        /// <summary>
        /// PurchaseOrderId property
        /// </summary>
        [DataMember]
        public long PurchaseOrderId
        {
            get { return _PurchaseOrderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseOrderId); }
        }

        /// <summary>
        /// Carrier property
        /// </summary>
        [DataMember]
        public string Carrier
        {
            get { return _Carrier; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Carrier); }
        }

        /// <summary>
        /// Comments property
        /// </summary>
        [DataMember]
        public string Comments
        {
            get { return _Comments; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Comments); }
        }

        /// <summary>
        /// FreightAmount property
        /// </summary>
        [DataMember]
        public decimal FreightAmount
        {
            get { return _FreightAmount; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _FreightAmount); }
        }

        /// <summary>
        /// FreightBill property
        /// </summary>
        [DataMember]
        public string FreightBill
        {
            get { return _FreightBill; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FreightBill); }
        }

        /// <summary>
        /// PackingSlip property
        /// </summary>
        [DataMember]
        public string PackingSlip
        {
            get { return _PackingSlip; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PackingSlip); }
        }

        /// <summary>
        /// ReceiptNumber property
        /// </summary>
        [DataMember]
        public int ReceiptNumber
        {
            get { return _ReceiptNumber; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _ReceiptNumber); }
        }

        /// <summary>
        /// ReceiveBy_PersonnelID property
        /// </summary>
        [DataMember]
        public long ReceiveBy_PersonnelID
        {
            get { return _ReceiveBy_PersonnelID; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ReceiveBy_PersonnelID); }
        }

        /// <summary>
        /// ReceiveDate property
        /// </summary>
        [DataMember]
        public DateTime? ReceiveDate
        {
            get { return _ReceiveDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _ReceiveDate); }
        }

        /// <summary>
        /// ExReceiptId property
        /// </summary>
        [DataMember]
        public long ExReceiptId
        {
            get { return _ExReceiptId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExReceiptId); }
        }

        /// <summary>
        /// ExReceiptNo property
        /// </summary>
        [DataMember]
        public string ExReceiptNo
        {
            get { return _ExReceiptNo; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ExReceiptNo); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
