/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2021 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the UIConfiguration table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class UIConfiguration : DataContractBase
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public UIConfiguration()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_UIConfiguration dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.UIConfigurationId = dbObj.UIConfigurationId;
            this.UIViewId = dbObj.UIViewId;
            this.DataDictionaryId = dbObj.DataDictionaryId;
            this.Order = dbObj.Order;
            this.Display = dbObj.Display;
            this.ViewOnly = dbObj.ViewOnly;
            this.Section = dbObj.Section;
            this.SectionName = dbObj.SectionName;
            this.SystemRequired = dbObj.SystemRequired;
            this.SystemRequiredResourceId = dbObj.SystemRequiredResourceId;
            this.SystemRequiredResourceSet = dbObj.SystemRequiredResourceSet;
            this.Required = dbObj.Required;
            this.RequiredResourceId = dbObj.RequiredResourceId;
            this.RequiredResourceSet = dbObj.RequiredResourceSet;
            this.MaxLength = dbObj.MaxLength;
            this.MaxLengthResourceId = dbObj.MaxLengthResourceId;
            this.MaxLengthResourceSet = dbObj.MaxLengthResourceSet;
            this.MinLength = dbObj.MinLength;
            this.MinLengthResourceId = dbObj.MinLengthResourceId;
            this.MinLengthResourceSet = dbObj.MinLengthResourceSet;
            this.RegularExpression = dbObj.RegularExpression;
            this.RegularExpressionResourceId = dbObj.RegularExpressionResourceId;
            this.RegularExpressionResourceSet = dbObj.RegularExpressionResourceSet;
            this.Range = dbObj.Range;
            this.RangeMinValue = dbObj.RangeMinValue;
            this.RangeMaxValue = dbObj.RangeMaxValue;
            this.RangeResourceId = dbObj.RangeResourceId;
            this.RangeResourceSet = dbObj.RangeResourceSet;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_UIConfiguration dbObj = new b_UIConfiguration();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_UIConfiguration ToDatabaseObject()
        {
            b_UIConfiguration dbObj = new b_UIConfiguration();
            dbObj.ClientId = this.ClientId;
            dbObj.UIConfigurationId = this.UIConfigurationId;
            dbObj.UIViewId = this.UIViewId;
            dbObj.DataDictionaryId = this.DataDictionaryId;
            dbObj.Order = this.Order;
            dbObj.Display = this.Display;
            dbObj.ViewOnly = this.ViewOnly;
            dbObj.Section = this.Section;
            dbObj.SectionName = this.SectionName;
            dbObj.SystemRequired = this.SystemRequired;
            dbObj.SystemRequiredResourceId = this.SystemRequiredResourceId;
            dbObj.SystemRequiredResourceSet = this.SystemRequiredResourceSet;
            dbObj.Required = this.Required;
            dbObj.RequiredResourceId = this.RequiredResourceId;
            dbObj.RequiredResourceSet = this.RequiredResourceSet;
            dbObj.MaxLength = this.MaxLength;
            dbObj.MaxLengthResourceId = this.MaxLengthResourceId;
            dbObj.MaxLengthResourceSet = this.MaxLengthResourceSet;
            dbObj.MinLength = this.MinLength;
            dbObj.MinLengthResourceId = this.MinLengthResourceId;
            dbObj.MinLengthResourceSet = this.MinLengthResourceSet;
            dbObj.RegularExpression = this.RegularExpression;
            dbObj.RegularExpressionResourceId = this.RegularExpressionResourceId;
            dbObj.RegularExpressionResourceSet = this.RegularExpressionResourceSet;
            dbObj.Range = this.Range;
            dbObj.RangeMinValue = this.RangeMinValue;
            dbObj.RangeMaxValue = this.RangeMaxValue;
            dbObj.RangeResourceId = this.RangeResourceId;
            dbObj.RangeResourceSet = this.RangeResourceSet;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            UIConfiguration_Create trans = new UIConfiguration_Create();
            trans.UIConfiguration = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.UIConfiguration);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            UIConfiguration_Retrieve trans = new UIConfiguration_Retrieve();
            trans.UIConfiguration = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.UIConfiguration);
        }

        public void Update(DatabaseKey dbKey)
        {
            UIConfiguration_Update trans = new UIConfiguration_Update();
            trans.UIConfiguration = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.UIConfiguration);
        }

        public void Delete(DatabaseKey dbKey)
        {
            UIConfiguration_Delete trans = new UIConfiguration_Delete();
            trans.UIConfiguration = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.UIConfigurationId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _ClientId;
        private long _UIConfigurationId;
        private long _UIViewId;
        private long _DataDictionaryId;
        private int _Order;
        private bool _Display;
        private bool _ViewOnly;
        private bool _Section;
        private string _SectionName;
        private bool _SystemRequired;
        private string _SystemRequiredResourceId;
        private string _SystemRequiredResourceSet;
        private bool _Required;
        private string _RequiredResourceId;
        private string _RequiredResourceSet;
        private int _MaxLength;
        private string _MaxLengthResourceId;
        private string _MaxLengthResourceSet;
        private int _MinLength;
        private string _MinLengthResourceId;
        private string _MinLengthResourceSet;
        private string _RegularExpression;
        private string _RegularExpressionResourceId;
        private string _RegularExpressionResourceSet;
        private bool _Range;
        private decimal _RangeMinValue;
        private decimal _RangeMaxValue;
        private string _RangeResourceId;
        private string _RangeResourceSet;
        #endregion

        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// UIConfigurationId property
        /// </summary>
        [DataMember]
        public long UIConfigurationId
        {
            get { return _UIConfigurationId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UIConfigurationId); }
        }

        /// <summary>
        /// UIViewId property
        /// </summary>
        [DataMember]
        public long UIViewId
        {
            get { return _UIViewId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UIViewId); }
        }

        /// <summary>
        /// DataDictionaryId property
        /// </summary>
        [DataMember]
        public long DataDictionaryId
        {
            get { return _DataDictionaryId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DataDictionaryId); }
        }

        /// <summary>
        /// Order property
        /// </summary>
        [DataMember]
        public int Order
        {
            get { return _Order; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _Order); }
        }

        /// <summary>
        /// Display property
        /// </summary>
        [DataMember]
        public bool Display
        {
            get { return _Display; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _Display); }
        }

        /// <summary>
        /// ViewOnly property
        /// </summary>
        [DataMember]
        public bool ViewOnly
        {
            get { return _ViewOnly; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _ViewOnly); }
        }

        /// <summary>
        /// Section property
        /// </summary>
        [DataMember]
        public bool Section
        {
            get { return _Section; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _Section); }
        }

        /// <summary>
        /// SectionName property
        /// </summary>
        [DataMember]
        public string SectionName
        {
            get { return _SectionName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SectionName); }
        }

        /// <summary>
        /// SystemRequired property
        /// </summary>
        [DataMember]
        public bool SystemRequired
        {
            get { return _SystemRequired; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _SystemRequired); }
        }

        /// <summary>
        /// SystemRequiredResourceId property
        /// </summary>
        [DataMember]
        public string SystemRequiredResourceId
        {
            get { return _SystemRequiredResourceId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SystemRequiredResourceId); }
        }

        /// <summary>
        /// SystemRequiredResourceSet property
        /// </summary>
        [DataMember]
        public string SystemRequiredResourceSet
        {
            get { return _SystemRequiredResourceSet; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SystemRequiredResourceSet); }
        }

        /// <summary>
        /// Required property
        /// </summary>
        [DataMember]
        public bool Required
        {
            get { return _Required; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _Required); }
        }

        /// <summary>
        /// RequiredResourceId property
        /// </summary>
        [DataMember]
        public string RequiredResourceId
        {
            get { return _RequiredResourceId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RequiredResourceId); }
        }

        /// <summary>
        /// RequiredResourceSet property
        /// </summary>
        [DataMember]
        public string RequiredResourceSet
        {
            get { return _RequiredResourceSet; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RequiredResourceSet); }
        }

        /// <summary>
        /// MaxLength property
        /// </summary>
        [DataMember]
        public int MaxLength
        {
            get { return _MaxLength; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _MaxLength); }
        }

        /// <summary>
        /// MaxLengthResourceId property
        /// </summary>
        [DataMember]
        public string MaxLengthResourceId
        {
            get { return _MaxLengthResourceId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _MaxLengthResourceId); }
        }

        /// <summary>
        /// MaxLengthResourceSet property
        /// </summary>
        [DataMember]
        public string MaxLengthResourceSet
        {
            get { return _MaxLengthResourceSet; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _MaxLengthResourceSet); }
        }

        /// <summary>
        /// MinLength property
        /// </summary>
        [DataMember]
        public int MinLength
        {
            get { return _MinLength; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _MinLength); }
        }

        /// <summary>
        /// MinLengthResourceId property
        /// </summary>
        [DataMember]
        public string MinLengthResourceId
        {
            get { return _MinLengthResourceId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _MinLengthResourceId); }
        }

        /// <summary>
        /// MinLengthResourceSet property
        /// </summary>
        [DataMember]
        public string MinLengthResourceSet
        {
            get { return _MinLengthResourceSet; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _MinLengthResourceSet); }
        }

        /// <summary>
        /// RegularExpression property
        /// </summary>
        [DataMember]
        public string RegularExpression
        {
            get { return _RegularExpression; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RegularExpression); }
        }

        /// <summary>
        /// RegularExpressionResourceId property
        /// </summary>
        [DataMember]
        public string RegularExpressionResourceId
        {
            get { return _RegularExpressionResourceId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RegularExpressionResourceId); }
        }

        /// <summary>
        /// RegularExpressionResourceSet property
        /// </summary>
        [DataMember]
        public string RegularExpressionResourceSet
        {
            get { return _RegularExpressionResourceSet; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RegularExpressionResourceSet); }
        }

        /// <summary>
        /// Range property
        /// </summary>
        [DataMember]
        public bool Range
        {
            get { return _Range; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _Range); }
        }

        /// <summary>
        /// RangeMinValue property
        /// </summary>
        [DataMember]
        public decimal RangeMinValue
        {
            get { return _RangeMinValue; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _RangeMinValue); }
        }

        /// <summary>
        /// RangeMaxValue property
        /// </summary>
        [DataMember]
        public decimal RangeMaxValue
        {
            get { return _RangeMaxValue; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _RangeMaxValue); }
        }

        /// <summary>
        /// RangeResourceId property
        /// </summary>
        [DataMember]
        public string RangeResourceId
        {
            get { return _RangeResourceId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RangeResourceId); }
        }

        /// <summary>
        /// RangeResourceSet property
        /// </summary>
        [DataMember]
        public string RangeResourceSet
        {
            get { return _RangeResourceSet; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _RangeResourceSet); }
        }
        #endregion


    }
}
