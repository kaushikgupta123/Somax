/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2023 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the ClientUserInfoList table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class ClientUserInfoList : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ClientUserInfoList()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_ClientUserInfoList dbObj)
        {
		            this.ClientUserInfoListID = dbObj.ClientUserInfoListID;
            this.ClientId = dbObj.ClientId;
            this.UserInfoId = dbObj.UserInfoId;
            this.SecurityProfileId = dbObj.SecurityProfileId;
            this.V2SecrutiyProfileId = dbObj.V2SecrutiyProfileId;
            this.DefaultSiteId = dbObj.DefaultSiteId;
            this.TimeZone = dbObj.TimeZone;
            this.ClientName = dbObj.ClientName;
            this.SiteName = dbObj.SiteName;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_ClientUserInfoList dbObj = new b_ClientUserInfoList();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_ClientUserInfoList ToDatabaseObject()
        {
            b_ClientUserInfoList dbObj = new b_ClientUserInfoList();
            dbObj.ClientUserInfoListID = this.ClientUserInfoListID;
            dbObj.ClientId = this.ClientId;
            dbObj.UserInfoId = this.UserInfoId;
            dbObj.SecurityProfileId = this.SecurityProfileId;
            dbObj.V2SecrutiyProfileId = this.V2SecrutiyProfileId;
            dbObj.DefaultSiteId = this.DefaultSiteId;
            dbObj.TimeZone = this.TimeZone;
            dbObj.ClientName = this.ClientName;
            dbObj.SiteName = this.SiteName;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            ClientUserInfoList_Create trans = new ClientUserInfoList_Create();
            trans.ClientUserInfoList = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.ClientUserInfoList);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            ClientUserInfoList_Retrieve trans = new ClientUserInfoList_Retrieve();
            trans.ClientUserInfoList = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.ClientUserInfoList);
        }

        public void Update(DatabaseKey dbKey) 
        {
            ClientUserInfoList_Update trans = new ClientUserInfoList_Update();
            trans.ClientUserInfoList = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.ClientUserInfoList);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            ClientUserInfoList_Delete trans = new ClientUserInfoList_Delete();
            trans.ClientUserInfoList = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.ClientUserInfoListID;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientUserInfoListID;
        private long _ClientId;
        private long _UserInfoId;
        private long _SecurityProfileId;
        private long _V2SecrutiyProfileId;
        private long _DefaultSiteId;
        private string _TimeZone;
        private string _ClientName;
        private string _SiteName;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientUserInfoListID property
        /// </summary>
        [DataMember]
        public long ClientUserInfoListID
        {
            get { return _ClientUserInfoListID; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientUserInfoListID); }
        }

        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// UserInfoId property
        /// </summary>
        [DataMember]
        public long UserInfoId
        {
            get { return _UserInfoId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UserInfoId); }
        }

        /// <summary>
        /// SecurityProfileId property
        /// </summary>
        [DataMember]
        public long SecurityProfileId
        {
            get { return _SecurityProfileId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SecurityProfileId); }
        }

        /// <summary>
        /// V2SecrutiyProfileId property
        /// </summary>
        [DataMember]
        public long V2SecrutiyProfileId
        {
            get { return _V2SecrutiyProfileId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _V2SecrutiyProfileId); }
        }

        /// <summary>
        /// DefaultSiteId property
        /// </summary>
        [DataMember]
        public long DefaultSiteId
        {
            get { return _DefaultSiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DefaultSiteId); }
        }

        /// <summary>
        /// TimeZone property
        /// </summary>
        [DataMember]
        public string TimeZone
        {
            get { return _TimeZone; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _TimeZone); }
        }

        /// <summary>
        /// ClientName property
        /// </summary>
        [DataMember]
        public string ClientName
        {
            get { return _ClientName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ClientName); }
        }

        /// <summary>
        /// SiteName property
        /// </summary>
        [DataMember]
        public string SiteName
        {
            get { return _SiteName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SiteName); }
        }
        #endregion
		
		
    }
}
