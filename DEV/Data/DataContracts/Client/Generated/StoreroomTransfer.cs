/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2022 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the StoreroomTransfer table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class StoreroomTransfer : DataContractBase
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public StoreroomTransfer()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_StoreroomTransfer dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.SiteId = dbObj.SiteId;
            this.StoreroomTransferId = dbObj.StoreroomTransferId;
            this.RequestPTStoreroomID = dbObj.RequestPTStoreroomID;
            this.RequestStoreroomId = dbObj.RequestStoreroomId;
            this.RequestPartId = dbObj.RequestPartId;
            this.IssuePTStoreroomID = dbObj.IssuePTStoreroomID;
            this.IssueStoreroomId = dbObj.IssueStoreroomId;
            this.IssuePartId = dbObj.IssuePartId;
            this.Creator_PersonnelId = dbObj.Creator_PersonnelId;
            this.RequestQuantity = dbObj.RequestQuantity;
            this.Reason = dbObj.Reason;
            this.Status = dbObj.Status;
            this.QuantityIssued = dbObj.QuantityIssued;
            this.QuantityReceived = dbObj.QuantityReceived;
            this.CreatedBy = dbObj.CreatedBy;
            this.UpdateIndex = dbObj.UpdateIndex;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_StoreroomTransfer dbObj = new b_StoreroomTransfer();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_StoreroomTransfer ToDatabaseObject()
        {
            b_StoreroomTransfer dbObj = new b_StoreroomTransfer();
            dbObj.ClientId = this.ClientId;
            dbObj.SiteId = this.SiteId;
            dbObj.StoreroomTransferId = this.StoreroomTransferId;
            dbObj.RequestPTStoreroomID = this.RequestPTStoreroomID;
            dbObj.RequestStoreroomId = this.RequestStoreroomId;
            dbObj.RequestPartId = this.RequestPartId;
            dbObj.IssuePTStoreroomID = this.IssuePTStoreroomID;
            dbObj.IssueStoreroomId = this.IssueStoreroomId;
            dbObj.IssuePartId = this.IssuePartId;
            dbObj.Creator_PersonnelId = this.Creator_PersonnelId;
            dbObj.RequestQuantity = this.RequestQuantity;
            dbObj.Reason = this.Reason;
            dbObj.Status = this.Status;
            dbObj.QuantityIssued = this.QuantityIssued;
            dbObj.QuantityReceived = this.QuantityReceived;
            dbObj.CreatedBy = this.CreatedBy;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            StoreroomTransfer_Create trans = new StoreroomTransfer_Create();
            trans.StoreroomTransfer = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.StoreroomTransfer);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            StoreroomTransfer_Retrieve trans = new StoreroomTransfer_Retrieve();
            trans.StoreroomTransfer = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.StoreroomTransfer);
        }

        public void Update(DatabaseKey dbKey)
        {
            StoreroomTransfer_Update trans = new StoreroomTransfer_Update();
            trans.StoreroomTransfer = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.StoreroomTransfer);
        }

        public void Delete(DatabaseKey dbKey)
        {
            StoreroomTransfer_Delete trans = new StoreroomTransfer_Delete();
            trans.StoreroomTransfer = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.StoreroomTransferId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _ClientId;
        private long _SiteId;
        private long _StoreroomTransferId;
        private long _RequestPTStoreroomID;
        private long _RequestStoreroomId;
        private long _RequestPartId;
        private long _IssuePTStoreroomID;
        private long _IssueStoreroomId;
        private long _IssuePartId;
        private long _Creator_PersonnelId;
        private decimal _RequestQuantity;
        private string _Reason;
        private string _Status;
        private decimal _QuantityIssued;
        private decimal _QuantityReceived;
        private string _CreatedBy;
        private int _UpdateIndex;
        #endregion

        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// StoreroomTransferId property
        /// </summary>
        [DataMember]
        public long StoreroomTransferId
        {
            get { return _StoreroomTransferId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomTransferId); }
        }

        /// <summary>
        /// RequestPTStoreroomID property
        /// </summary>
        [DataMember]
        public long RequestPTStoreroomID
        {
            get { return _RequestPTStoreroomID; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _RequestPTStoreroomID); }
        }

        /// <summary>
        /// RequestStoreroomId property
        /// </summary>
        [DataMember]
        public long RequestStoreroomId
        {
            get { return _RequestStoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _RequestStoreroomId); }
        }

        /// <summary>
        /// RequestPartId property
        /// </summary>
        [DataMember]
        public long RequestPartId
        {
            get { return _RequestPartId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _RequestPartId); }
        }

        /// <summary>
        /// IssuePTStoreroomID property
        /// </summary>
        [DataMember]
        public long IssuePTStoreroomID
        {
            get { return _IssuePTStoreroomID; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _IssuePTStoreroomID); }
        }

        /// <summary>
        /// IssueStoreroomId property
        /// </summary>
        [DataMember]
        public long IssueStoreroomId
        {
            get { return _IssueStoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _IssueStoreroomId); }
        }

        /// <summary>
        /// IssuePartId property
        /// </summary>
        [DataMember]
        public long IssuePartId
        {
            get { return _IssuePartId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _IssuePartId); }
        }

        /// <summary>
        /// Creator_PersonnelId property
        /// </summary>
        [DataMember]
        public long Creator_PersonnelId
        {
            get { return _Creator_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Creator_PersonnelId); }
        }

        /// <summary>
        /// RequestQuantity property
        /// </summary>
        [DataMember]
        public decimal RequestQuantity
        {
            get { return _RequestQuantity; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _RequestQuantity); }
        }

        /// <summary>
        /// Reason property
        /// </summary>
        [DataMember]
        public string Reason
        {
            get { return _Reason; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Reason); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }

        /// <summary>
        /// QuantityIssued property
        /// </summary>
        [DataMember]
        public decimal QuantityIssued
        {
            get { return _QuantityIssued; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _QuantityIssued); }
        }

        /// <summary>
        /// QuantityReceived property
        /// </summary>
        [DataMember]
        public decimal QuantityReceived
        {
            get { return _QuantityReceived; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _QuantityReceived); }
        }

        /// <summary>
        /// CreatedBy property
        /// </summary>
        [DataMember]
        public string CreatedBy
        {
            get { return _CreatedBy; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _CreatedBy); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion


    }
}
