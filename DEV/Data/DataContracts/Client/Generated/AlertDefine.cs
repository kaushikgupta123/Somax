/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2016 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the AlertDefine table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class AlertDefine : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AlertDefine()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_AlertDefine dbObj)
        {
		            this.AlertDefineId = dbObj.AlertDefineId;
            this.Name = dbObj.Name;
            this.Description = dbObj.Description;
            this.IsActive = dbObj.IsActive;
            this.TargetList = dbObj.TargetList;
            this.EmailSend = dbObj.EmailSend;
            this.EmailAttachment = dbObj.EmailAttachment;
            this.SMSSend = dbObj.SMSSend;
            this.Type = dbObj.Type;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_AlertDefine dbObj = new b_AlertDefine();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_AlertDefine ToDatabaseObject()
        {
            b_AlertDefine dbObj = new b_AlertDefine();
            dbObj.AlertDefineId = this.AlertDefineId;
            dbObj.Name = this.Name;
            dbObj.Description = this.Description;
            dbObj.IsActive = this.IsActive;
            dbObj.TargetList = this.TargetList;
            dbObj.EmailSend = this.EmailSend;
            dbObj.EmailAttachment = this.EmailAttachment;
            dbObj.SMSSend = this.SMSSend;
            dbObj.Type = this.Type;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            AlertDefine_Create trans = new AlertDefine_Create();
            trans.AlertDefine = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.AlertDefine);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            AlertDefine_Retrieve trans = new AlertDefine_Retrieve();
            trans.AlertDefine = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.AlertDefine);
        }

        public void Update(DatabaseKey dbKey) 
        {
            AlertDefine_Update trans = new AlertDefine_Update();
            trans.AlertDefine = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.AlertDefine);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            AlertDefine_Delete trans = new AlertDefine_Delete();
            trans.AlertDefine = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.AlertDefineId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _AlertDefineId;
        private string _Name;
        private string _Description;
        private bool _IsActive;
        private bool _TargetList;
        private bool _EmailSend;
        private bool _EmailAttachment;
        private bool _SMSSend;
        private string _Type;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// AlertDefineId property
        /// </summary>
        [DataMember]
        public long AlertDefineId
        {
            get { return _AlertDefineId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AlertDefineId); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// IsActive property
        /// </summary>
        [DataMember]
        public bool IsActive
        {
            get { return _IsActive; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _IsActive); }
        }

        /// <summary>
        /// TargetList property
        /// </summary>
        [DataMember]
        public bool TargetList
        {
            get { return _TargetList; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _TargetList); }
        }

        /// <summary>
        /// EmailSend property
        /// </summary>
        [DataMember]
        public bool EmailSend
        {
            get { return _EmailSend; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _EmailSend); }
        }

        /// <summary>
        /// EmailAttachment property
        /// </summary>
        [DataMember]
        public bool EmailAttachment
        {
            get { return _EmailAttachment; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _EmailAttachment); }
        }

        /// <summary>
        /// SMSSend property
        /// </summary>
        [DataMember]
        public bool SMSSend
        {
            get { return _SMSSend; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _SMSSend); }
        }

        /// <summary>
        /// Type property
        /// </summary>
        [DataMember]
        public string Type
        {
            get { return _Type; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Type); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
