/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2021 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the PurchaseOrderLineItem table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class PurchaseOrderLineItem : DataContractBase
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public PurchaseOrderLineItem()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_PurchaseOrderLineItem dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.PurchaseOrderLineItemId = dbObj.PurchaseOrderLineItemId;
            this.PurchaseOrderId = dbObj.PurchaseOrderId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.AccountId = dbObj.AccountId;
            this.ChargeToId = dbObj.ChargeToId;
            this.ChargeType = dbObj.ChargeType;
            this.CompleteBy_PersonnelId = dbObj.CompleteBy_PersonnelId;
            this.CompleteDate = dbObj.CompleteDate;
            this.Creator_PersonnelId = dbObj.Creator_PersonnelId;
            this.Description = dbObj.Description;
            this.EstimatedDelivery = dbObj.EstimatedDelivery;
            this.LineNumber = dbObj.LineNumber;
            this.PartId = dbObj.PartId;
            this.PartStoreroomId = dbObj.PartStoreroomId;
            this.PRCreator_PersonnelId = dbObj.PRCreator_PersonnelId;
            this.PurchaseRequestId = dbObj.PurchaseRequestId;
            this.OrderQuantity = dbObj.OrderQuantity;
            this.OrderQuantityOriginal = dbObj.OrderQuantityOriginal;
            this.Status = dbObj.Status;
            this.Taxable = dbObj.Taxable;
            this.UnitOfMeasure = dbObj.UnitOfMeasure;
            this.UnitCost = dbObj.UnitCost;
            this.ExPurchaseOrderLineId = dbObj.ExPurchaseOrderLineId;
            this.PurchaseUOM = dbObj.PurchaseUOM;
            this.UOMConversion = dbObj.UOMConversion;
            this.PurchaseQuantity = dbObj.PurchaseQuantity;
            this.PurchaseCost = dbObj.PurchaseCost;
            this.SupplierPartId = dbObj.SupplierPartId;
            this.SupplierPartAuxiliaryId = dbObj.SupplierPartAuxiliaryId;
            this.ManufacturerPartId = dbObj.ManufacturerPartId;
            this.Manufacturer = dbObj.Manufacturer;
            this.VendorCatalogItemId = dbObj.VendorCatalogItemId;
            this.UNSPSC = dbObj.UNSPSC;
            this.EstimatedCostsId = dbObj.EstimatedCostsId;
            this.UpdateIndex = dbObj.UpdateIndex;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_PurchaseOrderLineItem dbObj = new b_PurchaseOrderLineItem();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_PurchaseOrderLineItem ToDatabaseObject()
        {
            b_PurchaseOrderLineItem dbObj = new b_PurchaseOrderLineItem();
            dbObj.ClientId = this.ClientId;
            dbObj.PurchaseOrderLineItemId = this.PurchaseOrderLineItemId;
            dbObj.PurchaseOrderId = this.PurchaseOrderId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.AccountId = this.AccountId;
            dbObj.ChargeToId = this.ChargeToId;
            dbObj.ChargeType = this.ChargeType;
            dbObj.CompleteBy_PersonnelId = this.CompleteBy_PersonnelId;
            dbObj.CompleteDate = this.CompleteDate;
            dbObj.Creator_PersonnelId = this.Creator_PersonnelId;
            dbObj.Description = this.Description;
            dbObj.EstimatedDelivery = this.EstimatedDelivery;
            dbObj.LineNumber = this.LineNumber;
            dbObj.PartId = this.PartId;
            dbObj.PartStoreroomId = this.PartStoreroomId;
            dbObj.PRCreator_PersonnelId = this.PRCreator_PersonnelId;
            dbObj.PurchaseRequestId = this.PurchaseRequestId;
            dbObj.OrderQuantity = this.OrderQuantity;
            dbObj.OrderQuantityOriginal = this.OrderQuantityOriginal;
            dbObj.Status = this.Status;
            dbObj.Taxable = this.Taxable;
            dbObj.UnitOfMeasure = this.UnitOfMeasure;
            dbObj.UnitCost = this.UnitCost;
            dbObj.ExPurchaseOrderLineId = this.ExPurchaseOrderLineId;
            dbObj.PurchaseUOM = this.PurchaseUOM;
            dbObj.UOMConversion = this.UOMConversion;
            dbObj.PurchaseQuantity = this.PurchaseQuantity;
            dbObj.PurchaseCost = this.PurchaseCost;
            dbObj.SupplierPartId = this.SupplierPartId;
            dbObj.SupplierPartAuxiliaryId = this.SupplierPartAuxiliaryId;
            dbObj.ManufacturerPartId = this.ManufacturerPartId;
            dbObj.Manufacturer = this.Manufacturer;
            dbObj.VendorCatalogItemId = this.VendorCatalogItemId;
            dbObj.UNSPSC = this.UNSPSC;
            dbObj.EstimatedCostsId = this.EstimatedCostsId;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            PurchaseOrderLineItem_Create trans = new PurchaseOrderLineItem_Create();
            trans.PurchaseOrderLineItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.PurchaseOrderLineItem);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            PurchaseOrderLineItem_Retrieve trans = new PurchaseOrderLineItem_Retrieve();
            trans.PurchaseOrderLineItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.PurchaseOrderLineItem);
        }

        public void Update(DatabaseKey dbKey)
        {
            PurchaseOrderLineItem_Update trans = new PurchaseOrderLineItem_Update();
            trans.PurchaseOrderLineItem = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.PurchaseOrderLineItem);
        }

        public void Delete(DatabaseKey dbKey)
        {
            PurchaseOrderLineItem_Delete trans = new PurchaseOrderLineItem_Delete();
            trans.PurchaseOrderLineItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.PurchaseOrderLineItemId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _ClientId;
        private long _PurchaseOrderLineItemId;
        private long _PurchaseOrderId;
        private long _DepartmentId;
        private long _StoreroomId;
        private long _AccountId;
        private long _ChargeToId;
        private string _ChargeType;
        private long _CompleteBy_PersonnelId;
        private DateTime? _CompleteDate;
        private long _Creator_PersonnelId;
        private string _Description;
        private DateTime? _EstimatedDelivery;
        private int _LineNumber;
        private long _PartId;
        private long _PartStoreroomId;
        private long _PRCreator_PersonnelId;
        private long _PurchaseRequestId;
        private decimal _OrderQuantity;
        private decimal _OrderQuantityOriginal;
        private string _Status;
        private bool _Taxable;
        private string _UnitOfMeasure;
        private decimal _UnitCost;
        private long _ExPurchaseOrderLineId;
        private string _PurchaseUOM;
        private decimal _UOMConversion;
        private decimal _PurchaseQuantity;
        private decimal _PurchaseCost;
        private string _SupplierPartId;
        private string _SupplierPartAuxiliaryId;
        private string _ManufacturerPartId;
        private string _Manufacturer;
        private long _VendorCatalogItemId;
        private long _UNSPSC;
        private long _EstimatedCostsId;
        private int _UpdateIndex;
        #endregion

        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// PurchaseOrderLineItemId property
        /// </summary>
        [DataMember]
        public long PurchaseOrderLineItemId
        {
            get { return _PurchaseOrderLineItemId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseOrderLineItemId); }
        }

        /// <summary>
        /// PurchaseOrderId property
        /// </summary>
        [DataMember]
        public long PurchaseOrderId
        {
            get { return _PurchaseOrderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseOrderId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// AccountId property
        /// </summary>
        [DataMember]
        public long AccountId
        {
            get { return _AccountId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AccountId); }
        }

        /// <summary>
        /// ChargeToId property
        /// </summary>
        [DataMember]
        public long ChargeToId
        {
            get { return _ChargeToId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ChargeToId); }
        }

        /// <summary>
        /// ChargeType property
        /// </summary>
        [DataMember]
        public string ChargeType
        {
            get { return _ChargeType; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ChargeType); }
        }

        /// <summary>
        /// CompleteBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long CompleteBy_PersonnelId
        {
            get { return _CompleteBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _CompleteBy_PersonnelId); }
        }

        /// <summary>
        /// CompleteDate property
        /// </summary>
        [DataMember]
        public DateTime? CompleteDate
        {
            get { return _CompleteDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _CompleteDate); }
        }

        /// <summary>
        /// Creator_PersonnelId property
        /// </summary>
        [DataMember]
        public long Creator_PersonnelId
        {
            get { return _Creator_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Creator_PersonnelId); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// EstimatedDelivery property
        /// </summary>
        [DataMember]
        public DateTime? EstimatedDelivery
        {
            get { return _EstimatedDelivery; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _EstimatedDelivery); }
        }

        /// <summary>
        /// LineNumber property
        /// </summary>
        [DataMember]
        public int LineNumber
        {
            get { return _LineNumber; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _LineNumber); }
        }

        /// <summary>
        /// PartId property
        /// </summary>
        [DataMember]
        public long PartId
        {
            get { return _PartId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PartId); }
        }

        /// <summary>
        /// PartStoreroomId property
        /// </summary>
        [DataMember]
        public long PartStoreroomId
        {
            get { return _PartStoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PartStoreroomId); }
        }

        /// <summary>
        /// PRCreator_PersonnelId property
        /// </summary>
        [DataMember]
        public long PRCreator_PersonnelId
        {
            get { return _PRCreator_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PRCreator_PersonnelId); }
        }

        /// <summary>
        /// PurchaseRequestId property
        /// </summary>
        [DataMember]
        public long PurchaseRequestId
        {
            get { return _PurchaseRequestId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseRequestId); }
        }

        /// <summary>
        /// OrderQuantity property
        /// </summary>
        [DataMember]
        public decimal OrderQuantity
        {
            get { return _OrderQuantity; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _OrderQuantity); }
        }

        /// <summary>
        /// OrderQuantityOriginal property
        /// </summary>
        [DataMember]
        public decimal OrderQuantityOriginal
        {
            get { return _OrderQuantityOriginal; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _OrderQuantityOriginal); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }

        /// <summary>
        /// Taxable property
        /// </summary>
        [DataMember]
        public bool Taxable
        {
            get { return _Taxable; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _Taxable); }
        }

        /// <summary>
        /// UnitOfMeasure property
        /// </summary>
        [DataMember]
        public string UnitOfMeasure
        {
            get { return _UnitOfMeasure; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _UnitOfMeasure); }
        }

        /// <summary>
        /// UnitCost property
        /// </summary>
        [DataMember]
        public decimal UnitCost
        {
            get { return _UnitCost; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _UnitCost); }
        }

        /// <summary>
        /// ExPurchaseOrderLineId property
        /// </summary>
        [DataMember]
        public long ExPurchaseOrderLineId
        {
            get { return _ExPurchaseOrderLineId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExPurchaseOrderLineId); }
        }

        /// <summary>
        /// PurchaseUOM property
        /// </summary>
        [DataMember]
        public string PurchaseUOM
        {
            get { return _PurchaseUOM; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseUOM); }
        }

        /// <summary>
        /// UOMConversion property
        /// </summary>
        [DataMember]
        public decimal UOMConversion
        {
            get { return _UOMConversion; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _UOMConversion); }
        }

        /// <summary>
        /// PurchaseQuantity property
        /// </summary>
        [DataMember]
        public decimal PurchaseQuantity
        {
            get { return _PurchaseQuantity; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseQuantity); }
        }

        /// <summary>
        /// PurchaseCost property
        /// </summary>
        [DataMember]
        public decimal PurchaseCost
        {
            get { return _PurchaseCost; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseCost); }
        }

        /// <summary>
        /// SupplierPartId property
        /// </summary>
        [DataMember]
        public string SupplierPartId
        {
            get { return _SupplierPartId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SupplierPartId); }
        }

        /// <summary>
        /// SupplierPartAuxiliaryId property
        /// </summary>
        [DataMember]
        public string SupplierPartAuxiliaryId
        {
            get { return _SupplierPartAuxiliaryId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SupplierPartAuxiliaryId); }
        }

        /// <summary>
        /// ManufacturerPartId property
        /// </summary>
        [DataMember]
        public string ManufacturerPartId
        {
            get { return _ManufacturerPartId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ManufacturerPartId); }
        }

        /// <summary>
        /// Manufacturer property
        /// </summary>
        [DataMember]
        public string Manufacturer
        {
            get { return _Manufacturer; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Manufacturer); }
        }

        /// <summary>
        /// VendorCatalogItemId property
        /// </summary>
        [DataMember]
        public long VendorCatalogItemId
        {
            get { return _VendorCatalogItemId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorCatalogItemId); }
        }

        /// <summary>
        /// UNSPSC property
        /// </summary>
        [DataMember]
        public long UNSPSC
        {
            get { return _UNSPSC; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UNSPSC); }
        }

        /// <summary>
        /// EstimatedCostsId property
        /// </summary>
        [DataMember]
        public long EstimatedCostsId
        {
            get { return _EstimatedCostsId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EstimatedCostsId); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion


    }
}
