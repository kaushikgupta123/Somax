/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2022 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the PurchaseRequest table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class PurchaseRequest : DataContractBase, IPermission
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public PurchaseRequest()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_PurchaseRequest dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.PurchaseRequestId = dbObj.PurchaseRequestId;
            this.SiteId = dbObj.SiteId;
            this.AreaId = dbObj.AreaId;
            this.DepartmentId = dbObj.DepartmentId;
            this.StoreroomId = dbObj.StoreroomId;
            this.ClientLookupId = dbObj.ClientLookupId;
            this.Reason = dbObj.Reason;
            this.ApprovedBy_PersonnelId = dbObj.ApprovedBy_PersonnelId;
            this.Approved_Date = dbObj.Approved_Date;
            this.CreatedBy_PersonnelId = dbObj.CreatedBy_PersonnelId;
            this.Process_Comments = dbObj.Process_Comments;
            this.Processed_Date = dbObj.Processed_Date;
            this.ProcessBy_PersonnelId = dbObj.ProcessBy_PersonnelId;
            this.Status = dbObj.Status;
            this.VendorId = dbObj.VendorId;
            this.PurchaseOrderId = dbObj.PurchaseOrderId;
            this.AutoGenerated = dbObj.AutoGenerated;
            this.Return_Comments = dbObj.Return_Comments;
            this.ExtractLogId = dbObj.ExtractLogId;
            this.ExRequestId = dbObj.ExRequestId;
            this.IsPunchOut = dbObj.IsPunchOut;
            this.BuyerReview = dbObj.BuyerReview;
            this.UpdateIndex = dbObj.UpdateIndex;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_PurchaseRequest dbObj = new b_PurchaseRequest();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_PurchaseRequest ToDatabaseObject()
        {
            b_PurchaseRequest dbObj = new b_PurchaseRequest();
            dbObj.ClientId = this.ClientId;
            dbObj.PurchaseRequestId = this.PurchaseRequestId;
            dbObj.SiteId = this.SiteId;
            dbObj.AreaId = this.AreaId;
            dbObj.DepartmentId = this.DepartmentId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.ClientLookupId = this.ClientLookupId;
            dbObj.Reason = this.Reason;
            dbObj.ApprovedBy_PersonnelId = this.ApprovedBy_PersonnelId;
            dbObj.Approved_Date = this.Approved_Date;
            dbObj.CreatedBy_PersonnelId = this.CreatedBy_PersonnelId;
            dbObj.Process_Comments = this.Process_Comments;
            dbObj.Processed_Date = this.Processed_Date;
            dbObj.ProcessBy_PersonnelId = this.ProcessBy_PersonnelId;
            dbObj.Status = this.Status;
            dbObj.VendorId = this.VendorId;
            dbObj.PurchaseOrderId = this.PurchaseOrderId;
            dbObj.AutoGenerated = this.AutoGenerated;
            dbObj.Return_Comments = this.Return_Comments;
            dbObj.ExtractLogId = this.ExtractLogId;
            dbObj.ExRequestId = this.ExRequestId;
            dbObj.IsPunchOut = this.IsPunchOut;
            dbObj.BuyerReview = this.BuyerReview;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            PurchaseRequest_Create trans = new PurchaseRequest_Create();
            trans.PurchaseRequest = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.PurchaseRequest);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            PurchaseRequest_Retrieve trans = new PurchaseRequest_Retrieve();
            trans.PurchaseRequest = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.PurchaseRequest);
        }

        public void Update(DatabaseKey dbKey)
        {
            PurchaseRequest_Update trans = new PurchaseRequest_Update();
            trans.PurchaseRequest = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.PurchaseRequest);
        }

        public void Delete(DatabaseKey dbKey)
        {
            PurchaseRequest_Delete trans = new PurchaseRequest_Delete();
            trans.PurchaseRequest = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.PurchaseRequestId;
            AuditTargetSiteId = this.SiteId;
            AuditTargetAreaId = this.AreaId;
            AuditTargetDepartmentId = this.DepartmentId;
            AuditTargetStoreRoomId = this.StoreroomId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _ClientId;
        private long _PurchaseRequestId;
        private long _SiteId;
        private long _AreaId;
        private long _DepartmentId;
        private long _StoreroomId;
        private string _ClientLookupId;
        private string _Reason;
        private long _ApprovedBy_PersonnelId;
        private DateTime? _Approved_Date;
        private long _CreatedBy_PersonnelId;
        private string _Process_Comments;
        private DateTime _Processed_Date;
        private long _ProcessBy_PersonnelId;
        private string _Status;
        private long _VendorId;
        private long _PurchaseOrderId;
        private bool _AutoGenerated;
        private string _Return_Comments;
        private long _ExtractLogId;
        private long _ExRequestId;
        private bool _IsPunchOut;
        private bool _BuyerReview;
        private int _UpdateIndex;
        #endregion

        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// PurchaseRequestId property
        /// </summary>
        [DataMember]
        public long PurchaseRequestId
        {
            get { return _PurchaseRequestId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseRequestId); }
        }

        /// <summary>
        /// SiteId property
        /// </summary>
        [DataMember]
        public long SiteId
        {
            get { return _SiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _SiteId); }
        }

        /// <summary>
        /// AreaId property
        /// </summary>
        [DataMember]
        public long AreaId
        {
            get { return _AreaId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AreaId); }
        }

        /// <summary>
        /// DepartmentId property
        /// </summary>
        [DataMember]
        public long DepartmentId
        {
            get { return _DepartmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DepartmentId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// ClientLookupId property
        /// </summary>
        [DataMember]
        public string ClientLookupId
        {
            get { return _ClientLookupId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ClientLookupId); }
        }

        /// <summary>
        /// Reason property
        /// </summary>
        [DataMember]
        public string Reason
        {
            get { return _Reason; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Reason); }
        }

        /// <summary>
        /// ApprovedBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long ApprovedBy_PersonnelId
        {
            get { return _ApprovedBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ApprovedBy_PersonnelId); }
        }

        /// <summary>
        /// Approved_Date property
        /// </summary>
        [DataMember]
        public DateTime? Approved_Date
        {
            get { return _Approved_Date; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _Approved_Date); }
        }

        /// <summary>
        /// CreatedBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long CreatedBy_PersonnelId
        {
            get { return _CreatedBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _CreatedBy_PersonnelId); }
        }

        /// <summary>
        /// Process_Comments property
        /// </summary>
        [DataMember]
        public string Process_Comments
        {
            get { return _Process_Comments; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Process_Comments); }
        }

        /// <summary>
        /// Processed_Date property
        /// </summary>
        [DataMember]
        public DateTime Processed_Date
        {
            get { return _Processed_Date; }
            set { Set<DateTime>(MethodBase.GetCurrentMethod().Name, value, ref _Processed_Date); }
        }

        /// <summary>
        /// ProcessBy_PersonnelId property
        /// </summary>
        [DataMember]
        public long ProcessBy_PersonnelId
        {
            get { return _ProcessBy_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ProcessBy_PersonnelId); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }

        /// <summary>
        /// VendorId property
        /// </summary>
        [DataMember]
        public long VendorId
        {
            get { return _VendorId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorId); }
        }

        /// <summary>
        /// PurchaseOrderId property
        /// </summary>
        [DataMember]
        public long PurchaseOrderId
        {
            get { return _PurchaseOrderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PurchaseOrderId); }
        }

        /// <summary>
        /// AutoGenerated property
        /// </summary>
        [DataMember]
        public bool AutoGenerated
        {
            get { return _AutoGenerated; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _AutoGenerated); }
        }

        /// <summary>
        /// Return_Comments property
        /// </summary>
        [DataMember]
        public string Return_Comments
        {
            get { return _Return_Comments; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Return_Comments); }
        }

        /// <summary>
        /// ExtractLogId property
        /// </summary>
        [DataMember]
        public long ExtractLogId
        {
            get { return _ExtractLogId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExtractLogId); }
        }

        /// <summary>
        /// ExRequestId property
        /// </summary>
        [DataMember]
        public long ExRequestId
        {
            get { return _ExRequestId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExRequestId); }
        }

        /// <summary>
        /// IsPunchOut property
        /// </summary>
        [DataMember]
        public bool IsPunchOut
        {
            get { return _IsPunchOut; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _IsPunchOut); }
        }

        /// <summary>
        /// BuyerReview property
        /// </summary>
        [DataMember]
        public bool BuyerReview
        {
            get { return _BuyerReview; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _BuyerReview); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion


    }
}
