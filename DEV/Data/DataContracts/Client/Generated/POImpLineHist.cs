/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2020 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
  /// <summary>
  /// Business object that stores a record from the POImpLineHist table.
  /// </summary>
  [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class POImpLineHist : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public POImpLineHist()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_POImpLineHist dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.POImpLineHistId = dbObj.POImpLineHistId;
            this.POImpLineId = dbObj.POImpLineId;
            this.EXPOID = dbObj.EXPOID;
            this.EXPOLineID = dbObj.EXPOLineID;
            this.SOMAXPRLineId = dbObj.SOMAXPRLineId;
            this.LineNumber = dbObj.LineNumber;
            this.EXPartId = dbObj.EXPartId;
            this.PartNumber = dbObj.PartNumber;
            this.PartID = dbObj.PartID;
            this.Description = dbObj.Description;
            this.Quantity = dbObj.Quantity;
            this.UnitCost = dbObj.UnitCost;
            this.UnitOfMeasure = dbObj.UnitOfMeasure;
            this.AccountCode = dbObj.AccountCode;
            this.AccountId = dbObj.AccountId;
            this.PLCreateDate = dbObj.PLCreateDate;
            this.Status = dbObj.Status;
            this.DateProcessed = dbObj.DateProcessed;
            this.POImpHdrId = dbObj.POImpHdrId;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_POImpLineHist dbObj = new b_POImpLineHist();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_POImpLineHist ToDatabaseObject()
        {
            b_POImpLineHist dbObj = new b_POImpLineHist();
            dbObj.ClientId = this.ClientId;
            dbObj.POImpLineHistId = this.POImpLineHistId;
            dbObj.POImpLineId = this.POImpLineId;
            dbObj.EXPOID = this.EXPOID;
            dbObj.EXPOLineID = this.EXPOLineID;
            dbObj.SOMAXPRLineId = this.SOMAXPRLineId;
            dbObj.LineNumber = this.LineNumber;
            dbObj.EXPartId = this.EXPartId;
            dbObj.PartNumber = this.PartNumber;
            dbObj.PartID = this.PartID;
            dbObj.Description = this.Description;
            dbObj.Quantity = this.Quantity;
            dbObj.UnitCost = this.UnitCost;
            dbObj.UnitOfMeasure = this.UnitOfMeasure;
            dbObj.AccountCode = this.AccountCode;
            dbObj.AccountId = this.AccountId;
            dbObj.PLCreateDate = this.PLCreateDate;
            dbObj.Status = this.Status;
            dbObj.DateProcessed = this.DateProcessed;
            dbObj.POImpHdrId = this.POImpHdrId;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            POImpLineHist_Create trans = new POImpLineHist_Create();
            trans.POImpLineHist = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.POImpLineHist);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            POImpLineHist_Retrieve trans = new POImpLineHist_Retrieve();
            trans.POImpLineHist = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.POImpLineHist);
        }

        public void Update(DatabaseKey dbKey) 
        {
            POImpLineHist_Update trans = new POImpLineHist_Update();
            trans.POImpLineHist = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.POImpLineHist);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            POImpLineHist_Delete trans = new POImpLineHist_Delete();
            trans.POImpLineHist = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.POImpLineHistId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _POImpLineHistId;
        private long _POImpLineId;
        private long _EXPOID;
        private long _EXPOLineID;
        private string _SOMAXPRLineId;
        private int _LineNumber;
        private int _EXPartId;
        private string _PartNumber;
        private long _PartID;
        private string _Description;
        private decimal _Quantity;
        private decimal _UnitCost;
        private string _UnitOfMeasure;
        private string _AccountCode;
        private long _AccountId;
        private DateTime? _PLCreateDate;
        private string _Status;
        private DateTime? _DateProcessed;
        private long _POImpHdrId;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// POImpLineHistId property
        /// </summary>
        [DataMember]
        public long POImpLineHistId
        {
            get { return _POImpLineHistId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _POImpLineHistId); }
        }

        /// <summary>
        /// POImpLineId property
        /// </summary>
        [DataMember]
        public long POImpLineId
        {
            get { return _POImpLineId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _POImpLineId); }
        }

        /// <summary>
        /// EXPOID property
        /// </summary>
        [DataMember]
        public long EXPOID
        {
            get { return _EXPOID; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EXPOID); }
        }

        /// <summary>
        /// EXPOLineID property
        /// </summary>
        [DataMember]
        public long EXPOLineID
        {
            get { return _EXPOLineID; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EXPOLineID); }
        }

        /// <summary>
        /// SOMAXPRLineId property
        /// </summary>
        [DataMember]
        public string SOMAXPRLineId
        {
            get { return _SOMAXPRLineId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _SOMAXPRLineId); }
        }

        /// <summary>
        /// LineNumber property
        /// </summary>
        [DataMember]
        public int LineNumber
        {
            get { return _LineNumber; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _LineNumber); }
        }

        /// <summary>
        /// EXPartId property
        /// </summary>
        [DataMember]
        public int EXPartId
        {
            get { return _EXPartId; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _EXPartId); }
        }

        /// <summary>
        /// PartNumber property
        /// </summary>
        [DataMember]
        public string PartNumber
        {
            get { return _PartNumber; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _PartNumber); }
        }

        /// <summary>
        /// PartID property
        /// </summary>
        [DataMember]
        public long PartID
        {
            get { return _PartID; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _PartID); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// Quantity property
        /// </summary>
        [DataMember]
        public decimal Quantity
        {
            get { return _Quantity; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _Quantity); }
        }

        /// <summary>
        /// UnitCost property
        /// </summary>
        [DataMember]
        public decimal UnitCost
        {
            get { return _UnitCost; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _UnitCost); }
        }

        /// <summary>
        /// UnitOfMeasure property
        /// </summary>
        [DataMember]
        public string UnitOfMeasure
        {
            get { return _UnitOfMeasure; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _UnitOfMeasure); }
        }

        /// <summary>
        /// AccountCode property
        /// </summary>
        [DataMember]
        public string AccountCode
        {
            get { return _AccountCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AccountCode); }
        }

        /// <summary>
        /// AccountId property
        /// </summary>
        [DataMember]
        public long AccountId
        {
            get { return _AccountId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AccountId); }
        }

        /// <summary>
        /// PLCreateDate property
        /// </summary>
        [DataMember]
        public DateTime? PLCreateDate
        {
            get { return _PLCreateDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _PLCreateDate); }
        }

        /// <summary>
        /// Status property
        /// </summary>
        [DataMember]
        public string Status
        {
            get { return _Status; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Status); }
        }

        /// <summary>
        /// DateProcessed property
        /// </summary>
        [DataMember]
        public DateTime? DateProcessed
        {
            get { return _DateProcessed; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _DateProcessed); }
        }

        /// <summary>
        /// POImpHdrId property
        /// </summary>
        [DataMember]
        public long POImpHdrId
        {
            get { return _POImpHdrId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _POImpHdrId); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
