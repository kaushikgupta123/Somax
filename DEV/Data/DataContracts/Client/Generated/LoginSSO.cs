/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2022 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the LoginSSO table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class LoginSSO : DataContractBase
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public LoginSSO()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_LoginSSO dbObj)
        {
            this.ClientId = dbObj.ClientId;
            this.LoginSSOId = dbObj.LoginSSOId;
            this.UserInfoId = dbObj.UserInfoId;
            this.MicrosoftMailId = dbObj.MicrosoftMailId;
            this.GMailId = dbObj.GMailId;
            this.InactiveFlag = dbObj.InactiveFlag;
            this.WindowsADUserId = dbObj.WindowsADUserId;

            // Turn on auditing
            AuditEnabled = true;
        }

        private void Initialize()
        {
            b_LoginSSO dbObj = new b_LoginSSO();
            UpdateFromDatabaseObject(dbObj);

            // Turn off auditing for object initialization
            AuditEnabled = false;
        }

        public b_LoginSSO ToDatabaseObject()
        {
            b_LoginSSO dbObj = new b_LoginSSO();
            dbObj.ClientId = this.ClientId;
            dbObj.LoginSSOId = this.LoginSSOId;
            dbObj.UserInfoId = this.UserInfoId;
            dbObj.MicrosoftMailId = this.MicrosoftMailId;
            dbObj.GMailId = this.GMailId;
            dbObj.InactiveFlag = this.InactiveFlag;
            dbObj.WindowsADUserId = this.WindowsADUserId;
            return dbObj;
        }

        #endregion

        #region Transaction Methods

        public void Create(DatabaseKey dbKey)
        {
            LoginSSO_Create trans = new LoginSSO_Create();
            trans.LoginSSO = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.LoginSSO);
        }

        public void Retrieve(DatabaseKey dbKey)
        {
            LoginSSO_Retrieve trans = new LoginSSO_Retrieve();
            trans.LoginSSO = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.LoginSSO);
        }

        public void Update(DatabaseKey dbKey)
        {
            LoginSSO_Update trans = new LoginSSO_Update();
            trans.LoginSSO = this.ToDatabaseObject();
            trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();

            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.LoginSSO);
        }

        public void Delete(DatabaseKey dbKey)
        {
            LoginSSO_Delete trans = new LoginSSO_Delete();
            trans.LoginSSO = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }

        protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.LoginSSOId;
            return BuildChangeLogDbObject(dbKey);
        }

        #endregion

        #region Private Variables

        private long _ClientId;
        private long _LoginSSOId;
        private long _UserInfoId;
        private string _MicrosoftMailId;
        private string _GMailId;
        private bool _InactiveFlag;
        private string _WindowsADUserId;
        #endregion

        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// LoginSSOId property
        /// </summary>
        [DataMember]
        public long LoginSSOId
        {
            get { return _LoginSSOId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _LoginSSOId); }
        }

        /// <summary>
        /// UserInfoId property
        /// </summary>
        [DataMember]
        public long UserInfoId
        {
            get { return _UserInfoId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UserInfoId); }
        }

        /// <summary>
        /// MicrosoftMailId property
        /// </summary>
        [DataMember]
        public string MicrosoftMailId
        {
            get { return _MicrosoftMailId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _MicrosoftMailId); }
        }

        /// <summary>
        /// GMailId property
        /// </summary>
        [DataMember]
        public string GMailId
        {
            get { return _GMailId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _GMailId); }
        }

        /// <summary>
        /// InactiveFlag property
        /// </summary>
        [DataMember]
        public bool InactiveFlag
        {
            get { return _InactiveFlag; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _InactiveFlag); }
        }

        /// <summary>
        /// WindowsADUserId property
        /// </summary>
        [DataMember]
        public string WindowsADUserId
        {
            get { return _WindowsADUserId; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _WindowsADUserId); }
        }
        #endregion


    }
}
