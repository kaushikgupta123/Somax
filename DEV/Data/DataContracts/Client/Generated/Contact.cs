/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2012 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Runtime.Serialization;
using System.Reflection;
using Database.Business;
using Database.Transactions;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Contact table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class Contact : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Contact()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_Contact dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.ContactId = dbObj.ContactId;
            this.ObjectId = dbObj.ObjectId;
            this.TableName = dbObj.TableName;
            this.OwnerId = dbObj.OwnerId;
            this.OwnerName = dbObj.OwnerName;
            this.Name = dbObj.Name;
            this.Address1 = dbObj.Address1;
            this.Address2 = dbObj.Address2;
            this.Address3 = dbObj.Address3;
            this.AddressCity = dbObj.AddressCity;
            this.AddressCountry = dbObj.AddressCountry;
            this.AddressPostCode = dbObj.AddressPostCode;
            this.AddressState = dbObj.AddressState;
            this.Phone1 = dbObj.Phone1;
            this.Phone2 = dbObj.Phone2;
            this.Phone3 = dbObj.Phone3;
            this.Email1 = dbObj.Email1;
            this.Email2 = dbObj.Email2;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_Contact dbObj = new b_Contact();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_Contact ToDatabaseObject()
        {
            b_Contact dbObj = new b_Contact();
            dbObj.ClientId = this.ClientId;
            dbObj.ContactId = this.ContactId;
            dbObj.ObjectId = this.ObjectId;
            dbObj.TableName = this.TableName;
            dbObj.OwnerId = this.OwnerId;
            dbObj.OwnerName = this.OwnerName;
            dbObj.Name = this.Name;
            dbObj.Address1 = this.Address1;
            dbObj.Address2 = this.Address2;
            dbObj.Address3 = this.Address3;
            dbObj.AddressCity = this.AddressCity;
            dbObj.AddressCountry = this.AddressCountry;
            dbObj.AddressPostCode = this.AddressPostCode;
            dbObj.AddressState = this.AddressState;
            dbObj.Phone1 = this.Phone1;
            dbObj.Phone2 = this.Phone2;
            dbObj.Phone3 = this.Phone3;
            dbObj.Email1 = this.Email1;
            dbObj.Email2 = this.Email2;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            Contact_Create trans = new Contact_Create();
            trans.Contact = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.Contact);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            Contact_Retrieve trans = new Contact_Retrieve();
            trans.Contact = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.Contact);
        }

        public void Update(DatabaseKey dbKey) 
        {
            Contact_Update trans = new Contact_Update();
            trans.Contact = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.Contact);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            Contact_Delete trans = new Contact_Delete();
            trans.Contact = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.ContactId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _ContactId;
        private long _ObjectId;
        private string _TableName;
        private long _OwnerId;
        private string _OwnerName;
        private string _Name;
        private string _Address1;
        private string _Address2;
        private string _Address3;
        private string _AddressCity;
        private string _AddressCountry;
        private string _AddressPostCode;
        private string _AddressState;
        private string _Phone1;
        private string _Phone2;
        private string _Phone3;
        private string _Email1;
        private string _Email2;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// ContactId property
        /// </summary>
        [DataMember]
        public long ContactId
        {
            get { return _ContactId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ContactId); }
        }

        /// <summary>
        /// ObjectId property
        /// </summary>
        [DataMember]
        public long ObjectId
        {
            get { return _ObjectId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ObjectId); }
        }

        /// <summary>
        /// TableName property
        /// </summary>
        [DataMember]
        public string TableName
        {
            get { return _TableName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _TableName); }
        }

        /// <summary>
        /// OwnerId property
        /// </summary>
        [DataMember]
        public long OwnerId
        {
            get { return _OwnerId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _OwnerId); }
        }

        /// <summary>
        /// OwnerName property
        /// </summary>
        [DataMember]
        public string OwnerName
        {
            get { return _OwnerName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _OwnerName); }
        }

        /// <summary>
        /// Name property
        /// </summary>
        [DataMember]
        public string Name
        {
            get { return _Name; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Name); }
        }

        /// <summary>
        /// Address1 property
        /// </summary>
        [DataMember]
        public string Address1
        {
            get { return _Address1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address1); }
        }

        /// <summary>
        /// Address2 property
        /// </summary>
        [DataMember]
        public string Address2
        {
            get { return _Address2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address2); }
        }

        /// <summary>
        /// Address3 property
        /// </summary>
        [DataMember]
        public string Address3
        {
            get { return _Address3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Address3); }
        }

        /// <summary>
        /// AddressCity property
        /// </summary>
        [DataMember]
        public string AddressCity
        {
            get { return _AddressCity; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCity); }
        }

        /// <summary>
        /// AddressCountry property
        /// </summary>
        [DataMember]
        public string AddressCountry
        {
            get { return _AddressCountry; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressCountry); }
        }

        /// <summary>
        /// AddressPostCode property
        /// </summary>
        [DataMember]
        public string AddressPostCode
        {
            get { return _AddressPostCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressPostCode); }
        }

        /// <summary>
        /// AddressState property
        /// </summary>
        [DataMember]
        public string AddressState
        {
            get { return _AddressState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AddressState); }
        }

        /// <summary>
        /// Phone1 property
        /// </summary>
        [DataMember]
        public string Phone1
        {
            get { return _Phone1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Phone1); }
        }

        /// <summary>
        /// Phone2 property
        /// </summary>
        [DataMember]
        public string Phone2
        {
            get { return _Phone2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Phone2); }
        }

        /// <summary>
        /// Phone3 property
        /// </summary>
        [DataMember]
        public string Phone3
        {
            get { return _Phone3; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Phone3); }
        }

        /// <summary>
        /// Email1 property
        /// </summary>
        [DataMember]
        public string Email1
        {
            get { return _Email1; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Email1); }
        }

        /// <summary>
        /// Email2 property
        /// </summary>
        [DataMember]
        public string Email2
        {
            get { return _Email2; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Email2); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
