/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2021 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the VendorCatalog table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class VendorCatalog : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public VendorCatalog()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_VendorCatalog dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.VendorCatalogId = dbObj.VendorCatalogId;
            this.VendorMasterId = dbObj.VendorMasterId;
            this.ExSourceId = dbObj.ExSourceId;
            this.ExSourceDocument = dbObj.ExSourceDocument;
            this.StartDate = dbObj.StartDate;
            this.EndDate = dbObj.EndDate;
            this.Inactive = dbObj.Inactive;
            //this.ExVendorId = dbObj.ExVendorId;
            //this.ExVendorSiteId = dbObj.ExVendorSiteId;
            //this.ExLineId = dbObj.ExLineId;
            //this.ExPartId = dbObj.ExPartId;
            //this.Category = dbObj.Category;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_VendorCatalog dbObj = new b_VendorCatalog();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_VendorCatalog ToDatabaseObject()
        {
            b_VendorCatalog dbObj = new b_VendorCatalog();
            dbObj.ClientId = this.ClientId;
            dbObj.VendorCatalogId = this.VendorCatalogId;
            dbObj.VendorMasterId = this.VendorMasterId;
            dbObj.ExSourceId = this.ExSourceId;
            dbObj.ExSourceDocument = this.ExSourceDocument;
            dbObj.StartDate = this.StartDate;
            dbObj.EndDate = this.EndDate;
            dbObj.Inactive = this.Inactive;
            //dbObj.ExVendorId = this.ExVendorId;
            //dbObj.ExVendorSiteId = this.ExVendorSiteId;
            //dbObj.ExLineId = this.ExLineId;
            //dbObj.ExPartId = this.ExPartId;
            //dbObj.Category = this.Category;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            VendorCatalog_Create trans = new VendorCatalog_Create();
            trans.VendorCatalog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.VendorCatalog);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            VendorCatalog_Retrieve trans = new VendorCatalog_Retrieve();
            trans.VendorCatalog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.VendorCatalog);
        }

        public void Update(DatabaseKey dbKey) 
        {
            VendorCatalog_Update trans = new VendorCatalog_Update();
            trans.VendorCatalog = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.VendorCatalog);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            VendorCatalog_Delete trans = new VendorCatalog_Delete();
            trans.VendorCatalog = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.VendorCatalogId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _VendorCatalogId;
        private long _VendorMasterId;
        private long _ExSourceId;
        private string _ExSourceDocument;
        private DateTime? _StartDate;
        private DateTime? _EndDate;
        private bool _Inactive;
        //private long _ExVendorId;
        //private long _ExVendorSiteId;
        //private long _ExLineId;
        //private long _ExPartId;
        //private string _Category;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// VendorCatalogId property
        /// </summary>
        [DataMember]
        public long VendorCatalogId
        {
            get { return _VendorCatalogId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorCatalogId); }
        }

        /// <summary>
        /// VendorMasterId property
        /// </summary>
        [DataMember]
        public long VendorMasterId
        {
            get { return _VendorMasterId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _VendorMasterId); }
        }

        /// <summary>
        /// ExSourceId property
        /// </summary>
        [DataMember]
        public long ExSourceId
        {
            get { return _ExSourceId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExSourceId); }
        }

        /// <summary>
        /// ExSourceDocument property
        /// </summary>
        [DataMember]
        public string ExSourceDocument
        {
            get { return _ExSourceDocument; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ExSourceDocument); }
        }

        /// <summary>
        /// StartDate property
        /// </summary>
        [DataMember]
        public DateTime? StartDate
        {
            get { return _StartDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _StartDate); }
        }

        /// <summary>
        /// EndDate property
        /// </summary>
        [DataMember]
        public DateTime? EndDate
        {
            get { return _EndDate; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _EndDate); }
        }

        /// <summary>
        /// Inactive property
        /// </summary>
        [DataMember]
        public bool Inactive
        {
            get { return _Inactive; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _Inactive); }
        }
        /*
        /// <summary>
        /// ExVendorId property
        /// </summary>
        [DataMember]
        public long ExVendorId
        {
            get { return _ExVendorId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExVendorId); }
        }

        /// <summary>
        /// ExVendorSiteId property
        /// </summary>
        [DataMember]
        public long ExVendorSiteId
        {
            get { return _ExVendorSiteId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExVendorSiteId); }
        }

        /// <summary>
        /// ExLineId property
        /// </summary>
        [DataMember]
        public long ExLineId
        {
            get { return _ExLineId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExLineId); }
        }

        /// <summary>
        /// ExPartId property
        /// </summary>
        [DataMember]
        public long ExPartId
        {
            get { return _ExPartId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ExPartId); }
        }

        /// <summary>
        /// Category property
        /// </summary>
        [DataMember]
        public string Category
        {
            get { return _Category; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Category); }
        }
        */
        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
