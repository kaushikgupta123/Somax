/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2012 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;
using Database.Business;
using Database;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Downtime table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class Downtime : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Downtime()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_Downtime dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.DowntimeId = dbObj.DowntimeId;
            this.EquipmentId = dbObj.EquipmentId;
            this.ActionCode = dbObj.ActionCode;
            this.DateDown = dbObj.DateDown;
            this.DateUp = dbObj.DateUp;
            this.FailureCode = dbObj.FailureCode;
            this.MinutesDown = dbObj.MinutesDown;
            this.Notes = dbObj.Notes;
            this.Operator_PersonnelId = dbObj.Operator_PersonnelId;
            this.ReasonForDown = dbObj.ReasonForDown;
            this.WorkOrderId = dbObj.WorkOrderId;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_Downtime dbObj = new b_Downtime();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_Downtime ToDatabaseObject()
        {
            b_Downtime dbObj = new b_Downtime();
            dbObj.ClientId = this.ClientId;
            dbObj.DowntimeId = this.DowntimeId;
            dbObj.EquipmentId = this.EquipmentId;
            dbObj.ActionCode = this.ActionCode;
            dbObj.DateDown = this.DateDown;
            dbObj.DateUp = this.DateUp;
            dbObj.FailureCode = this.FailureCode;
            dbObj.MinutesDown = this.MinutesDown;
            dbObj.Notes = this.Notes;
            dbObj.Operator_PersonnelId = this.Operator_PersonnelId;
            dbObj.ReasonForDown = this.ReasonForDown;
            dbObj.WorkOrderId = this.WorkOrderId;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            Downtime_Create trans = new Downtime_Create();
            trans.Downtime = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.Downtime);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            Downtime_Retrieve trans = new Downtime_Retrieve();
            trans.Downtime = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.Downtime);
        }

        public void Update(DatabaseKey dbKey) 
        {
            Downtime_Update trans = new Downtime_Update();
            trans.Downtime = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.Downtime);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            Downtime_Delete trans = new Downtime_Delete();
            trans.Downtime = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.DowntimeId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _DowntimeId;
        private long _EquipmentId;
        private string _ActionCode;
        private DateTime? _DateDown;
        private DateTime? _DateUp;
        private string _FailureCode;
        private decimal _MinutesDown;
        private string _Notes;
        private long _Operator_PersonnelId;
        private string _ReasonForDown;
        private long _WorkOrderId;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// DowntimeId property
        /// </summary>
        [DataMember]
        public long DowntimeId
        {
            get { return _DowntimeId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _DowntimeId); }
        }

        /// <summary>
        /// EquipmentId property
        /// </summary>
        [DataMember]
        public long EquipmentId
        {
            get { return _EquipmentId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _EquipmentId); }
        }

        /// <summary>
        /// ActionCode property
        /// </summary>
        [DataMember]
        public string ActionCode
        {
            get { return _ActionCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ActionCode); }
        }

        /// <summary>
        /// DateDown property
        /// </summary>
        [DataMember]
        public DateTime? DateDown
        {
            get { return _DateDown; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _DateDown); }
        }

        /// <summary>
        /// DateUp property
        /// </summary>
        [DataMember]
        public DateTime? DateUp
        {
            get { return _DateUp; }
            set { Set<DateTime?>(MethodBase.GetCurrentMethod().Name, value, ref _DateUp); }
        }

        /// <summary>
        /// FailureCode property
        /// </summary>
        [DataMember]
        public string FailureCode
        {
            get { return _FailureCode; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _FailureCode); }
        }

        /// <summary>
        /// MinutesDown property
        /// </summary>
        [DataMember]
        public decimal MinutesDown
        {
            get { return _MinutesDown; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _MinutesDown); }
        }

        /// <summary>
        /// Notes property
        /// </summary>
        [DataMember]
        public string Notes
        {
            get { return _Notes; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Notes); }
        }

        /// <summary>
        /// Operator_PersonnelId property
        /// </summary>
        [DataMember]
        public long Operator_PersonnelId
        {
            get { return _Operator_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Operator_PersonnelId); }
        }

        /// <summary>
        /// ReasonForDown property
        /// </summary>
        [DataMember]
        public string ReasonForDown
        {
            get { return _ReasonForDown; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ReasonForDown); }
        }

        /// <summary>
        /// WorkOrderId property
        /// </summary>
        [DataMember]
        public long WorkOrderId
        {
            get { return _WorkOrderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _WorkOrderId); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
