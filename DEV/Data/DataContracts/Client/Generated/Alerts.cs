/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2017 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the Alerts table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class Alerts : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Alerts()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_Alerts dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.AlertsId = dbObj.AlertsId;
            this.AlertDefineId = dbObj.AlertDefineId;
            this.Headline = dbObj.Headline;
            this.Summary = dbObj.Summary;
            this.Details = dbObj.Details;
            this.From = dbObj.From;
            this.AlertType = dbObj.AlertType;
            this.ObjectId = dbObj.ObjectId;
            this.ObjectName = dbObj.ObjectName;
            this.Action = dbObj.Action;
            this.ObjectState = dbObj.ObjectState;
            this.IsCleared = dbObj.IsCleared;
            this.Notes = dbObj.Notes;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_Alerts dbObj = new b_Alerts();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_Alerts ToDatabaseObject()
        {
            b_Alerts dbObj = new b_Alerts();
            dbObj.ClientId = this.ClientId;
            dbObj.AlertsId = this.AlertsId;
            dbObj.AlertDefineId = this.AlertDefineId;
            dbObj.Headline = this.Headline;
            dbObj.Summary = this.Summary;
            dbObj.Details = this.Details;
            dbObj.From = this.From;
            dbObj.AlertType = this.AlertType;
            dbObj.ObjectId = this.ObjectId;
            dbObj.ObjectName = this.ObjectName;
            dbObj.Action = this.Action;
            dbObj.ObjectState = this.ObjectState;
            dbObj.IsCleared = this.IsCleared;
            dbObj.Notes = this.Notes;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            Alerts_Create trans = new Alerts_Create();
            trans.Alerts = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.Alerts);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            Alerts_Retrieve trans = new Alerts_Retrieve();
            trans.Alerts = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.Alerts);
        }

        public void Update(DatabaseKey dbKey) 
        {
            Alerts_Update trans = new Alerts_Update();
            trans.Alerts = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.Alerts);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            Alerts_Delete trans = new Alerts_Delete();
            trans.Alerts = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.AlertsId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _AlertsId;
        private long _AlertDefineId;
        private string _Headline;
        private string _Summary;
        private string _Details;
        private string _From;
        private string _AlertType;
        private long _ObjectId;
        private string _ObjectName;
        private string _Action;
        private string _ObjectState;
        private bool _IsCleared;
        private string _Notes;
        private int _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientId property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// AlertsId property
        /// </summary>
        [DataMember]
        public long AlertsId
        {
            get { return _AlertsId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AlertsId); }
        }

        /// <summary>
        /// AlertDefineId property
        /// </summary>
        [DataMember]
        public long AlertDefineId
        {
            get { return _AlertDefineId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AlertDefineId); }
        }

        /// <summary>
        /// Headline property
        /// </summary>
        [DataMember]
        public string Headline
        {
            get { return _Headline; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Headline); }
        }

        /// <summary>
        /// Summary property
        /// </summary>
        [DataMember]
        public string Summary
        {
            get { return _Summary; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Summary); }
        }

        /// <summary>
        /// Details property
        /// </summary>
        [DataMember]
        public string Details
        {
            get { return _Details; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Details); }
        }

        /// <summary>
        /// From property
        /// </summary>
        [DataMember]
        public string From
        {
            get { return _From; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _From); }
        }

        /// <summary>
        /// AlertType property
        /// </summary>
        [DataMember]
        public string AlertType
        {
            get { return _AlertType; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _AlertType); }
        }

        /// <summary>
        /// ObjectId property
        /// </summary>
        [DataMember]
        public long ObjectId
        {
            get { return _ObjectId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ObjectId); }
        }

        /// <summary>
        /// ObjectName property
        /// </summary>
        [DataMember]
        public string ObjectName
        {
            get { return _ObjectName; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ObjectName); }
        }

        /// <summary>
        /// Action property
        /// </summary>
        [DataMember]
        public string Action
        {
            get { return _Action; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Action); }
        }

        /// <summary>
        /// ObjectState property
        /// </summary>
        [DataMember]
        public string ObjectState
        {
            get { return _ObjectState; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _ObjectState); }
        }

        /// <summary>
        /// IsCleared property
        /// </summary>
        [DataMember]
        public bool IsCleared
        {
            get { return _IsCleared; }
            set { Set<bool>(MethodBase.GetCurrentMethod().Name, value, ref _IsCleared); }
        }

        /// <summary>
        /// Notes property
        /// </summary>
        [DataMember]
        public string Notes
        {
            get { return _Notes; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Notes); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public int UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<int>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
