/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2015 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Reflection;

using Database;
using Database.Business;

namespace DataContracts
{
    /// <summary>
    /// Business object that stores a record from the InvoiceMatchItem table.
    /// </summary>
    [Serializable()]
    [DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SOMAX.DataContracts")]
    public partial class InvoiceMatchItem : DataContractBase 
    {
        #region Constructors
        /// <summary>
        /// Default constructor.
        /// </summary>
        public InvoiceMatchItem()
        {
            Initialize();
        }

        public void Clear()
        {
            Initialize();
        }

        public void UpdateFromDatabaseObject(b_InvoiceMatchItem dbObj)
        {
		            this.ClientId = dbObj.ClientId;
            this.InvoiceMatchItemId = dbObj.InvoiceMatchItemId;
            this.InvoiceMatchHeaderId = dbObj.InvoiceMatchHeaderId;
            this.StoreroomId = dbObj.StoreroomId;
            this.AccountId = dbObj.AccountId;
            this.POReceiptItemID = dbObj.POReceiptItemID;
            this.Quantity = dbObj.Quantity;
            this.UnitCost = dbObj.UnitCost;
            this.UnitOfMeasure = dbObj.UnitOfMeasure;
            this.Creator_PersonnelId = dbObj.Creator_PersonnelId;
            this.Description = dbObj.Description;
            this.UpdateIndex = dbObj.UpdateIndex;
			
			// Turn on auditing
			AuditEnabled = true;
		}

        private void Initialize()
        {
            b_InvoiceMatchItem dbObj = new b_InvoiceMatchItem();
            UpdateFromDatabaseObject(dbObj);
			
			// Turn off auditing for object initialization
			AuditEnabled = false;
        }

        public b_InvoiceMatchItem ToDatabaseObject()
        {
            b_InvoiceMatchItem dbObj = new b_InvoiceMatchItem();
            dbObj.ClientId = this.ClientId;
            dbObj.InvoiceMatchItemId = this.InvoiceMatchItemId;
            dbObj.InvoiceMatchHeaderId = this.InvoiceMatchHeaderId;
            dbObj.StoreroomId = this.StoreroomId;
            dbObj.AccountId = this.AccountId;
            dbObj.POReceiptItemID = this.POReceiptItemID;
            dbObj.Quantity = this.Quantity;
            dbObj.UnitCost = this.UnitCost;
            dbObj.UnitOfMeasure = this.UnitOfMeasure;
            dbObj.Creator_PersonnelId = this.Creator_PersonnelId;
            dbObj.Description = this.Description;
            dbObj.UpdateIndex = this.UpdateIndex;
            return dbObj;
        }      

        #endregion

        #region Transaction Methods
        
        public void Create(DatabaseKey dbKey) 
        {
            InvoiceMatchItem_Create trans = new InvoiceMatchItem_Create();
            trans.InvoiceMatchItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure may have populated an auto-incremented key. 
            UpdateFromDatabaseObject(trans.InvoiceMatchItem);
        }

        public void Retrieve(DatabaseKey dbKey) 
        {
            InvoiceMatchItem_Retrieve trans = new InvoiceMatchItem_Retrieve();
            trans.InvoiceMatchItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            UpdateFromDatabaseObject(trans.InvoiceMatchItem);
        }

        public void Update(DatabaseKey dbKey) 
        {
            InvoiceMatchItem_Update trans = new InvoiceMatchItem_Update();
            trans.InvoiceMatchItem = this.ToDatabaseObject();
			trans.ChangeLog = GetChangeLogObject(dbKey);
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
            
            // The create procedure changed the Update Index.
            UpdateFromDatabaseObject(trans.InvoiceMatchItem);
        }

        public void Delete(DatabaseKey dbKey) 
        {
            InvoiceMatchItem_Delete trans = new InvoiceMatchItem_Delete();
            trans.InvoiceMatchItem = this.ToDatabaseObject();
            trans.dbKey = dbKey.ToTransDbKey();
            trans.Execute();
        }
		
		protected b_ChangeLog GetChangeLogObject(DatabaseKey dbKey)
        {
            AuditTargetObjectId = this.InvoiceMatchItemId;
			return BuildChangeLogDbObject(dbKey);
        }
        
        #endregion
		
		#region Private Variables

        private long _ClientId;
        private long _InvoiceMatchItemId;
        private long _InvoiceMatchHeaderId;
        private long _StoreroomId;
        private long _AccountId;
        private long _POReceiptItemID;
        private decimal _Quantity;
        private decimal _UnitCost;
        private string _UnitOfMeasure;
        private long _Creator_PersonnelId;
        private string _Description;
        private long _UpdateIndex;
        #endregion
        
        #region Properties


        /// <summary>
        /// ClientID property
        /// </summary>
        [DataMember]
        public long ClientId
        {
            get { return _ClientId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _ClientId); }
        }

        /// <summary>
        /// InvoiceMatchItemId property
        /// </summary>
        [DataMember]
        public long InvoiceMatchItemId
        {
            get { return _InvoiceMatchItemId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _InvoiceMatchItemId); }
        }

        /// <summary>
        /// InvoiceMatchHeaderId property
        /// </summary>
        [DataMember]
        public long InvoiceMatchHeaderId
        {
            get { return _InvoiceMatchHeaderId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _InvoiceMatchHeaderId); }
        }

        /// <summary>
        /// StoreroomId property
        /// </summary>
        [DataMember]
        public long StoreroomId
        {
            get { return _StoreroomId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _StoreroomId); }
        }

        /// <summary>
        /// AccountId property
        /// </summary>
        [DataMember]
        public long AccountId
        {
            get { return _AccountId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _AccountId); }
        }

        /// <summary>
        /// POReceiptItemID property
        /// </summary>
        [DataMember]
        public long POReceiptItemID
        {
            get { return _POReceiptItemID; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _POReceiptItemID); }
        }

        /// <summary>
        /// Quantity property
        /// </summary>
        [DataMember]
        public decimal Quantity
        {
            get { return _Quantity; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _Quantity); }
        }

        /// <summary>
        /// UnitCost property
        /// </summary>
        [DataMember]
        public decimal UnitCost
        {
            get { return _UnitCost; }
            set { Set<decimal>(MethodBase.GetCurrentMethod().Name, value, ref _UnitCost); }
        }

        /// <summary>
        /// UnitOfMeasure property
        /// </summary>
        [DataMember]
        public string UnitOfMeasure
        {
            get { return _UnitOfMeasure; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _UnitOfMeasure); }
        }

        /// <summary>
        /// Creator_PersonnelId property
        /// </summary>
        [DataMember]
        public long Creator_PersonnelId
        {
            get { return _Creator_PersonnelId; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _Creator_PersonnelId); }
        }

        /// <summary>
        /// Description property
        /// </summary>
        [DataMember]
        public string Description
        {
            get { return _Description; }
            set { Set<string>(MethodBase.GetCurrentMethod().Name, value, ref _Description); }
        }

        /// <summary>
        /// UpdateIndex property
        /// </summary>
        [DataMember]
        public long UpdateIndex
        {
            get { return _UpdateIndex; }
            set { Set<long>(MethodBase.GetCurrentMethod().Name, value, ref _UpdateIndex); }
        }
        #endregion
		
		
    }
}
