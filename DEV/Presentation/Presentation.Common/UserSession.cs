/*
 ******************************************************************************
 * PROPRIETARY DATA 
 ******************************************************************************
 * This work is PROPRIETARY to SOMAX Inc and is protected 
 * under Federal Law as an unpublished Copyrighted work and under State Law as 
 * a Trade Secret. 
 ******************************************************************************
 * Copyright (c) 2011 by SOMAX Inc.
 * All rights reserved. 
 ******************************************************************************
 * THIS CODE HAS BEEN GENERATED BY AN AUTOMATED PROCESS.
 * DO NOT MODIFY BY HAND.    MODIFY THE TEMPLATE AND REGENERATE THE CODE 
 * USING THE CURRENT DATABASE IF MODIFICATIONS ARE NEEDED.
 ******************************************************************************
 */

using System;
using System.Web;

using SOMAX.G4.Data.Common.Constants;
using SOMAX.G4.Data.Common.Extensions;

namespace SOMAX.G4.Presentation.Common
{
    public class UserSession
    {
        #region Properties

        public static Guid SessionId
        {
            get
            {
                Guid sessionId = Guid.Empty;

                if (HttpContext.Current.Session[SessionConstants.SESSION_ID] != null)
                {
                    Guid.TryParse(HttpContext.Current.Session[SessionConstants.SESSION_ID].ToString(), out sessionId);
                }

                return sessionId;
            }
            set
            {
                HttpContext.Current.Session[SessionConstants.SESSION_ID] = value;
            }
        }

        public static long ObjectId
        {
            get
            {
                long objectId = -1;

                if (HttpContext.Current.Session[SessionConstants.OBJECT_ID] != null)
                {
                    objectId = HttpContext.Current.Session[SessionConstants.OBJECT_ID].ToString().ToLong();
                }

                return objectId;
            }
            set
            {
                HttpContext.Current.Session[SessionConstants.OBJECT_ID] = value;
            }
        }

        //-----------------------------------Added By Indusnet Technologies------------------
        public static long AccessClientId
        {
            get
            {
                long accessclientid = -1;

                if (HttpContext.Current.Session[SessionConstants.ACCESS_CLIENT_ID] != null)
                {
                    accessclientid = HttpContext.Current.Session[SessionConstants.ACCESS_CLIENT_ID].ToString().ToLong();
                }

                return accessclientid;
            }
            set
            {
                HttpContext.Current.Session[SessionConstants.ACCESS_CLIENT_ID] = value;
            }
        }

        //----------------------------------End Added By Indusnet Technologies---------------

        #endregion
       

        #region Public Methods
        /// <summary>Clear all session variables</summary>
        public static void Clear()
        {
            System.Web.HttpContext.Current.Session.Remove(SessionConstants.SESSION_ID);
            System.Web.HttpContext.Current.Session.Remove(SessionConstants.OBJECT_ID);
            System.Web.HttpContext.Current.Session.Remove(SessionConstants.ACCESS_CLIENT_ID);
        }
        #endregion
    }
}
