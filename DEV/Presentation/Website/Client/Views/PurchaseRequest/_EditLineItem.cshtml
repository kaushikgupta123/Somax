@model Client.Models.PurchaseRequest.PurchaseRequestVM
@{
    string hColumnList = "";
    string reqColumnList = "";
    string disablColumnList = "";
    if (Model.hiddenColumnList != null && Model.hiddenColumnList.Count > 0)
    {
        foreach (var item in Model.hiddenColumnList)
        {
            hColumnList = hColumnList + item + ",";
        }
    }
    if (Model.requiredColumnList != null && Model.requiredColumnList.Count > 0)
    {
        foreach (var item in Model.requiredColumnList)
        {
            reqColumnList = reqColumnList + item + ",";
        }
    }
    if (Model.disabledColumnList != null && Model.disabledColumnList.Count > 0)
    {
        foreach (var item in Model.disabledColumnList)
        {
            disablColumnList = disablColumnList + item + ",";
        }
    }
}
<script type="text/javascript">
    $(function () {
        var v = "@hColumnList";
        var str = v.split(",");
        if (str != null && str != "") {
            $.each(str, function (i, jvalue) {
                var elementId = '#li' + jvalue;
                $(document).find(elementId).hide();
            });
        }
        var rq = "@reqColumnList";
        var arr = rq.split(",");
        if (arr!=null && arr!="")
        {
            $.each(arr, function (i, jvalue) {
                var reqElementId = '#r' + jvalue;
                if ($(reqElementId).length)
                {
                    $(document).find(reqElementId).css('visibility', 'visible');
                }
            });
        }
        var dq = "@disablColumnList";
        var amr = dq.split(",");
        if (amr != null && amr != "") {
            $.each(amr, function (i, jvalue) {
                var reqElementId = '#' + 'lineItem_' + jvalue;
                if ($(reqElementId).length) {
                    if ($(reqElementId).prop('type') == 'text') {
                        $(document).find(reqElementId).attr('readonly', 'readonly').addClass('readonly');
                    }
                    //else if ($(reqElementId).prop('type') == 'select-one') {
                    else {
                        $(document).find(reqElementId).attr('disabled', 'disabled');
                    }
                }
            });
        }
    });
</script>
<div class="m-subheader">
    <div class="new-m-subheader">
        <div class="PageTitle">
            <div class="align-items-center separator">
                <h3 class="m-subheader__title ">
                    @Model.Loc.Where(a => a.ResourceId == "spnPurchaseRequest").FirstOrDefault().Value.ToString()
                </h3>
            </div>
        </div>

        <div class="NewBreadcrumbArea">
            <div class="newBreadcrumb">
                <ul>
                    <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                    <li><a href="/PurchaseRequest/Index?page=Procurement_Requests">@Model.Loc.Where(a => a.ResourceId == "spnPdPurchaseRequestSearch").FirstOrDefault().Value.ToString()</a></li>
                    <li><a href="javascript:void(0)" id="brdprlineitem" data-val="@Model.lineItem.PurchaseRequestId">@Model.lineItem.ClientLookupId</a></li>
                    <li class="active">@Model.Loc.Where(a => a.ResourceId == "spnPdUpdateLineItem").FirstOrDefault().Value.ToString()</li>
                </ul>
                <div style="clear:both;"></div>
            </div>
        </div>
        <div style="clear:both;"></div>
    </div>
</div>

@Html.Partial("_ErrorDiv")

@using (Ajax.BeginForm("EditLineItem", "PurchaseRequest", new AjaxOptions { HttpMethod = "Post", OnSuccess = "EditLineItemOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }, new { id = "frmEditPRLineItemId" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xl-12">
            <div class="m-portlet newPort" id="m_portlet" style="padding:15px;">
                <div class="bottomBlock">
                    <div class="tabsArea nobg">
                        <ul class="listView nobrd">
                            @if (Model.lineItem.ispunchout)
                            {
                                <li id="liLineNumber">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPdLineNo").FirstOrDefault().Value.ToString(): </span>
                                    <span class="inputText wthAdjst">
                                        @Html.TextBoxFor(m => m.lineItem.LineNumber, new { @class = "form-control search readonly", autocomplete = "off", @readonly = "readonly" })
                                    </span>
                                </li>
                                if (Model.lineItem.PartId != 0)
                                {
                                    <li id="liPartClientLookupId">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPartID").FirstOrDefault().Value.ToString() : <small>*</small></span>
                                        <span class="inputText wthAdjst">
                                            @Html.TextBoxFor(m => m.lineItem.PartClientLookupId, new { @class = "form-control search readonly", autocomplete = "off", @readonly = "readonly" })
                                        </span>
                                    </li>
                                }
                                <li id="liDescription">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnDescription").FirstOrDefault().Value.ToString() :<small id="rDescription" style="visibility:hidden;">*</small>  </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.Description, "", new { style = "display:none" })
                                        @Html.TextBoxFor(m => m.lineItem.Description, new { @class = "form-control search readonly", autocomplete = "off", @readonly = "readonly" })
                                    </span>
                                </li>
                                <li id="liOrderQuantity">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPdQuantity").FirstOrDefault().Value.ToString() :<small id="rOrderQuantity" style="visibility:hidden;">*</small> </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.OrderQuantity, "", new { style = "display:none" })
                                        @Html.TextBoxFor(m => m.lineItem.OrderQuantity, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                    </span>
                                </li>
                                <li id="liUnitofMeasure">
                                    <span class="label">Purchase UOM :<small id="rUnitofMeasure" style="visibility:hidden;">*</small> </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.PurchaseUOM, "", new { style = "display:none" })
                                        @Html.DropDownListFor(m => m.lineItem.PurchaseUOM, Model.lineItem.UOMList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;", @readonly = "readonly" })
                                    </span>
                                </li>
                                <li id="liUnitCost">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnUnitCost").FirstOrDefault().Value.ToString() :<small id="rUnitCost" style="visibility:hidden;">*</small> </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.UnitCost, "", new { style = "display:none" })
                                        @Html.TextBoxFor(m => m.lineItem.UnitCost, new { @class = "form-control search decimalinput readonly", autocomplete = "off", @readonly = "readonly" })
                                    </span>
                                </li>
                                <li id="liTotalCost">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPdTotalCost").FirstOrDefault().Value.ToString() : </span>
                                    <span class="inputText wthAdjst">
                                        @Html.TextBoxFor(m => m.lineItem.TotalCost, new { @class = "form-control search decimalinput readonly", autocomplete = "off", @readonly = "readonly" })
                                    </span>
                                </li>
                                <li id="liAccountId">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPdAccount").FirstOrDefault().Value.ToString() :<small id="rAccountId" style="visibility:hidden;">*</small> </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.AccountId, "", new { style = "display:none" })
                                        @Html.DropDownListFor(m => m.lineItem.AccountId, Model.lineItem.AccountList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                    </span>
                                </li>
                                if (Model.lineItem.PartId == 0)
                                {
                                    <li id="liChargeType">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnChargeType").FirstOrDefault().Value.ToString() :<small id="rChargeType" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText wthAdjst">
                                            @Html.ValidationMessageFor(m => m.lineItem.ChargeType, "", new { style = "display:none" })
                                            @Html.DropDownListFor(m => m.lineItem.ChargeType, Model.lineItem.ChargeTypeList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;", @disabled = "disabled" })
                                        </span>
                                    </li>
                                    <li id="liChargeToClientLookupIdToShow" style="position:relative;">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "GlobalChargeTo").FirstOrDefault().Value.ToString() :<small>*</small> </span>
                                        <span class="inputText wthAdjst" style="position:relative;">
                                            <div class="dropdown dropTableOuter">
                                                <div class="input-group">
                                                    @Html.ValidationMessageFor(m => m.lineItem.ChargeToClientLookupIdToShow, "", new { style = "display:none" })
                                                    @Html.TextBoxFor(m => m.lineItem.ChargeToClientLookupIdToShow, new { @class = "form-control search dropbtn readonly", id = "txtChargeToId", autocomplete = "off", @readonly = "readonly" })
                                                    @Html.HiddenFor(m => m.lineItem.ChargeToID, new { id = "hdnChargeToId" })

                                                    <div class="input-group-btn">
                                                        <button class="btn btn-white btntxtInputGroup" type="button" id="openEditgrid" disabled>
                                                            <i id="srcicon" class="fa fa-search"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </span>
                                        @if (Model.lineItem.ChargeType.Equals("Equipment"))
                                        {
                                            @*<a href="javascript:void(0)" class="lookupTree" onclick="return false;"><img src="~/Scripts/ImageZoom/images/tree7.png" /></a>*@
                                            @*<i class="fa fa-tree lookupTree" onclick="return false;"></i>*@
                                            <i class="fa fa-tree chargeTree" style="display:block;"></i>
                                        }
                                        else
                                        {
                                            @*<a href="javascript:void(0)" class="lookupTree" style="display:none;" onclick="return false"><img src="~/Scripts/ImageZoom/images/tree7.png" /></a>*@
                                            @*<i class="fa fa-tree lookupTree" onclick="return false;"></i>*@
                                            <i class="fa fa-tree chargeTree" style="display:none;"></i>
                                        }
                                    </li>
                                }
                                if (Model.lineItem.PartId == 0)
                                {
                                    <li id="liChargeTo_Name">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnName").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText wthAdjst">
                                            @Html.TextBoxFor(m => m.lineItem.ChargeTo_Name, new { @class = "form-control search decimalinput readonly", autocomplete = "off", @readonly = "readonly" })

                                        </span>
                                    </li>
                                }
                            }
                            else
                            {
                                <li id="liLineNumber">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPdLineNo").FirstOrDefault().Value.ToString(): </span>
                                    <span class="inputText wthAdjst">
                                        @Html.TextBoxFor(m => m.lineItem.LineNumber, new { @class = "form-control search readonly", autocomplete = "off", @readonly = "readonly" })
                                    </span>
                                </li>
                                if (Model.lineItem.PartId != 0)
                                {
                                    <li id="liPartClientLookupId">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPartID").FirstOrDefault().Value.ToString() : <small>*</small></span>
                                        <span class="inputText wthAdjst">
                                            @Html.TextBoxFor(m => m.lineItem.PartClientLookupId, new { @class = "form-control search readonly", autocomplete = "off", @readonly = "readonly" })
                                        </span>
                                    </li>
                                }
                                <li id="liDescription">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnDescription").FirstOrDefault().Value.ToString() :<small id="rDescription" style="visibility:hidden;">*</small>  </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.Description, "", new { style = "display:none" })
                                        @Html.TextBoxFor(m => m.lineItem.Description, new { @class = "form-control search", autocomplete = "off" })
                                    </span>
                                </li>
                                <li id="liOrderQuantity">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPdQuantity").FirstOrDefault().Value.ToString() :<small id="rOrderQuantity" style="visibility:hidden;">*</small> </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.OrderQuantity, "", new { style = "display:none" })
                                        @Html.TextBoxFor(m => m.lineItem.OrderQuantity, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                    </span>
                                </li>
                                <li id="liUnitofMeasure">
                                    <span class="label">Purchase UOM :<small id="rUnitofMeasure" style="visibility:hidden;">*</small> </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.PurchaseUOM, "", new { style = "display:none" })
                                        @if (Model.lineItem.UOMConvRequired)
                                        {
                                            @Html.DropDownListFor(m => m.lineItem.PurchaseUOM, Model.lineItem.UOMList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;", id = "ddlPurchaseUOM", @disabled = "disabled" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => m.lineItem.PurchaseUOM, Model.lineItem.UOMList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;", id = "ddlPurchaseUOM" })
                                        }
                                        @Html.HiddenFor(m => m.lineItem.PurchaseUOM);
                                    </span>
                                </li>
                                <li id="liUnitCost">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnUnitCost").FirstOrDefault().Value.ToString() :<small id="rUnitCost" style="visibility:hidden;">*</small> </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.UnitCost, "", new { style = "display:none" })
                                        @Html.TextBoxFor(m => m.lineItem.UnitCost, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                    </span>
                                </li>
                                if (Model.lineItem.UOMConvRequired)
                                {
                                    <li id="liUomConvertion">
                                        <span class="label">UOM Conversion :</span>
                                        <span class="inputText wthAdjst">
                                            @Html.TextBoxFor(m => m.lineItem.UOMConversion, new { @class = "form-control search decimalinput readonly", autocomplete = "off", @readonly = "readonly" })
                                        </span>
                                    </li>
                                    <li id="liUomConvertion">
                                        <span class="label">Issue Unit :</span>
                                        <span class="inputText wthAdjst">
                                            @Html.TextBoxFor(m => m.lineItem.UnitofMeasure, new { @class = "form-control search readonly", autocomplete = "off", @readonly = "readonly" })
                                        </span>
                                    </li>
                                }


                                <li id="liTotalCost">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPdTotalCost").FirstOrDefault().Value.ToString() : </span>
                                    <span class="inputText wthAdjst">
                                        @Html.TextBoxFor(m => m.lineItem.TotalCost, new { @class = "form-control search decimalinput readonly", autocomplete = "off", @readonly = "readonly" })
                                    </span>
                                </li>
                                <li id="liAccountId">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPdAccount").FirstOrDefault().Value.ToString() :<small id="rAccountId" style="visibility:hidden;">*</small> </span>
                                    <span class="inputText wthAdjst">
                                        @Html.ValidationMessageFor(m => m.lineItem.AccountId, "", new { style = "display:none" })
                                        @Html.DropDownListFor(m => m.lineItem.AccountId, Model.lineItem.AccountList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                    </span>
                                </li>
                                if (Model.lineItem.PartId == 0)
                                {
                                    <li id="liChargeType">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnChargeType").FirstOrDefault().Value.ToString() :<small id="rChargeType" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText wthAdjst">
                                            @Html.ValidationMessageFor(m => m.lineItem.ChargeType, "", new { style = "display:none" })
                                            @Html.DropDownListFor(m => m.lineItem.ChargeType, Model.lineItem.ChargeTypeList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                        </span>
                                    </li>
                                    <li id="liChargeToClientLookupIdToShow" style="position:relative;">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "GlobalChargeTo").FirstOrDefault().Value.ToString() :<small>*</small> </span>
                                        <span class="inputText wthAdjst" style="position:relative;">
                                            <div class="dropdown dropTableOuter">
                                                <div class="input-group">
                                                    @Html.ValidationMessageFor(m => m.lineItem.ChargeToClientLookupIdToShow, "", new { style = "display:none" })
                                                    @Html.TextBoxFor(m => m.lineItem.ChargeToClientLookupIdToShow, new { @class = "form-control search dropbtn readonly", id = "txtChargeToId", autocomplete = "off", @readonly = "readonly" })
                                                    @Html.HiddenFor(m => m.lineItem.ChargeToID, new { id = "hdnChargeToId" })

                                                    <div class="input-group-btn">
                                                        <button class="btn btn-white btntxtInputGroup" type="button" id="openEditgrid">
                                                            <i id="srcicon" class="fa fa-search"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </span>
                                        @if (Model.lineItem.ChargeType.Equals("Equipment"))
                                        {
                                            @*<a href="javascript:void(0)" class="lookupTree" id="imgChargeToTreeLineItem"><img src="~/Scripts/ImageZoom/images/tree7.png" /></a>*@
                                            <i class="fa fa-tree chargeTree" id="imgChargeToTreeLineItem" style="display:block;"></i>
                                        }
                                        else
                                        {
                                            @*<a href="javascript:void(0)" class="lookupTree" style="display:none;" id="imgChargeToTreeLineItem"><img src="~/Scripts/ImageZoom/images/tree7.png" /></a>*@
                                            <i class="fa fa-tree chargeTree" style="display:none;" id="imgChargeToTreeLineItem"></i>
                                        }
                                    </li>
                                }
                                if (Model.lineItem.PartId == 0)
                                {
                                    <li id="liChargeTo_Name">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnName").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText wthAdjst">
                                            @Html.TextBoxFor(m => m.lineItem.ChargeTo_Name, new { @class = "form-control search decimalinput readonly", autocomplete = "off", @readonly = "readonly" })

                                        </span>
                                    </li>
                                }
                                if (Model.lineItem.IsShopingCart)
                                {
                                    <li id="liRequiredDate">
                                        <span class="label">Required Date : <small>*</small> </span>
                                        <span class="inputText wthAdjst">
                                            @Html.ValidationMessageFor(m => m.lineItem.RequiredDate, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.lineItem.RequiredDate, "{0:MM/dd/yyyy}", new { @class = "form-control search dtpickernextseven", autocomplete = "off" })
                                        </span>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                    <div style="clear:both;"></div>
                    <div class="idBttns">
                        <div class="bttn_pagin">
                            <div class="bttns2">
                                <button type="submit" class="btn btn-blue mobBttn"  id="btnPREditLineItemSave"><i class="fa fa-save faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                            </div>
                            <div class="bttns"><button type="button" class="btn btn-blue mobBttn" id="btnprlineitemcancel"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>
                            <div style="clear:both;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.lineItem.PurchaseRequestId)
    @Html.HiddenFor(m => m.lineItem.PurchaseRequestLineItemId)
    @Html.HiddenFor(m => m.lineItem.UpdateIndex)
    @Html.HiddenFor(m => m.lineItem.ViewName, new { id = "ViewName" })
    @Html.HiddenFor(m => m.lineItem.UnitofMeasure, new { id = "UiconfigUnitofMeasure" })
    @Html.HiddenFor(m => m.lineItem.AccountId, new { id = "UiconfigAccountId" })
    @Html.HiddenFor(m => m.lineItem.ChargeType, new { id = "UiconfigChargeType" })
    @Html.HiddenFor(m => m.lineItem.IsShopingCart, new { id = "IsShopingCart" })
    @Html.HiddenFor(m => m.lineItem.status)
    @Html.Partial("~/Views/PurchaseRequest/_AddAccountId.cshtml")
    @Html.Partial("~/Views/PurchaseRequest/_AddEquipmentId.cshtml")
    @Html.Partial("~/Views/PurchaseRequest/_AddWorkOrderId.cshtml")
}

<div id="purchaseRequestTreeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="hdrPlantLocation">@Model.Loc.Where(a => a.ResourceId == "spnGlobalEquipmentTreeLookup").FirstOrDefault().Value.ToString()</h4>
            </div>
            <div class="modal-body">
                <div class="cntTree">
                </div>
            </div>
        </div>
    </div>
</div>




@Scripts.Render("~/bundles/PREditPopUp")

