@model Client.Models.PurchaseRequest.PurchaseRequestVM
@{
    var AttachedModelName = "EditPurchaseRequest";
    var fieldName = "";
    var fieldId = "";
    var EmptyLookupList = new List<SelectListItem> { new SelectListItem { } };
    const string constVendor = "Vendor";
    object Value = null;
    string[] VendorColumns = { "vendorid" };
    const string constStoreroom = "Storeroom";
}

<div class="m-subheader">
    <div class="new-m-subheader">
        <div class="PageTitle">
            <div class="align-items-center separator">
                <h3 class="m-subheader__title ">
                    @Model.Loc.Where(a => a.ResourceId == "spnPurchaseRequest").FirstOrDefault().Value.ToString()
                </h3>
            </div>
        </div>

        <div class="NewBreadcrumbArea">
            <div class="newBreadcrumb">
                <ul>
                    <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                    <li>
                        <a href="/PurchaseRequest/Index?page=Procurement_Requests">
                            @Model.Loc.Where(a => a.ResourceId == "spnPdPurchaseRequestSearch").FirstOrDefault().Value.ToString()
                        </a>
                    </li>
                    <li><a href="javascript:void(0)" class="brdprrequest" data-val="@Model.EditPurchaseRequest.PurchaseRequestId">@Model.EditPurchaseRequest.ClientLookupId</a></li>
                    <li class="active">@Model.Loc.Where(a => a.ResourceId == "spnPdPurchaseRequestUpdate").FirstOrDefault().Value.ToString()</li>
                </ul>
                <div style="clear:both;"></div>
            </div>
        </div>
        <div style="clear:both;"></div>
    </div>
</div>

@Html.Partial("_ErrorDiv")
@if (Model.UIConfigurationDetails != null && Model.UIConfigurationDetails.Count > 0)
{
    using (Ajax.BeginForm("EditPurchaseRequestDynamic", "PurchaseRequest", new AjaxOptions { HttpMethod = "Post", OnSuccess = "PurchaseRequestEditDynamicOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-xl-12">
                <div class="row">
                    <div class="col-xl-12" id="btnnblock">
                        <div class="m-portlet" id="m_portlet" style="padding:15px;">
                            <div class="bottomBlock">
                                <div class="tabsArea nobg" id="Identifications" style="display:block;">
                                    <ul class="listView nobrd">
                                        @foreach (var data in Model.UIConfigurationDetails)
                                        {
                                            if (data.Section == true)
                                            {
                                                <li>
                                                    <span class="label"><strong>@data.SectionName</strong></span>
                                                </li>
                                                continue;
                                            }
                                            if (string.IsNullOrEmpty(data.ColumnName))
                                            {
                                                continue;
                                            }
                                            else if (!string.IsNullOrEmpty(data.ColumnName))
                                            {
                                                string colName = UtilityFunction.ReturnPropertyNameWithoutCaseComparison(data.ColumnName, Model.EditPurchaseRequest);
                                                if (string.IsNullOrEmpty(colName))
                                                {
                                                    continue;
                                                }
                                                data.ColumnName = colName;
                                            }

                                            fieldName = AttachedModelName + "." + data.ColumnName;
                                            fieldId = data.ColumnName;
                                            if (data.SystemRequired == true)
                                            {
                                                data.Required = true;
                                            }
                                            Value = Model.EditPurchaseRequest.GetType().GetProperty(data.ColumnName).GetValue(Model.EditPurchaseRequest);

                                            if (data.ColumnName.ToLower() == "CreatedBy_PersonnelId".ToLower())
                                            {
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @{
                                                            string TextBoxValue = "", TextBoxId = "";
                                                            TextBoxValue = Model.EditPurchaseRequest.GetType().GetProperty("Creator_PersonnelName").GetValue(Model.EditPurchaseRequest).ToString();
                                                            TextBoxId = fieldId + "TextBox";
                                                        }
                                                        @Html.TextBox(TextBoxId, TextBoxValue, new
                                                                       {
                                                                          @class = "form-control search dropbtn readonly",
                                                                          @readonly = "readonly",
                                                                          autocomplete = "off"
                                                                       })
                                                    </span>
                                                </li>
                                                continue;
                                            }
                                            if (data.ColumnName.ToLower() == "ApprovedBy_PersonnelId".ToLower())
                                            {
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @{
                                                            string TextBoxValue = "", TextBoxId = "";
                                                            TextBoxValue = Model.EditPurchaseRequest.GetType().GetProperty("Approved_PersonnelName").GetValue(Model.EditPurchaseRequest).ToString();
                                                            TextBoxId = fieldId + "TextBox";
                                                        }
                                                        @Html.TextBox(TextBoxId, TextBoxValue, new
                                                                       {
                                                                          @class = "form-control search dropbtn readonly",
                                                                          @readonly = "readonly",
                                                                          autocomplete = "off"
                                                                       })
                                                    </span>
                                                </li>
                                                continue;
                                            }
                                            if (data.ColumnName.ToLower() == "ProcessBy_PersonnelId".ToLower())
                                            {
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @{
                                                            string TextBoxValue = "", TextBoxId = "";
                                                            TextBoxValue = Model.EditPurchaseRequest.GetType().GetProperty("Processed_PersonnelName").GetValue(Model.EditPurchaseRequest).ToString();
                                                            TextBoxId = fieldId + "TextBox";
                                                        }
                                                        @Html.TextBox(TextBoxId, TextBoxValue, new
                                                                       {
                                                                          @class = "form-control search dropbtn readonly",
                                                                          @readonly = "readonly",
                                                                          autocomplete = "off"
                                                                       })
                                                    </span>
                                                </li>
                                                continue;
                                            }

                                            if (Value == null)
                                            {
                                                Value = "";
                                            }

                                            if (data.LookupType == DataDictionaryLookupTypeConstant.Table && data.LookupName.ToLower() == constVendor.ToLower() && data.ColumnName.ToLower() == "VendorId".ToLower())
                                            {

                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)

                                                    @{
                                                        string TextFieldName = "", TextFieldId = "", TextFieldValue = "";
                                                        bool isPunchOut = false;
                                                        int CountLineItem = 0;
                                                        TextFieldId = "VendorClientLookupId";
                                                        TextFieldName = AttachedModelName + "." + TextFieldId;
                                                        TextFieldValue = Model.EditPurchaseRequest.GetType().GetProperty(TextFieldId).GetValue(Model.EditPurchaseRequest).ToString();
                                                        isPunchOut = (bool)Model.EditPurchaseRequest.GetType().GetProperty("IsPunchOut").GetValue(Model.EditPurchaseRequest);
                                                        CountLineItem = (int)Model.EditPurchaseRequest.GetType().GetProperty("CountLineItem").GetValue(Model.EditPurchaseRequest);
                                                    }
                                                    <span class="inputText">
                                                        <div class="dropdown dropTableOuter">
                                                            <div class="input-group">
                                                                @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                                @if (Value == null)
                                                                {
                                                                    @Html.TextBox(fieldName, Value, new
                                                               {
                                                                   id = fieldId,
                                                                   @class = "form-control search dropbtn readonly",
                                                                   @readonly = "readonly",
                                                                   autocomplete = "off",
                                                                   @style = "display:block"
                                                               })

                                                                    @Html.TextBox(TextFieldName, TextFieldValue, new
                                                               {
                                                                   id = TextFieldId,
                                                                   @class = "form-control search dropbtn readonly",
                                                                   @readonly = "readonly",
                                                                   autocomplete = "off",
                                                                   @style = "display:none;"
                                                               })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBox(fieldName, Value, new
                                                               {
                                                                   id = fieldId,
                                                                   @class = "form-control search dropbtn readonly",
                                                                   @readonly = "readonly",
                                                                   autocomplete = "off",
                                                                   @style = "display:none"
                                                               })

                                                                    @Html.TextBox(TextFieldName, TextFieldValue, new
                                                               {
                                                                   id = TextFieldId,
                                                                   @class = "form-control search dropbtn readonly",
                                                                   @readonly = "readonly",
                                                                   autocomplete = "off",
                                                                   @style = "display:block;"
                                                               })
                                                                }
                                                                @if (data.ViewOnly == false)
                                                                {
                                                                    if (!(isPunchOut))// || CountLineItem > 0))
                                                                    {
                                                                        if (string.IsNullOrEmpty(TextFieldValue))
                                                                        {
                                                                            <div class="input-group-btn">
                                                                                <button class="btn btn-white btntxtInputGroup ClearVendorModalPopupGridData" type="button" data-textfield="@TextFieldId"
                                                                                        data-valuefield="@fieldId" data-namefield="VendorName" style="display:none;">
                                                                                    <i id="srcicon" class="fa fa-close"></i>
                                                                                </button>
                                                                            </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <div class="input-group-btn">
                                                                                <button class="btn btn-white btntxtInputGroup ClearVendorModalPopupGridData" type="button" data-textfield="@TextFieldId"
                                                                                        data-valuefield="@fieldId" data-namefield="VendorName">
                                                                                    <i id="srcicon" class="fa fa-close"></i>
                                                                                </button>
                                                                            </div>
                                                                        }
                                                                        <div class="input-group-btn">
                                                                            <button class="btn btn-white btntxtInputGroup OpenVendorModalPopupGrid" type="button" data-textfield="@TextFieldId" data-valuefield="@fieldId" data-namefield="VendorName" data-ispunchout="@isPunchOut">
                                                                                <i id="srcicon" class="fa fa-search"></i>
                                                                            </button>
                                                                        </div>
                                                                    }

                                                                }
                                                            </div>
                                                        </div>
                                                    </span>
                                                </li>
                                                <li>
                                                    @{
                                                        string VendorNameVal = "";
                                                        VendorNameVal = Model.EditPurchaseRequest.GetType().GetProperty("VendorName").GetValue(Model.EditPurchaseRequest).ToString();
                                                    }
                                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnWrVendorName").FirstOrDefault().Value.ToString() : </span>
                                                    <span class="inputText">
                                                        @Html.TextBox("VendorName", VendorNameVal, new { @readonly = "readonly", @class = "form-control search dropbtn readonly", autocomplete = "off" })
                                                    </span>
                                                </li>
                                            }
                                            else if (data.LookupType == DataDictionaryLookupTypeConstant.Table && data.LookupName.ToLower() == constStoreroom.ToLower() && data.ColumnName.ToLower() == "StoreroomId".ToLower() && Model.udata.DatabaseKey.Client.UseMultiStoreroom == true)
                                            {

                                                var LookUpList = Model.StoreroomList.ToList();

                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                        @if (LookUpList != null && LookUpList.Count() > 0)
                                                        {
                                                            if (data.ViewOnly == false)
                                                            {
                                                                @Html.DropDownList(fieldName, LookUpList, "--Select--", new
                                                           {
                                                               id = fieldId,
                                                               @class = "form-control search select2picker",
                                                               style = "width:100%;",
                                                               required = "required"
                                                           })

                                                            }
                                                            else
                                                            {

                                                                string StoreroomNameVal = "";
                                                                StoreroomNameVal = Model.EditPurchaseRequest.GetType().GetProperty("StoreroomName").GetValue(Model.EditPurchaseRequest).ToString();

                                                                @Html.TextBox("txtstoreroom", StoreroomNameVal, new
                                                           {
                                                               id = "txtstoreroom",
                                                               @class = "form-control search dropbtn readonly",
                                                               @readonly = "readonly",
                                                               autocomplete = "off",
                                                               @style = "display:block;"
                                                           })
                                                                @Html.Hidden(fieldName, Value, new
                                                           {
                                                               id = fieldId,
                                                               @class = "form-control search dropbtn readonly",
                                                               @readonly = "readonly",
                                                               autocomplete = "off",
                                                               @style = "display:block;"
                                                           })
                                                            }
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList(fieldName, EmptyLookupList, "--Select--", new
                                                       {
                                                           id = fieldId,
                                                           @class = "form-control search select2picker",
                                                           style = "width:100%;",
                                                           required = "required"
                                                       })
                                                        }
                                                    </span>
                                                </li>



                                            }
                                            else if (data.LookupType == DataDictionaryLookupTypeConstant.Table && data.LookupName.ToLower() == constStoreroom.ToLower() && data.ColumnName.ToLower() == "StoreroomId".ToLower() && Model.udata.DatabaseKey.Client.UseMultiStoreroom == false)
                                            {
                                                @Html.Hidden(fieldName, 0, new
                                                          {
                                                              id = fieldId,
                                                              @class = "form-control search dropbtn readonly",
                                                              @readonly = "readonly",
                                                              autocomplete = "off"
                                                          })
                                            }
                                            else if (data.LookupType.ToLower() == DataDictionaryLookupTypeConstant.LookupList.ToLower() && !string.IsNullOrEmpty(data.LookupName))
                                            {
                                                var LookUpList = Model.AllRequiredLookUplist
                                                                .Where(x => x.lookupname == data.LookupName)
                                                                .Select(x => new SelectListItem { Text = x.text, Value = x.value })
                                                                .ToList();
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                        @if (LookUpList != null && LookUpList.Count() > 0)
                                                        {
                                                            @Html.DropDownList(fieldName, LookUpList, "--Select--", new
                                                            {
                                                                id = fieldId,
                                                                @class = "form-control search select2picker",
                                                                style = "width:100%;"
                                                            })
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList(fieldName, EmptyLookupList, "--Select--", new
                                                       {
                                                           id = fieldId,
                                                           @class = "form-control search select2picker",
                                                           style = "width:100%;"
                                                       })
                                                        }
                                                    </span>
                                                </li>
                                            }
                                            else
                                            {
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                        @Html.UIConfigControl(fieldName, fieldId, data.ColumnType.ToLower(), data.MaxLength, data.ViewOnly)
                                                        @CustomHelperDynamic.GetCountMessageLabel(data.MaxLength, data.ViewOnly, Convert.ToString(Value))
                                                    </span>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </div>
                                <div style="clear:both;"></div>
                                <div class="idBttns">
                                    <div class="bttn_pagin">
                                        <div class="bttns2">
                                            <button type="submit" class="btn btn-blue mobBttn" name="Command" value="save"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                                        </div>
                                        <div class="bttns" id="btnCancelAddPRRequest"><button type="button" class="btn btn-blue mobBttn"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>

                                        <div style="clear:both;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        @Html.HiddenFor(m => m.EditPurchaseRequest.CountLineItem)
        @Html.HiddenFor(m => m.EditPurchaseRequest.IsPunchOut)
        @Html.HiddenFor(m => m.EditPurchaseRequest.PurchaseRequestId)
        @Html.HiddenFor(m => m.EditPurchaseRequest.AutoGenerated, new { id = "UiconfigAutoGenerated" })
        @Html.HiddenFor(m => m.EditPurchaseRequest.ViewName, new { id = "ViewName" })
        @Html.HiddenFor(m => m.EditPurchaseRequest.VendorId)
        @*@Html.Partial("~/Views/Shared/LookupTypeTablePopup/_VendorPopup.cshtml")*@
        @*@Html.Partial("~/Views/Shared/PurchaseRequest/LookupTypeTablePopup/_VendorPopup.cshtml")*@
        if (Model.UIConfigurationDetails.Any(x => VendorColumns.Contains(x.ColumnName.ToLower())))
        {
            @*@Html.Partial("~/Views/Shared/LookupTypeTablePopup/_VendorPopup.cshtml")*@
            @Html.Partial("~/Views/Shared/LookupTypeTablePopup/_PurchaseVendorPopup.cshtml")
        }
    }
}