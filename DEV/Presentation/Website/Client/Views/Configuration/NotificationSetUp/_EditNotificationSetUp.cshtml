@model Client.Models.Configuration.NotificationSetUp.NotificationSetUpModel
@{
    var userdata = Session["userData"];
    DataContracts.UserData userData = new DataContracts.UserData();
    userData = (DataContracts.UserData)userdata;
}
<div class="m-subheader">
    <div class="new-m-subheader">
        <div class="PageTitle">
            <div class="align-items-center separator">
                <h3 class="m-subheader__title ">
                    @Model.Loc.Where(a => a.ResourceId == "spnConfiguration").FirstOrDefault().Value.ToString()
                </h3>
            </div>
        </div>
        <div class="NewBreadcrumbArea">
            <div class="newBreadcrumb">
                <ul>
                    <li><a href="/Configuration/Dashboard">&nbsp;</a></li>
                    <li class="active"> @Model.Loc.Where(a => a.ResourceId == "spnNotificationSetup").FirstOrDefault().Value.ToString()</li>
                </ul>
                <div style="clear:both;"></div>
            </div>
        </div>
        <div style="clear:both;"></div>
    </div>
</div>
@Html.Partial("_ErrorDiv")
@using (Ajax.BeginForm("UpdateNotificationSetup", "NotificationSetUp", new AjaxOptions { HttpMethod = "Post", OnSuccess = "NotificationUpdateAddOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xl-12">
            <div class="m-portlet newPort" id="m_portlet" style="padding:15px;">
                <div class="bottomBlock">
                    <div class="tabsArea nobg">
                        <ul class="listView nobrd">
                            @if (userData.DatabaseKey.User.IsSuperUser && userData.DatabaseKey.Client.PackageLevel.ToUpper() == PackageLevelConstant.Enterprise)
                            {
                                <li>
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnSiteGlobal").FirstOrDefault().Value.ToString() <small>*</small></span>
                                    <span class="inputText">
                                        @Html.DropDownListFor(m => m.AlertSiteId, Model.AlertSetUpSiteList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                        @Html.ValidationMessageFor(m => m.AlertSiteId, "", new { style = "display:none" })
                                    </span>
                                </li>
                            }
                            <li>
                                @if (userData.DatabaseKey.User.IsSuperUser && userData.DatabaseKey.Client.PackageLevel.ToUpper() == PackageLevelConstant.Enterprise)
                                {
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnAlertNotification").FirstOrDefault().Value.ToString() <small>*</small></span>
                                }
                                else
                                {
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnAlertNotification").FirstOrDefault().Value.ToString() :</span>
                                }
                                <span class="inputText">
                                    @if (userData.DatabaseKey.User.IsSuperUser && userData.DatabaseKey.Client.PackageLevel.ToUpper() == PackageLevelConstant.Enterprise)
                                    {
                                        @Html.DropDownListFor(m => m.AlertSetupId, Model.AlertSetUpListUpList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;", disabled = "disabled" })
                                        @Html.ValidationMessageFor(m => m.AlertSetupId, "", new { style = "display:none" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(m => m.AlertSetupId, Model.AlertSetUpListUpList, new { @class = "form-control search select2picker", style = "width:100%;" })
                                    }
                                </span>
                            </li>
                            @if (userData.DatabaseKey.User.IsSuperUser && userData.DatabaseKey.Client.PackageLevel.ToUpper() == PackageLevelConstant.Enterprise)
                            {
                                <li style="height:auto;display:none;" class="alert-det">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnDescription").FirstOrDefault().Value.ToString() :</span>
                                    <span class="inputText description-span" id="DescriptionLabel" style="height:auto;">@Model.Description</span>
                                    <div style="clear:both;"></div>
                                </li>
                                <li  class="alert-det" style="display:none;">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "globalActive").FirstOrDefault().Value.ToString() : </span>
                                    <span class="inputText">
                                        @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-control m-input", @style = "color:black; width: auto; margin-top: 12px;" })
                                    </span>
                                </li>
                                <li id="EmailSendShow"  class="alert-det" style="display:none;">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnSendEmail").FirstOrDefault().Value.ToString() : </span>
                                    <span class="inputText">
                                        @Html.CheckBoxFor(m => m.IsEmailSend, new { @class = "form-control m-input", @style = "color:black; width: auto; margin-top: 12px;", @id = "IsEmailSend" })
                                    </span>
                                </li>
                            }
                            else
                            {
                                <li style="height:auto;" id="DescriptionShow">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnDescription").FirstOrDefault().Value.ToString() :</span>
                                    <span class="inputText description-span" id="DescriptionLabel" style="height:auto;">@Model.Description</span>
                                    <div style="clear:both;"></div>
                                </li>
                                <li id="IsActiveShow">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "globalActive").FirstOrDefault().Value.ToString() : </span>
                                    <span class="inputText">
                                        @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-control m-input", @style = "color:black; width: auto; margin-top: 12px;" })
                                    </span>
                                </li>
                                <li id="EmailSendShow" style="display:none;">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnSendEmail").FirstOrDefault().Value.ToString() : </span>
                                    <span class="inputText">
                                        @Html.CheckBoxFor(m => m.IsEmailSend, new { @class = "form-control m-input", @style = "color:black; width: auto; margin-top: 12px;", @id = "IsEmailSend" })
                                    </span>
                                </li>
                            }

                        </ul>
                        <div style="clear:both;"></div>
                        <div class="bttn_pagin">
                            <div class="bttns2"><button class="btn btn-blue mobBttn" id="btnselectreceipt"><i class="fa fa-save faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button></div>
                            <div style="clear:both;"></div>
                        </div>
                        <div id="tblcontainer" style="display:none;">
                            <div class="table-responsive" style="margin-top:15px;">
                                <table id="tblTargetListGrid" class="eqpDtlTbl row-border custom-sort" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th>@Model.Loc.Where(a => a.ResourceId == "spnPersonalClientLookupId").FirstOrDefault().Value.ToString()</th>
                                            <th>@Model.Loc.Where(a => a.ResourceId == "spnFirstName").FirstOrDefault().Value.ToString()</th>
                                            <th>@Model.Loc.Where(a => a.ResourceId == "spnLastName").FirstOrDefault().Value.ToString()</th>
                                            <th width="3%" style="text-align:center !important;">@Model.Loc.Where(a => a.ResourceId == "spnIsActive").FirstOrDefault().Value.ToString()</th>
                                            <th width="17%" style="text-align:center !important;">@Model.Loc.Where(a => a.ResourceId == "globalAction").FirstOrDefault().Value.ToString()</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div class="bttns" style="display:none" id="AddNewTarget">
                                    <button type="button" class="btn btn-blue mobBttn addTargetPage"><i class="fa fa-plus faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "spnAddTarget").FirstOrDefault().Value.ToString()</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="clear:both;"></div>
                </div>
            </div>
        </div>
    </div>
    @*@Html.HiddenFor(x => x.AlertSetupId)*@
    @Html.HiddenFor(x => x.AlertDefineId)
    @Html.HiddenFor(x => x.IsTargetListShow)
    @Html.HiddenFor(x => x.IsShowEmailSend)
    @Html.HiddenFor(x => x.IsIncludeEmailAttachedment)
    @Html.HiddenFor(x => x.PackageLevelDef)
    @Html.HiddenFor(x => x.IsSuperUser)    
}
<style type="text/css">
    .dataTables_wrapper.no-footer .dataTables_scrollBody {
        border-bottom: none !important;
    }

    table.dataTable thead .sorting {
        background-image: none !important;
    }

    table.dataTable thead .sorting_asc {
        background-image: none !important;
    }
</style>