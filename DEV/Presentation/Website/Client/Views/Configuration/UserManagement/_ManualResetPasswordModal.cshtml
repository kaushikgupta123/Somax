@model Client.Models.Configuration.UserManagement.UserManagementVM

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">@Model.Loc.Where(a => a.ResourceId == "spnResetpassword").FirstOrDefault().Value.ToString()</h4>
    </div>
    @Html.Partial("_ErrorDiv")
    @using (Ajax.BeginForm("ManualResetPassWord", "UserManagement", new AjaxOptions { HttpMethod = "Post", OnSuccess = "ManualCreateTempPasswordOnSuccess", OnBegin = "AjaxBeginFormBegin", OnFailure = "AjaxBeginFormFaillure" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group" style="margin-bottom:0;">
                        <label class="pull-left">@Model.Loc.Where(a => a.ResourceId == "UserName").FirstOrDefault().Value.ToString() :</label>
                        @Html.TextBoxFor(m => m.manualResetPasswordModel.UserName, new { autocomplete = "off", @class = "form-control search readonly", @readonly = "readonly", @id = "UserName" })
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group" style="margin-bottom:0;">
                        <label class="pull-left">@Model.Loc.Where(a => a.ResourceId == "FirstName").FirstOrDefault().Value.ToString() :</label>
                        @Html.TextBoxFor(m => m.manualResetPasswordModel.FirstName, new { autocomplete = "off", @class = "form-control search readonly", @readonly = "readonly", @id = "FirstName" })
                    </div>
                </div>
                <div class="clear"></div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group" style="margin-bottom:0;">
                        <label class="pull-left">@Model.Loc.Where(a => a.ResourceId == "MiddleName").FirstOrDefault().Value.ToString() :</label>
                        @Html.TextBoxFor(m => m.manualResetPasswordModel.MiddleName, new { autocomplete = "off", @class = "form-control search readonly", @readonly = "readonly", @id = "MiddleName" })
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group" style="margin-bottom:0;">
                        <label class="pull-left">@Model.Loc.Where(a => a.ResourceId == "LastName").FirstOrDefault().Value.ToString() :</label>
                        @Html.TextBoxFor(m => m.manualResetPasswordModel.LastName, new { autocomplete = "off", @class = "form-control search readonly", @readonly = "readonly", @id = "LastName" })
                    </div>
                </div>
                <div class="clear"></div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group" style="margin-bottom:0;">
                        <label class="pull-left">@Model.Loc.Where(a => a.ResourceId == "Password").FirstOrDefault().Value.ToString() :<small>*</small></label>
                        @Html.ValidationMessageFor(m => m.manualResetPasswordModel.Password, "", new { style = "display:none" })
                        @Html.TextBoxFor(m => m.manualResetPasswordModel.Password, new { autocomplete = "off", @class = "form-control search", type = "password", @id = "Password" })
                        @*V2-887*@
                        <a href="javascript:void(0)" class="password_eyes"><i id="UserPassEye" class="fa fa-eye-slash"></i></a>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group" style="margin-bottom:0;">
                        <label class="pull-left">@Model.Loc.Where(a => a.ResourceId == "spnconPass").FirstOrDefault().Value.ToString() :<small>*</small></label>
                        @Html.ValidationMessageFor(m => m.manualResetPasswordModel.ConfirmPassword, "", new { style = "display:none" })
                        @Html.TextBoxFor(m => m.manualResetPasswordModel.ConfirmPassword, new { autocomplete = "off", @class = "form-control search", @type = "password", @id = "ConfirmPassword" })
                        @*V2-887*@
                        <a href="javascript:void(0)" class="password_eyes"><i id="UserConfirmPassEye" class="fa fa-eye-slash"></i></a>
                    </div>
                </div>
                <div class="clear"></div>
            </div>
        </div>
        <div class="modal-footer" style="padding:15px 25px !important;">
            <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button>
            <button type="submit" class="btn btn-blue" style="float:right;" id="btnCreatePmWorkOrders1"><i class="fa fa-key faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "spnResetpassword").FirstOrDefault().Value.ToString()</button>
            <div style="clear:both;"></div>
        </div>
        @Html.HiddenFor(model => model.manualResetPasswordModel.UserInfoId, new { @id = "UserInfoId" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.ClientId, new { @id = "ClientId" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.SiteId, new { @id = "SiteId" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.PersonnelId, new { @id = "PersonnelId" })
        //--------------Password setting fields-------
        @Html.HiddenFor(model => model.manualResetPasswordModel.PWReqMinLength, new { @id = "PWReqMinLength" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.PWMinLength, new { @id = "PWMinLength" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.PWRequireNumber, new { @id = "PWRequireNumber" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.PWRequireAlpha, new { @id = "PWRequireAlpha" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.PWRequireMixedCase, new { @id = "PWRequireMixedCase" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.PWRequireSpecialChar, new { @id = "PWRequireSpecialChar" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.PWNoRepeatChar, new { @id = "PWNoRepeatChar" })
        @Html.HiddenFor(model => model.manualResetPasswordModel.PWNotEqualUserName, new { @id = "PWNotEqualUserName" })
        //---------------------------------------------

    }
    <div style="clear:both;"></div>
</div>


<style type="text/css">
    .ui-tooltip {
        z-index: 1151 !important;
    }

    .errormessage {
        margin-bottom: 1px !important;
    }

    .prnChk {
        position: relative;
        top: 3px;
    }

    .form-control.resetPass {
        border: 0;
        float: left;
        width: auto;
        padding: 2px 5px;
    }

        .form-control.resetPass:focus {
            box-shadow: none;
        }

    a.password_eyes {
        position: absolute;
        top: 42px;
        right: 17px;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        //$.validator.setDefaults({ ignore: ":hidden" });

        $.validator.setDefaults({ ignore: null });
        $.validator.unobtrusive.parse(document);
        $('input, form').blur(function () {
            $(this).valid();
        });
        //#region V2-887
        $(document).on('click', '#UserPassEye,#UserConfirmPassEye', function () {
            let EyeId = this.id;
            let PasswordId = "";
            if (EyeId =="UserPassEye")
                 PasswordId = "Password";
            else
                PasswordId ="ConfirmPassword"
            ShowHidePassword(PasswordId, EyeId);
        });
        //#endregion
    });

</script>







