@model Client.Models.FleetService.FleetServiceVM
@using (Ajax.BeginForm("SaveLaborTimer", "FleetService", new AjaxOptions { HttpMethod = "Post", OnSuccess = "LabourTimerAddOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }, new { id = "frmLabourTimerAdd" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ServiceOrderLabourTimer.ServiceOrderId)
    @Html.HiddenFor(m => m.ServiceOrderLabourTimer.ServiceOrderLineItemId)
    @Html.HiddenFor(m => m.ServiceOrderLabourTimer.TimeSpan, new { @id = "TimeSpan" })
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close clearstate btnLabourTimercancel" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">@Model.Loc.Where(a => a.ResourceId == "spnTotalTimeTracked").FirstOrDefault().Value.ToString()</h4>
        </div>
        @Html.Partial("_ErrorDiv")
        <div class="modal-body">
            <div class="form-group" style="margin-bottom:0;">
                <div class="bottomBlock">
                    <div class="tabsArea nobg">
                        <ul class="listView nobrd timerList" style="border-bottom:0;">
                            <li class="timerClass">
                                @*<span class="label"><span class="label">@Html.LabelFor(m => m.ServiceOrderLabourTimer.Hours) : <small>*</small></span></span>*@
                                <span class="inputText" id = "ShowTimer">
                                    @Html.Label("ShowTimer", "", new { @class = "", autocomplete = "off" })
                                </span>
                            </li>
                            <li class="hiddenElements">
                                <span class="label">@Html.LabelFor(m => m.ServiceOrderLabourTimer.VMRSWorkAccomplished) : <small>*</small></span>
                                <span class="inputText">
                                    @Html.ValidationMessageFor(m => m.ServiceOrderLabourTimer.VMRSWorkAccomplished, "", new { style = "display:none" })
                                    @Html.DropDownListFor(m => m.ServiceOrderLabourTimer.VMRSWorkAccomplished, Model.VMRSWorkAccomplishedList.Select(x => new SelectListItem { Text = x.Text, Value = x.Value }), "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                </span>
                            </li>
                        </ul>
                    </div>
                    <div style="clear:both;"></div>
                </div>
            </div>
        </div>

        <div class="modal-footer" style="padding:15px 25px !important;">
            <div class="idBttns">
                <div class="bttn_pagin">
                    <div class="bttns2" style="margin:0;">
                        <button type="button" class="btn btn-blue mobBttn" id="btnLabourTimerStop" style="cursor:pointer" value="save"><i class="fa fa-stop faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "globalStop").FirstOrDefault().Value.ToString()</button>
                        <button type="submit" class="btn btn-blue mobBttn hiddenElements" id="btnLabourTimerComplete" style="cursor:pointer" value="save"><i class="fa fa-save faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "GlobalComplete").FirstOrDefault().Value.ToString()</button>
                    </div>
                    <div class="bttns" style="margin:0;">
                        <button type="button" data-dismiss="modal" class="btn btn-blue mobBttn clearstate btnLabourTimercancel"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button>
                    </div>

                    <div style="clear:both;"></div>
                </div>
            </div>
        </div>
    </div>

}

<style>
    .timerClass { text-align: center; margin-bottom:10px !important; }
    .timerClass .inputText { width: 100% !important; font-size: 1.75rem; font-weight: 600; color: #575962; }
    ul.listView.timerList li {
        height: auto;
    }

        ul.listView.timerList li span.label, ul.listView.timerList li span.inputText {
            width: 100% !important;
            float: none !important;
        }

    .modal-body { overflow-y: unset !important; }
</style>