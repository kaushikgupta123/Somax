@model Client.Models.PurchaseOrder.PurchaseOrderVM

@{
    var fieldLabel = "";
    var fieldName = "";
    object Value = null;
    const string constVendor = "Vendor";
}
@foreach (var data in Model.UIConfigurationDetails)
{
    if (data.Section == true)
    {
        <li>
            <span class="label"><strong>@data.SectionName</strong></span>
        </li>
        continue;
    }
    if (string.IsNullOrEmpty(data.ColumnName))
    {
        continue;
    }
    else if (!string.IsNullOrEmpty(data.ColumnName))
    {
        string colName = UtilityFunction.ReturnPropertyNameWithoutCaseComparison(data.ColumnName, Model.ViewPurchaseOrder);
        if (string.IsNullOrEmpty(colName))
        {
            continue;
        }
        data.ColumnName = colName;
    }

    fieldLabel = data.ColumnLabel;

    #region Column Name
    fieldName = data.ColumnName;


    if (data.ColumnName.ToLower() == "Select1".ToLower())
    {
        fieldName = "Select1Name";
    }
    else if (data.ColumnName.ToLower() == "Select2".ToLower())
    {
        fieldName = "Select2Name";
    }
    else if (data.ColumnName.ToLower() == "Select3".ToLower())
    {
        fieldName = "Select3Name";
    }
    else if (data.ColumnName.ToLower() == "Select4".ToLower())
    {
        fieldName = "Select4Name";
    }

    #endregion

    #region Value
    Value = Model.ViewPurchaseOrder.GetType().GetProperty(fieldName).GetValue(Model.ViewPurchaseOrder);
    if (data.ColumnName.ToLower() == "Creator_PersonnelId".ToLower())
    {
        Value = Model.ViewPurchaseOrder.GetType().GetProperty("Creator_PersonnelName").GetValue(Model.ViewPurchaseOrder);

    }
    if (data.ColumnName.ToLower() == "Buyer_PersonnelId".ToLower())
    {
        Value = Model.ViewPurchaseOrder.GetType().GetProperty("Buyer_PersonnelName").GetValue(Model.ViewPurchaseOrder);

    }
    if (data.ColumnName.ToLower() == "CompleteBy_PersonnelId".ToLower())
    {
        Value = Model.ViewPurchaseOrder.GetType().GetProperty("Completed_PersonnelName").GetValue(Model.ViewPurchaseOrder);

    }
    if (data.ColumnName.ToLower() == "VoidBy_PersonnelId".ToLower())
    {
        Value = Model.ViewPurchaseOrder.GetType().GetProperty("VoidBy_PersonnelName").GetValue(Model.ViewPurchaseOrder);

    }
    if (data.ColumnName.ToLower() == "StoreroomId".ToLower() && Model.udata.DatabaseKey.Client.UseMultiStoreroom == true)
    {
        Value = Model.ViewPurchaseOrder.GetType().GetProperty("StoreroomName").GetValue(Model.ViewPurchaseOrder);
    }
    if (data.ColumnName.ToLower() == "StoreroomId".ToLower() && Model.udata.DatabaseKey.Client.UseMultiStoreroom == false)
    {
        continue;
    }
    if (data.ColumnName.ToLower() == "ShipTo".ToLower())
    {
        Value = Model.ViewPurchaseOrder.GetType().GetProperty("Shipto_ClientLookUpId").GetValue(Model.ViewPurchaseOrder);

    }
    if (Value == null)
    {
        Value = "";
    }

    if (data.LookupType == DataDictionaryLookupTypeConstant.Table && data.LookupName.ToLower() == constVendor.ToLower() && data.ColumnName.ToLower() == "VendorId".ToLower())
    {

        string vendorClientLookupId = "", vendorNameVal = "", TotalCostval = "", vendorNameLbl, TotalCostLbl;
        vendorClientLookupId = Model.ViewPurchaseOrder.GetType().GetProperty("VendorClientLookupId").GetValue(Model.ViewPurchaseOrder).ToString();
        vendorNameLbl = @Model.Loc.Where(a => a.ResourceId == "spnPoVendorName").FirstOrDefault().Value.ToString();
        TotalCostLbl = @Model.Loc.Where(a => a.ResourceId == "spnPoTotalCost").FirstOrDefault().Value.ToString();
        vendorNameVal = Model.ViewPurchaseOrder.GetType().GetProperty("VendorName").GetValue(Model.ViewPurchaseOrder).ToString();
        TotalCostval = Model.ViewPurchaseOrder.GetType().GetProperty("TotalCost").GetValue(Model.ViewPurchaseOrder).ToString();

        <li style="height:auto;" class="dscrbtn">
            @CustomHelperDynamic.ViewLabelAndDisplayValue(fieldLabel, vendorClientLookupId, data.ColumnType)
        </li>
        <li style="height:auto;" class="dscrbtn">
            @CustomHelperDynamic.ViewLabelAndDisplayValue(vendorNameLbl, vendorNameVal, data.ColumnType)
        </li>
        <li style="height:auto;" class="dscrbtn">
            @CustomHelperDynamic.ViewLabelAndDisplayValue(TotalCostLbl, TotalCostval, data.ColumnType)
        </li>
        continue;
    }

    #endregion

    <li style="height:auto;" class="dscrbtn">
        @CustomHelperDynamic.ViewLabelAndDisplayValue(fieldLabel, Value.ToString(), data.ColumnType)
    </li>
}



