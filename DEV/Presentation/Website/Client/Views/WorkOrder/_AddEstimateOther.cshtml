@model Client.Models.Work_Order.WorkOrderVM
<div class="m-subheader fixedDiv1">
    <div class="new-m-subheader">
        <div class="PageTitle">
            <div class="align-items-center separator">
                <h3 class="m-subheader__title ">
                    @Model.Loc.Where(a => a.ResourceId == "spnEstimatesOther").FirstOrDefault().Value.ToString()
                </h3>
            </div>
        </div>   

        <div class="filterDescription">
            <a href="javascript:void(0)" id="linkToSearch"><span id="spnlinkToSearch"></span></a>&nbsp;
            - &nbsp;<a href="javascript:void(0)" id="brdWoestimateother" data-val="@Model.estimateOtherModel.workOrderId">@Model.estimateOtherModel.ClientLookupId</a>
            -&nbsp;
            @if (Model.estimateOtherModel.EstimatedCostsId == 0)
            {
                @Model.Loc.Where(a => a.ResourceId == "spnAddOtherEntry").FirstOrDefault().Value.ToString()

            }
            else
            {
                @Model.Loc.Where(a => a.ResourceId == "spnEditOtherEntry").FirstOrDefault().Value.ToString()
            }
        </div>
        <div style="clear:both;"></div>
    </div>
</div>
<div class="pushDiv1"></div>

<div class="row fixedDiv2">
    @Html.Partial("_WorkOrderSummary", Model)
</div>
<div class="pushDiv2 WOScheduleAdjust"></div>

@Html.Partial("_ErrorDiv")

@using (Ajax.BeginForm("AddEstimatesOther", "WorkOrder", new AjaxOptions { HttpMethod = "Post", OnSuccess = "WoEstOtherAddOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xl-12">
            <div class="m-portlet newPort" id="m_portlet" style="padding:15px;">
                <div class="bottomBlock">
                    <div class="tabsArea nobg">
                        <ul class="listView nobrd">
                            <li>
                                <span class="label">@Html.LabelFor(m => m.estimateOtherModel.Source)  : <small>*</small></span>
                                <span class="inputText">
                                    @Html.ValidationMessageFor(m => m.estimateOtherModel.Source, "", new { style = "display:none" })
                                    @Html.DropDownListFor(m => m.estimateOtherModel.Source, Model.estimateOtherModel.SourceList, "--Select--", new { @class = "form-control search select2picker" })
                                </span>
                            </li>
                            @if (!Model._userdata.Site.UseVendorMaster)
                            {
                                <li>
                                    <span class="label">@Html.LabelFor(m => m.estimateOtherModel.VendorId) : </span>
                                    <span class="inputText">
                                        @*@Html.DropDownListFor(m => m.estimateOtherModel.VendorId, Model.estimateOtherModel.VendorLookUpList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })*@  @*V2-184*@
                                        <div class="dropdown dropTableOuter">
                                            <div class="input-group">
                                                @Html.TextBoxFor(m => m.estimateOtherModel.VendorClientLookupId, new { @class = "form-control search dropbtn readonly", id = "txtWoVendorId", autocomplete = "off", @readonly = "readonly" })
                                                @Html.HiddenFor(m => m.estimateOtherModel.VendorId, new { id = "hdnWoVendorId" })
                                                <div class="input-group-btn">
                                                    <button class="btn btn-white btntxtInputGroup" type="button" id="wovopengrid">
                                                        <i id="srcicon" class="fa fa-search"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </span>
                                </li>
                            }
                            <li style="height:auto;">
                                <span class="label">@Html.LabelFor(m => m.estimateOtherModel.Description) : </span>
                                <span class="inputText" style="height:auto;">
                                    @Html.TextAreaFor(m => m.estimateOtherModel.Description, new { @class = "form-control search", autocomplete = "off" })
                                </span>
                                <div style="clear:both;"></div>
                            </li>
                            <li>
                                <span class="label">@Html.LabelFor(m => m.estimateOtherModel.UnitCost) : </span>
                                <span class="inputText">
                                    @Html.ValidationMessageFor(m => m.estimateOtherModel.UnitCost, "", new { style = "display:none" })
                                    @Html.TextBoxFor(m => m.estimateOtherModel.UnitCost, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                </span>
                            </li>
                            <li>
                                <span class="label">@Html.LabelFor(m => m.estimateOtherModel.Quantity)  : </span>
                                <span class="inputText">
                                    @Html.ValidationMessageFor(m => m.estimateOtherModel.Quantity, "", new { style = "display:none" })
                                    @Html.TextBoxFor(m => m.estimateOtherModel.Quantity, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                </span>
                            </li>

                        </ul>
                    </div>
                    <div style="clear:both;"></div>

                    <div class="idBttns">
                        <div class="bttn_pagin">
                            <div class="bttns2">
                                <button type="submit" class="btn btn-blue mobBttn"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                            </div>
                            <div class="bttns">
                                <div class="bttns"><button type="button" class="btn btn-blue mobBttn" id="btnWOestothercancel"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>
                            </div>
                            <div style="clear:both;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(m => m.estimateOtherModel.workOrderId)
    @Html.HiddenFor(m => m.estimateOtherModel.EstimatedCostsId)
    @Html.HiddenFor(m => m.estimateOtherModel.UpdateIndex)
    @Html.Partial("~/Views/WorkOrder/_WoVendorPopup.cshtml")
}
<script src="~/Scripts/Pages/WorkorderNew/wo-vendor-grid-dropdown.js"></script>
@Html.Partial("_WOSummaryDescription", Model)
@Html.Partial("_CompleteModal")
@Html.Partial("_CancelModal")
@Html.Partial("_ScheduleModal")


<link href="~/Scripts/Metronic/assets/demo/default/base/style_newCustom.css" rel="stylesheet" />
<style type="text/css">
	.pushDiv2.WOScheduleAdjust { height: 161px !important; }
	.gridList:hover { background: #fff; }
	.row[class*="m-row--col-separator-"] > div:last-child { border-bottom: 0px solid #ebedf2; }
    .filterDescription {
        padding-left: 12px;
        width: auto;
        float: left;
        font-size: 1.2rem;
        color: #000;
        font-weight: 500;
        line-height: 33px;
    }
    .filterDescription a {
        color: #36a3f7;
        text-decoration: none !important;
    }
</style>