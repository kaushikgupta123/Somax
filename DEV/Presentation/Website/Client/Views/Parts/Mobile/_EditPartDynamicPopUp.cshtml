@model Client.Models.Parts.PartsVM
@{
    /**/

    var AttachedModelName = "EditPart";
    var fieldName = "";
    var fieldId = "";
    object Value = null;
    var EmptyLookupList = new List<SelectListItem> { new SelectListItem { } };
}
<link href="~/Scripts/Metronic/assets/demo/default/base/style_newCustom.css" rel="stylesheet" />
@if (Model.UIConfigurationDetails != null && Model.UIConfigurationDetails.Count > 0)
{

    using (Ajax.BeginForm("UpdatePartsDynamic", "Parts", new AjaxOptions { HttpMethod = "Post", OnSuccess = "PartsEditOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
    {
        @Html.AntiForgeryToken()
        <div class="slide-modal" id="EditPartModalDialog">
            <div class="slide-modal-head">
                <a class="slide-back-btn btnCancelEditPart"> <i class="fa fa-angle-left"></i> Back</a>
                <div class="slide-back-title">
                    @Model.Loc.Where(a => a.ResourceId == "spnEditPart").FirstOrDefault().Value.ToString()
                </div>
            </div>
            @Html.Partial("_ErrorDiv")
            <div class="slide-modal-body">
                <div mbsc-page class="demo-responsive">
                    <div style="height:100%">
                        <div mbsc-form class="mbsc-form-grid">
                            <div class="mbsc-grid">
                                <div class="mbsc-row" style="padding:10px;">
                                    @foreach (var data in Model.UIConfigurationDetails)
                                    {
                                        if (data.Section == true)
                                        {
                                            <div class="mbsc-col-12 mbsc-col-md-6 mbsc-col-lg-6">
                                                <label>
                                                    <span class="label px-4 d-flex mb-2"><strong>@data.SectionName</strong></span>
                                                </label>
                                            </div>
                                            continue;
                                        }
                                        if (string.IsNullOrEmpty(data.ColumnName))
                                        {
                                            continue;
                                        }
                                        else if (!string.IsNullOrEmpty(data.ColumnName))
                                        {
                                            if (Model.EditPart.GetType().GetProperty(data.ColumnName) == null)
                                            {
                                                continue;
                                            }
                                        }

                                        fieldName = AttachedModelName + "." + data.ColumnName;
                                        fieldId = data.ColumnName;
                                        Value = Model.EditPart.GetType().GetProperty(data.ColumnName).GetValue(Model.EditPart);

                                        if (data.SystemRequired == true)
                                        {
                                            data.Required = true;
                                        }
                                        if (data.ColumnName.ToLower() == "AccountId".ToLower())
                                        {
                                            <div class="mbsc-col-12 mbsc-col-md-6 mbsc-col-lg-6">
                                                <label>
                                                    @if (data.ViewOnly == true)
                                                    {
                                                        string TextBoxValue = "", TextBoxId = "";
                                                        if (Model.AccountList.Any(x => x.Value == Value.ToString()))
                                                        {
                                                            TextBoxValue = Model.AccountList
                                                                        .Where(x => x.Value == Value.ToString())
                                                                        .FirstOrDefault()
                                                                        .Text;
                                                        }
                                                        TextBoxId = fieldId + "TextBox";
                                                        @Html.TextBox(TextBoxId, TextBoxValue, new
                                                   {
                                                       id = fieldId,
                                                       @class = "form-control search dropbtn readonly",
                                                       @readonly = "readonly",
                                                       autocomplete = "off",
                                                       @mbsc_input = "true",
                                                       @data_input_style = "box",
                                                       @data_label_style = "floating",
                                                       @placeholder = data.ColumnLabel
                                                   })
                                                        @Html.Hidden(fieldName, Value, new { @id = fieldId })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownList(fieldName, Model.AccountList, "--Select--", new
                                                   {
                                                       id = fieldId,
                                                       @class = "form-control search mobiscrollselect",
                                                       style = "width:100%;",
                                                       @mbsc_dropdown = "true",
                                                       @data_label = data.ColumnLabel,
                                                       @data_input_style = "box",
                                                       @data_label_style = "floating",
                                                       @placeholder = data.ColumnLabel
                                                   })
                                                    }

                                                </label>
                                                @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                            </div>
                                        }
                                        else if (data.LookupType.ToLower() == DataDictionaryLookupTypeConstant.LookupList.ToLower() &&
                                        !string.IsNullOrEmpty(data.LookupName))
                                        {
                                            var LookUpList = Model.AllRequiredLookUplist
                                                            .Where(x => x.lookupname == data.LookupName)
                                                            .Select(x => new SelectListItem { Text = x.text, Value = x.value })
                                                            .ToList();
                                            <div class="mbsc-col-12 mbsc-col-md-6 mbsc-col-lg-6">
                                                <label>
                                                    @if (LookUpList != null && LookUpList.Count() > 0)
                                                    {
                                                        if (data.ViewOnly == true)
                                                        {
                                                            string TextBoxValue = "", TextBoxId = "";
                                                            if (Model.AllRequiredLookUplist.Any(x => x.lookupname == data.LookupName && x.value == Value.ToString()))
                                                            {
                                                                TextBoxValue = Model.AllRequiredLookUplist
                                                                            .Where(x => x.lookupname == data.LookupName && x.value == Value.ToString())
                                                                            .FirstOrDefault()
                                                                            .text;
                                                            }
                                                            TextBoxId = fieldId + "TextBox";
                                                            @Html.TextBox(TextBoxId, TextBoxValue, new
                                                       {
                                                           id = fieldId,
                                                           @class = "form-control search dropbtn readonly",
                                                           @readonly = "readonly",
                                                           autocomplete = "off",
                                                           @mbsc_input = "true",
                                                           @data_input_style = "box",
                                                           @data_label_style = "floating",
                                                           @placeholder = data.ColumnLabel
                                                       })
                                                            @Html.Hidden(fieldName, Value, new { @id = fieldId })
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList(fieldName, LookUpList, "--Select--", new
                                                       {
                                                           id = fieldId,
                                                           @class = "form-control search mobiscrollselect",
                                                           style = "width:100%;",
                                                           @mbsc_dropdown = "true",
                                                           @data_label = data.ColumnLabel,
                                                           @data_input_style = "box",
                                                           @data_label_style = "floating",
                                                           @placeholder = data.ColumnLabel
                                                       })
                                                        }

                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownList(fieldName, EmptyLookupList, "--Select--", new
                                                   {
                                                       id = fieldId,
                                                       @class = "form-control search mobiscrollselect",
                                                       style = "width:100%;",
                                                       @mbsc_dropdown = "true",
                                                       @data_label = data.ColumnLabel,
                                                       @data_input_style = "box",
                                                       @data_label_style = "floating",
                                                       @placeholder = data.ColumnLabel
                                                   })
                                                    }
                                                </label>
                                                @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                            </div>
                                        }
                                        if (data.ColumnName == "Description")
                                        {
                                            int TextLength = 0;
                                            <div class="mbsc-col-12 mbsc-col-md-6 mbsc-col-lg-6">

                                                <label id="label-wrap">
                                                    @data.ColumnLabel :

                                                    @Html.TextArea(fieldName, Value.ToString(), new
                                               {
                                                   id = fieldId,
                                                   @class = "form-control search multilineedit textcountmsg_mobile",
                                                   autocomplete = "off",
                                                   @data_input_style = "box",
                                                   @data_label_style = "floating",
                                                   style = "resize:none;",
                                                   @mbsc_textarea = "true",
                                                   @placeholder = data.ColumnLabel
                                               })
                                                </label>
                                                @if (!string.IsNullOrEmpty(Value.ToString()))
                                                {
                                                    TextLength = Value.ToString().Length;
                                                }
                                                <p class="label textcountlabel_mobile">Total characters count: @TextLength</p>
                                            </div>
                                            continue;
                                        }
                                        else
                                        {
                                            <div class="mbsc-col-12 mbsc-col-md-6 mbsc-col-lg-6">

                                                <label id="label-wrap">
                                                    @data.ColumnLabel :

                                                    @Html.UIConfigControl_Mobiscroll(fieldName, fieldId, data.ColumnType.ToLower(), data.MaxLength, data.ViewOnly, null, data.ColumnLabel)
                                                </label>
                                                @CustomHelperDynamic.GetCountMessageLabelMobile(data.MaxLength, data.ViewOnly, "")
                                                @Html.ValidationMessage(fieldName, new { })
                                            </div>
                                        }
                                    }
                                </div>
                                <div class="mbsc-row">
                                    <div class="mbsc-col-12 mbsc-col-md-6 mbsc-col-lg-6">
                                        <div class=" design-box">
                                            <div class="mbsc-button-group-block">
                                                <button mbsc-button data-color="success" type="button" class="btn btn-blue mobBttn btnCancelEditPart"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="mbsc-col-12 mbsc-col-md-6 mbsc-col-lg-6">
                                        <div class="mbsc-button-group-block">
                                            <div class=" design-box">
                                                <button type="submit" class="btn btn-blue mobBttn" id="btneditpart"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="slide-modal-footer"></div>
        </div>

        @Html.HiddenFor(m => m.EditPart.PartId)
        if (Model.EditPart.PartId != 0)
        {
            @Html.HiddenFor(m => m.EditPart.InactiveFlag)
        }
    }
}