@model Client.Models.ProjectCosting.ProjectCostingVM
@{
    var AttachedModelName = "EditProject";
    var fieldName = "";
    var fieldId = "";
    var EmptyLookupList = new List<SelectListItem> { new SelectListItem { } };
    object Value = null;
}
<div class="m-subheader">
    <div class="new-m-subheader">
        <div class="PageTitle">
            <div class="align-items-center separator">
                <h3 class="m-subheader__title ">
                    @Model.Loc.Where(a => a.ResourceId == "spnProject").FirstOrDefault().Value.ToString()
                </h3>
            </div>
        </div>

        <div class="NewBreadcrumbArea">
            <div class="newBreadcrumb">
                <ul>
                    <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                    <li><a href="/ProjectCosting/Index?page=ProjectCosting">@Model.Loc.Where(a => a.ResourceId == "spnProjectSearch").FirstOrDefault().Value.ToString()</a></li>
                    <li><a href="javascript:void(0)" id="brdProjectCosting" data-val="@Model.EditProject.ProjectId">@Model.EditProject.ClientLookupId</a></li>
                    <li class="active">@Model.Loc.Where(a => a.ResourceId == "spnEditProject").FirstOrDefault().Value.ToString()</li>
                </ul>
                <div style="clear:both;"></div>
            </div>
        </div>
        <div style="clear:both;"></div>
    </div>
</div>

@Html.Partial("_ErrorDiv")
@if (Model.UIConfigurationDetails != null && Model.UIConfigurationDetails.Count > 0)
{
    using (Ajax.BeginForm("EditProjectCosting", "ProjectCosting", new AjaxOptions { HttpMethod = "Post", OnSuccess = "ProjectCostingEditOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-xl-12">
                <div class="m-portlet newPort" id="m_portlet" style="padding:15px;">
                    <div class="bottomBlock">
                        <div>
                            <div class="tabsArea nobg" id="ProjectCharge" style="display:block;">
                                <ul class="listView nobrd">
                                    @foreach (var data in Model.UIConfigurationDetails)
                                    {
                                        if (data.Section == true)
                                        {
                                            <li>
                                                <span class="label"><strong>@data.SectionName</strong></span>
                                            </li>
                                            continue;
                                        }
                                        if (string.IsNullOrEmpty(data.ColumnName))
                                        {
                                            continue;
                                        }
                                        else if (!string.IsNullOrEmpty(data.ColumnName))
                                        {
                                            string colName = UtilityFunction.ReturnPropertyNameWithoutCaseComparison(data.ColumnName, Model.EditProject);
                                            if (string.IsNullOrEmpty(colName))
                                            {
                                                continue;
                                            }
                                            data.ColumnName = colName;
                                        }

                                        fieldName = AttachedModelName + "." + data.ColumnName;
                                        fieldId = data.ColumnName;
                                        Value = Model.EditProject.GetType().GetProperty(data.ColumnName).GetValue(Model.EditProject);

                                        if (data.SystemRequired == true)
                                        {
                                            data.Required = true;
                                        }
                                        if (data.ColumnName.ToLower() == "AssignedAssetGroup1".ToLower())
                                        {
                                            <li>
                                                @CustomHelperDynamic.GetLabel(@Model.AssignedGroup1Label, data.Required)
                                                <span class="inputText">
                                                    @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                    @Html.DropDownList(fieldName, Model.AssignedGroup1List, "--Select--", new
                                               {
                                                   id = fieldId,
                                                   @class = "form-control search select2picker",
                                                   style = "width:100%;"
                                               })
                                                </span>
                                            </li>
                                        }
                                        else if (data.ColumnName.ToLower() == "AssignedAssetGroup2".ToLower())
                                        {
                                            <li>
                                                @CustomHelperDynamic.GetLabel(@Model.AssignedGroup2Label, data.Required)
                                                <span class="inputText">
                                                    @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                    @Html.DropDownList(fieldName, Model.AssignedGroup2List, "--Select--", new
                                               {
                                                   id = fieldId,
                                                   @class = "form-control search select2picker",
                                                   style = "width:100%;"
                                               })
                                                </span>
                                            </li>
                                        }
                                        else if (data.ColumnName.ToLower() == "AssignedAssetGroup3".ToLower())
                                        {
                                            <li>
                                                @CustomHelperDynamic.GetLabel(@Model.AssignedGroup3Label, data.Required)
                                                <span class="inputText">
                                                    @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                    @Html.DropDownList(fieldName, Model.AssignedGroup3List, "--Select--", new
                                               {
                                                   id = fieldId,
                                                   @class = "form-control search select2picker",
                                                   style = "width:100%;"
                                               })
                                                </span>
                                            </li>
                                        }

                                        else if (data.LookupType.ToLower() == DataDictionaryLookupTypeConstant.LookupList.ToLower() &&
                                         !string.IsNullOrEmpty(data.LookupName))
                                        {
                                            var LookUpList = Model.AllRequiredLookUplist
                                                            .Where(x => x.lookupname == data.LookupName)
                                                            .Select(x => new SelectListItem { Text = x.text, Value = x.value })
                                                            .ToList();
                                            <li>
                                                @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                <span class="inputText">
                                                    @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                    @if (LookUpList != null && LookUpList.Count() > 0)
                                                    {
                                                        if (data.ViewOnly == true)
                                                        {
                                                            string TextBoxValue = "", TextBoxId = "";
                                                            if (Model.AllRequiredLookUplist.Any(x => x.lookupname == data.LookupName && x.value == Value.ToString()))
                                                            {
                                                                TextBoxValue = Model.AllRequiredLookUplist
                                                                            .Where(x => x.lookupname == data.LookupName && x.value == Value.ToString())
                                                                            .FirstOrDefault()
                                                                            .text;
                                                            }
                                                            TextBoxId = fieldId + "TextBox";
                                                            @Html.TextBox(TextBoxId, TextBoxValue, new
                                                       {
                                                           @class = "form-control search dropbtn readonly",
                                                           @readonly = "readonly",
                                                           @autocomplete = "off"
                                                       })
                                                            @Html.Hidden(fieldName, Value, new { @id = fieldId })
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList(fieldName, LookUpList, "--Select--", new
                                                       {
                                                           id = fieldId,
                                                           @class = "form-control search select2picker",
                                                           style = "width:100%;"
                                                       })
                                                        }

                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownList(fieldName, EmptyLookupList, "--Select--", new
                                                   {
                                                       id = fieldId,
                                                       @class = "form-control search select2picker",
                                                       style = "width:100%;"
                                                   })
                                                    }
                                                </span>
                                            </li>
                                        }
                                        else if (data.LookupType.ToLower() == DataDictionaryLookupTypeConstant.Table.ToLower()
&& data.ColumnName.ToLower() == "Owner_PersonnelId".ToLower())
                                        {
                                            <li>
                                                @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)

                                                <span class="inputText">
                                                    @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                    @Html.DropDownList(fieldName, Model.OwnerPersonnelList, "--Select--", new
                                                    {
                                                        id = fieldId,
                                                        @class = "form-control search select2picker",
                                                        style = "width:100%;"
                                                    })
                                                </span>
                                            </li>
                                        }
                                        else if (data.LookupType.ToLower() == DataDictionaryLookupTypeConstant.Table.ToLower()
&& data.ColumnName.ToLower() == "Coordinator_PersonnelId".ToLower())
                                        {
                                            <li>
                                                @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)

                                                <span class="inputText">
                                                    @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                    @Html.DropDownList(fieldName, Model.CoordinatorPersonnelList, "--Select--", new
                                                    {
                                                        id = fieldId,
                                                        @class = "form-control search select2picker",
                                                        style = "width:100%;"
                                                    })
                                                </span>
                                            </li>
                                        }
                                        else
                                        {
                                            <li>
                                                @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                <span class="inputText">
                                                    @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                    @Html.UIConfigControl(fieldName, fieldId, data.ColumnType.ToLower(), data.MaxLength, data.ViewOnly)
                                                    @CustomHelperDynamic.GetCountMessageLabel(data.MaxLength, data.ViewOnly, Convert.ToString(Value))
                                                </span>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                        <div style="clear:both;"></div>
                        <div class="idBttns">
                            <div class="bttn_pagin">
                                <div class="bttns2">
                                    <button type="submit" class="btn btn-blue mobBttn" name="Command" value="edit" id="btnSaveProject"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                                </div>
                                <div class="bttns"><button type="button" class="btn btn-blue mobBttn" id="btnCancelEditProject"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>
                                <div style="clear:both;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(m => m.EditProject.ProjectId)
        @Html.HiddenFor(m => m.EditProject.ClientLookupId)

    }
}

<style type="text/css">

    ul.listView.nobrd li:nth-child(2) {
        padding-bottom: 15px;
        overflow: hidden;
        height: auto !important;
    }

    @@media screen and (max-width: 480px) {
        ul.listView.nobrd li:nth-child(2) {
            padding-bottom: 0px;
            height: auto !important;
        }

            ul.listView.nobrd li span.label, ul.listView.nobrd li span.inputText, ul .listView.nobrd li:nth-child(2) span.inputText {
                height: auto !important;
            }
    }
</style>


