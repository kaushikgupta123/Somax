@model Client.Models.NewLaborScheduling.NewLaborSchedulingVM

<div id="AvailableWorkAssignModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-info">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close btnAsscancelmod" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@Model.Loc.Where(a => a.ResourceId == "spnGlobalSchedule").FirstOrDefault().Value.ToString()</h4>
            </div>
            @using (Ajax.BeginForm("AddAvailableWorkAssign", "LaborScheduling", new AjaxOptions { HttpMethod = "Post", OnSuccess = "AvailableWorkAddOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        <label for="Line" id="lblLine">@Model.Loc.Where(a => a.ResourceId == "spnGlobalAssigned").FirstOrDefault().Value.ToString():<small>*</small></label>
                        @if (Model.availableWorkAssignModel.Personnellist != null)
                        {
                            @Html.ValidationMessageFor(m => m.availableWorkAssignModel.PersonnelIds, "", new { style = "display:none" })
                            @Html.DropDownListFor(m => m.availableWorkAssignModel.PersonnelIds, Model.availableWorkAssignModel.Personnellist, new { @class = "form-control search select2picker", style = "width:100%;", id = "ddlAssUser", multiple = "multiple" })
                        }
                    </div>
                    <div class="form-group">
                        <label for="Line" id="lblLine">@Model.Loc.Where(a => a.ResourceId == "spnGlobalSchedule").FirstOrDefault().Value.ToString():<small>*</small></label>
                        @Html.ValidationMessageFor(m => m.availableWorkAssignModel.Schedulestartdate, "", new { style = "display:none" })
                        @Html.TextBoxFor(m => m.availableWorkAssignModel.Schedulestartdate, "{0:MM/dd/yyyy}", new { @class = "form-control search dtpicker", autocomplete = "off", id = "Assignstartdate" })
                    </div>
                </div>
                <div class="modal-footer" style="padding:15px 25px !important;">
                    <button type="button" class="btn btn-default mobBttn btnAsscancelmod" data-dismiss="modal"><i class="fa fa-close buttonIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button>
                    <button type="submit" class="btn btn-blue mobBttn" style="float:right;"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                    <div style="clear:both;"></div>
                </div>
                @Html.HiddenFor(x => x.availableWorkAssignModel.WorkOrderId)
                @Html.HiddenFor(x => x.availableWorkAssignModel.ScheduledDuration)
                @Html.HiddenFor(x => x.availableWorkAssignModel.WorkOrderIds)
                @Html.HiddenFor(x => x.availableWorkAssignModel.ClientLookupIds)
                @Html.HiddenFor(x => x.availableWorkAssignModel.Status)
            }
        </div>
    </div>
</div>
<style type="text/css">
    #ui-datepicker-div.ui-datepicker.ui-widget.ui-widget-content {
        z-index: 1153 !important;
        top: 235px !important;
    }
</style>
@*<script>
        $(document).ready(function () {

            $.validator.setDefaults({ ignore: null });
            $.validator.unobtrusive.parse(document);
            $('input, form').blur(function () {
                $(this).valid();
            });

        });
    </script>*@
