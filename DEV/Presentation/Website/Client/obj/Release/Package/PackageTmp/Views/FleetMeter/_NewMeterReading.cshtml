@model Client.Models.FleetMeter.FleetMeterVM
<div id="readingMeterModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        @using (Ajax.BeginForm("AddNewMeterReadings", "FleetMeter", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "FleetMeterAddOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }, new { id = "frmrecordmeterreading" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close ResetAllContent" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Model.Loc.Where(a => a.ResourceId == "spnRecordMeterReading").FirstOrDefault().Value.ToString()</h4>
                </div>
                @Html.Partial("_ErrorDiv")
                <div class="modal-body">
                    <div class="form-group" style="margin-bottom:0;">
                        <div class="bottomBlock">
                            <div class="tabsArea nobg">
                                <ul class="listView nobrd" style="border-bottom:0;">
                                    <li>
                                        <span class="label">@Html.LabelFor(m => m.fleetMeterModel.ClientLookupId) : <small>*</small></span>
                                        <span class="inputText">
                                            <div class="dropdown dropTableOuter">
                                                <div class="input-group">
                                                    @Html.ValidationMessageFor(m => m.fleetMeterModel.ClientLookupId, "", new { style = "display:none" })
                                                    @Html.TextBoxFor(m => m.fleetMeterModel.ClientLookupId, new { @class = "form-control search dropbtn readonly", autocomplete = "off", @readonly = "readonly" })
                                                    <div class="input-group-btn">
                                                        <button class="btn btn-white btntxtInputGroup" type="button" id="opengrid">
                                                            <i id="srcicon" class="fa fa-search"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </span>
                                    </li>
                                    <li id="errmsg" class="errorMsgBlk" style="display:none;">
                                        <span id="ErrorMsg"><i class="fa fa-warning"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "spnFuelTrackingErrorMsg").FirstOrDefault().Value.ToString()</span>
                                    </li>
                                    <li id="liOdometer">
                                        <span class="label">@Html.LabelFor(m => m.fleetMeterModel.Meter1CurrentReading) : <small>*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.fleetMeterModel.Meter1CurrentReading, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.fleetMeterModel.Meter1CurrentReading, new { @class = "form-control search decimalinput", autocomplete = "off", disabled = "disabled", value = "0.0" })
                                            <span id="spnMeter1dayDiff" style="color:red; position: relative;left: 200px;display:none;"></span>
                                        </span>
                                    </li>
                                    <li id="liOdometerVoid">
                                        <span class="label">@Html.LabelFor(m => m.fleetMeterModel.Meter1Void) : </span>
                                        <span class="inputText">
                                            @Html.CheckBoxFor(m => m.fleetMeterModel.Meter1Void, new { @class = "form-control m-input", @style = "color:black; width: auto; margin-top: 12px;", disabled = "disabled" })
                                        </span>
                                    </li>
                                    <li id="liHour">
                                        <span class="label">@Html.LabelFor(m => m.fleetMeterModel.Meter2CurrentReading) : <small>*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.fleetMeterModel.Meter2CurrentReading, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.fleetMeterModel.Meter2CurrentReading, new { @class = "form-control search decimalinput", autocomplete = "off", value = "0.0", disabled = "disabled" })
                                            <span id="spnMeter2dayDiff" style="color:red; position: relative;left: 200px;display:none;"></span>
                                        </span>
                                    </li>
                                    <li id="liHourVoid">
                                        <span class="label">@Html.LabelFor(m => m.fleetMeterModel.Meter2Void) : </span>
                                        <span class="inputText">
                                            @Html.CheckBoxFor(m => m.fleetMeterModel.Meter2Void, new { @class = "form-control m-input", @style = "color:black; width: auto; margin-top: 12px;", disabled = "disabled" })
                                        </span>
                                    </li>
                                    <li style="margin-bottom:0;">
                                        <span class="label">@Html.LabelFor(m => m.fleetMeterModel.CurrentReadingDate) : <small>*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.fleetMeterModel.CurrentReadingDate, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.fleetMeterModel.CurrentReadingDate, "{0:MM/dd/yyyy}", new { @class = "form-control search dtpickerNew restkey", autocomplete = "off", disabled = "disabled" })
                                            @Html.TextBoxFor(m => m.fleetMeterModel.CurrentReadingTime, new { @class = "form-control search timerId restkey", autocomplete = "off", disabled = "disabled" })
                                        </span>
                                    </li>
                                </ul>
                            </div>
                            <div style="clear:both;"></div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer" style="padding:15px 25px !important;">
                    <div class="idBttns">
                        <div class="bttn_pagin">
                            <div class="bttns2" style="margin:0;">
                                <button type="submit" class="btn btn-blue mobBttn" name="Command" style="cursor:pointer" value="save" id="btnAddMeterRecord"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "spnReccord").FirstOrDefault().Value.ToString()</button>
                            </div>
                            <div class="bttns" style="margin:0;">
                                <button type="button" class="btn btn-blue mobBttn" id="btnFleetMetercancel"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button>
                            </div>
                            <div style="clear:both;"></div>
                        </div>
                    </div>
                </div>
            </div>
            @Html.HiddenFor(m => m.fleetMeterModel.EquipmentId)
            @Html.HiddenFor(m => m.fleetMeterModel.Meter1Type)
            @Html.HiddenFor(m => m.fleetMeterModel.Meter2Type)
            @Html.HiddenFor(m => m.fleetMeterModel.Meter1CurrentReading, new { id = "FM1CurrentReading" })
            @Html.HiddenFor(m => m.fleetMeterModel.Meter2CurrentReading, new { id = "FM2CurrentReading" })
            @Html.HiddenFor(m => m.fleetMeterModel.MetersAssociated)
        }
    </div>
</div>

@Html.Partial("~/Views/FleetMeter/_FleetMeterEquipmentPopup.cshtml")

<style type="text/css">
    .dtpickerNew { /*width: 120px;*/ width:95px; float: left; }
    .timerId { /*width: 100px;*/ width:90px; float: left; }
    .ui-datepicker-trigger { float: left; margin-left: -3px; margin-right: 10px; }
    .errorMsgBlk { background-color: #d86564; font-size: 13px; color: #fff; font-weight: 400; line-height: 37px; padding: 0 10px; }
    @@media screen and (max-width: 639px) {
        .ui-datepicker-trigger { height: 34px; }
    }
</style>