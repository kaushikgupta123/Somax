@model Client.Models.Devices.DeviceVM

<link href="~/Scripts/Metronic/assets/demo/default/base/style_newCustom.css" rel="stylesheet" />
@if (Model.DeviceSensorModel.IoTDeviceId != 0)
{
    <div class="m-subheader fixedDiv1">
        <div class="new-m-subheader">
            <div class="PageTitle">
                <div class="align-items-center separator">
                    <h3 class="m-subheader__title ">
                        @Model.Loc.Where(a => a.ResourceId == "spnDevice").FirstOrDefault().Value.ToString()
                    </h3>
                </div>
            </div>

            <div class="NewBreadcrumbArea">
                <div class="newBreadcrumb">
                    <ul>
                        <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                        <li><a href="/Devices/Index?page=Monitoring_Device_Search">@Model.Loc.Where(a => a.ResourceId == "spnDeviceSearch").FirstOrDefault().Value.ToString()</a></li>
                        <li><a href="javascript:void(0)" id="brdDevice" data-val="@Model.DeviceSensorModel.IoTDeviceId">@Model.DeviceSensorModel.ClientLookupID</a></li>
                        <li>@Model.Loc.Where(a => a.ResourceId == "spnEditDevice").FirstOrDefault().Value.ToString()</li>
                    </ul>
                    <div style="clear:both;"></div>
                </div>
            </div>
            <div style="clear:both;"></div>
        </div>
    </div>
    <div class="pushDiv1"></div>
}
else
{
    <div class="m-subheader">
        <div class="new-m-subheader">
            <div class="PageTitle">
                <div class="align-items-center separator">
                    <h3 class="m-subheader__title ">
                        @Model.Loc.Where(a => a.ResourceId == "spnDevice").FirstOrDefault().Value.ToString()
                    </h3>
                </div>
            </div>

            <div class="NewBreadcrumbArea">
                <div class="newBreadcrumb">
                    <ul>
                        <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                        <li><a href="/Devices/Index?page=Monitoring_Device_Search">@Model.Loc.Where(a => a.ResourceId == "spnDeviceSearch").FirstOrDefault().Value.ToString()</a></li>
                        <li class="active">@Model.Loc.Where(a => a.ResourceId == "spnAddDevice").FirstOrDefault().Value.ToString()</li>
                    </ul>
                    <div style="clear:both;"></div>
                </div>
            </div>
            <div style="clear:both;"></div>
        </div>
    </div>
}

@Html.Partial("_ErrorDiv")

@using (Ajax.BeginForm("AddDeviceSensor", "Devices", new AjaxOptions { HttpMethod = "Post", OnSuccess = "DeviceAddOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
{
    @Html.AntiForgeryToken()
    <div class="row">

        <div class="col-xl-12">
            <div class="row">
                <div class="col-xl-12" id="btnnblock">
                    <div class="m-portlet" id="m_portlet" style="padding:15px;">
                        <div class="bottomBlock">
                            <div class="tabsArea nobg" id="Identification" style="display:block;">
                                <ul class="listView nobrd">
                                    @if (Model.DeviceSensorModel.IoTDeviceId == 0)
                                    {
                                        <li>
                                            <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnDeviceID").FirstOrDefault().Value.ToString() : <small>*</small></span>
                                            <span class="inputText">
                                                @Html.ValidationMessageFor(m => m.DeviceSensorModel.ClientLookupID, "", new { style = "display:none" })
                                                @Html.TextBoxFor(m => m.DeviceSensorModel.ClientLookupID, new { @class = "form-control search", autocomplete = "off", maxlength = 31 })
                                            </span>
                                        </li>
                                    }
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnName").FirstOrDefault().Value.ToString() : <small>*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.DeviceSensorModel.Name, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.DeviceSensorModel.Name, new { @class = "form-control search", autocomplete = "off", maxlength = 63 })
                                        </span>
                                    </li>
                                    @if (Model.DeviceSensorModel.IoTDeviceId == 0)
                                    {
                                        <li>
                                            <span class="label">@Model.Loc.Where(a => a.ResourceId == "GlobalType").FirstOrDefault().Value.ToString() : <small>*</small></span>
                                            <span class="inputText">
                                                @Html.ValidationMessageFor(m => m.DeviceSensorModel.SensorType, "", new { style = "display:none" })
                                                @Html.DropDownListFor(m => m.DeviceSensorModel.SensorType, Model.DeviceSensorModel.SensorTypeList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                            </span>
                                        </li>
                                    }
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnUnit").FirstOrDefault().Value.ToString() : <small>*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.DeviceSensorModel.SensorUnit, "", new { style = "display:none" })
                                            @Html.DropDownListFor(m => m.DeviceSensorModel.SensorUnit, Model.DeviceSensorModel.SensorUnitList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                        </span>
                                    </li>
                                    <li>
                                        @if (Model.DeviceSensorModel.IoTDeviceId != 0)
                                        {
                                            <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnAsset").FirstOrDefault().Value.ToString() : <small>*</small></span>
                                        }
                                        else
                                        {
                                            <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnAsset").FirstOrDefault().Value.ToString() : </span>
                                        }
                                        <span class="inputText">
                                            <div class="dropdown dropTableOuter">
                                                <div class="input-group">
                                                    @Html.ValidationMessageFor(m => m.DeviceSensorModel.Equipment_ClientLookupId, "", new { style = "display:none" })
                                                    @Html.TextBoxFor(m => m.DeviceSensorModel.Equipment_ClientLookupId, new
                                               {
                                                   @class = "form-control search dropbtn readonly",
                                                   @readonly = "readonly",
                                                   autocomplete = "off",
                                                   style = "display:block;"
                                               })
                                                    @Html.TextBoxFor(m => m.DeviceSensorModel.EquipmentId, new
                                                    {
                                                        @class = "form-control search dropbtn readonly",
                                                        @readonly = "readonly",
                                                        autocomplete = "off",
                                                        style = "display:none;"
                                                    })
                                                    @if (Model.DeviceSensorModel.Equipment_ClientLookupId == "" || Model.DeviceSensorModel.Equipment_ClientLookupId == null)
                                                    {
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-white btntxtInputGroup ClearAssetModalPopupGridData" type="button" data-textfield="DeviceSensorModel_Equipment_ClientLookupId"
                                                                    data-valuefield="DeviceSensorModel_EquipmentId" style="display:none;">
                                                                <i id="srcicon" class="fa fa-close"></i>
                                                            </button>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-white btntxtInputGroup ClearAssetModalPopupGridData" type="button" data-textfield="DeviceSensorModel_Equipment_ClientLookupId"
                                                                    data-valuefield="DeviceSensorModel_EquipmentId" style="display:block;">
                                                                <i id="srcicon" class="fa fa-close"></i>
                                                            </button>
                                                        </div>
                                                    }
                                                    <div class="input-group-btn">
                                                        <button class="btn btn-white btntxtInputGroup OpenAssetModalPopupGrid" type="button" data-textfield="DeviceSensorModel_Equipment_ClientLookupId"
                                                                data-valuefield="DeviceSensorModel_EquipmentId">
                                                            <i id="srcicon" class="fa fa-search"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </span>
                                    </li>
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spanWarningTriggerHigh").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.DeviceSensorModel.TriggerHigh, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.DeviceSensorModel.TriggerHigh, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spanWarningTriggerLow").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.DeviceSensorModel.TriggerLow, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.DeviceSensorModel.TriggerLow, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spanWarningProcedure").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText">
                                            <div class="dropdown dropTableOuter">
                                                <div class="input-group">
                                                    @Html.ValidationMessageFor(m => m.DeviceSensorModel.SensorAlertProcedure_ClientLookupId, "", new { style = "display:none" })
                                                    @Html.TextBoxFor(m => m.DeviceSensorModel.SensorAlertProcedure_ClientLookupId, new
                                               {
                                                   @class = "form-control search dropbtn readonly",
                                                   @readonly = "readonly",
                                                   autocomplete = "off",
                                                   style = "display:block;"
                                               })
                                                    @Html.TextBoxFor(m => m.DeviceSensorModel.SensorAlertProcedureId, new
                                               {
                                                   @class = "form-control search dropbtn readonly",
                                                   @readonly = "readonly",
                                                   autocomplete = "off",
                                                   style = "display:none;"
                                               })
                                                    @if (Model.DeviceSensorModel.SensorAlertProcedure_ClientLookupId == "" || Model.DeviceSensorModel.SensorAlertProcedure_ClientLookupId == null)
                                                    {
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-white btntxtInputGroup ClearSAProcModalPopupGridData" type="button" data-textfield="DeviceSensorModel_SensorAlertProcedure_ClientLookupId"
                                                                    data-valuefield="DeviceSensorModel_SensorAlertProcedureId" style="display:none;">
                                                                <i id="srcicon" class="fa fa-close"></i>
                                                            </button>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-white btntxtInputGroup ClearSAProcModalPopupGridData" type="button" data-textfield="DeviceSensorModel_SensorAlertProcedure_ClientLookupId"
                                                                    data-valuefield="DeviceSensorModel_SensorAlertProcedureId" style="display:block;">
                                                                <i id="srcicon" class="fa fa-close"></i>
                                                            </button>
                                                        </div>
                                                    }
                                                    <div class="input-group-btn">
                                                        <button class="btn btn-white btntxtInputGroup OpenSAPModalPopupGrid" type="button" data-textfield="DeviceSensorModel_SensorAlertProcedure_ClientLookupId"
                                                                data-valuefield="DeviceSensorModel_SensorAlertProcedureId">
                                                            <i id="srcicon" class="fa fa-search"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </span>
                                    </li>
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spanCriticalTriggerHigh").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.DeviceSensorModel.TriggerHighCrit, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.DeviceSensorModel.TriggerHighCrit, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spanCriticalTriggerLow").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.DeviceSensorModel.TriggerLowCrit, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.DeviceSensorModel.TriggerLowCrit, new { @class = "form-control search decimalinput", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spanCriticalProcedure").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText">
                                            <div class="dropdown dropTableOuter">
                                                <div class="input-group">
                                                    @Html.ValidationMessageFor(m => m.DeviceSensorModel.CriticalProcedure_ClientLookupId, "", new { style = "display:none" })
                                                    @Html.TextBoxFor(m => m.DeviceSensorModel.CriticalProcedure_ClientLookupId, new
                                               {
                                                   @class = "form-control search dropbtn readonly",
                                                   @readonly = "readonly",
                                                   autocomplete = "off",
                                                   style = "display:block;"
                                               })
                                                    @Html.TextBoxFor(m => m.DeviceSensorModel.CriticalProcedureId, new
                                               {
                                                   @class = "form-control search dropbtn readonly",
                                                   @readonly = "readonly",
                                                   autocomplete = "off",
                                                   style = "display:none;"
                                               })
                                                    @if (Model.DeviceSensorModel.CriticalProcedure_ClientLookupId == "" || Model.DeviceSensorModel.CriticalProcedure_ClientLookupId == null)
                                                    {
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-white btntxtInputGroup ClearCriticalProcedureModalPopupGridData" type="button" data-textfield="DeviceSensorModel_CriticalProcedure_ClientLookupId"
                                                                    data-valuefield="DeviceSensorModel_CriticalProcedureId" style="display:none;">
                                                                <i id="srcicon" class="fa fa-close"></i>
                                                            </button>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="input-group-btn">
                                                            <button class="btn btn-white btntxtInputGroup ClearCriticalProcedureModalPopupGridData" type="button" data-textfield="DeviceSensorModel_CriticalProcedure_ClientLookupId"
                                                                    data-valuefield="DeviceSensorModel_CriticalProcedureId" style="display:block;">
                                                                <i id="srcicon" class="fa fa-close"></i>
                                                            </button>
                                                        </div>
                                                    }
                                                    <div class="input-group-btn">
                                                        <button class="btn btn-white btntxtInputGroup OpenCriticalProcedureModalPopupGrid" type="button" data-textfield="DeviceSensorModel_CriticalProcedure_ClientLookupId"
                                                                data-valuefield="DeviceSensorModel_CriticalProcedureId">
                                                            <i id="srcicon" class="fa fa-search"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </span>
                                    </li>
                                </ul>
                            </div>

                            <div class="idBttns">
                                <div class="bttn_pagin">
                                    <div class="bttns2">

                                        @if (Model.DeviceSensorModel.IoTDeviceId == 0)
                                        {
                                            <button class="btn btn-white mobBttn" name="Command" value="saveAdd" id="btnSaveAnotherOpenDevice"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSaveAndAdd").FirstOrDefault().Value.ToString()</button>
                                        }
                                        <button class="btn btn-blue mobBttn" name="Command" value="save" id="btnSaveDevice"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                                    </div>
                                    <div class="bttns"><button type="button" class="btn btn-blue mobBttn" id="btnCancelAddDevices"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>

                                    <div style="clear:both;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.DeviceSensorModel.IoTDeviceId, new { id = "IoTDeviceId" })
    @Html.HiddenFor(m => m.DeviceSensorModel.Mode, new { id = "Mode" })
    @Html.HiddenFor(m => m.DeviceSensorModel.SensorId, new { id = "SensorId" })
}

@Html.Partial("~/Views/Devices/_SensorAlertProcedurePopupLookup.cshtml")
@Html.Partial("~/Views/Devices/_CriticalAlertProcedurePopupLookup.cshtml")
@Html.Partial("~/Views/Devices/_DeviceAssetPopUp.cshtml")