@model Client.Models.VendorsVM
@{
    string hColumnList = "";
    string reqColumnList = "";
    string disablColumnList = "";
    if (Model.hiddenColumnList != null && Model.hiddenColumnList.Count > 0)
    {
        foreach (var item in Model.hiddenColumnList)
        {
            hColumnList = hColumnList + item + ",";
        }
    }
    if (Model.requiredColumnList != null && Model.requiredColumnList.Count > 0)
    {
        foreach (var item in Model.requiredColumnList)
        {
            reqColumnList = reqColumnList + item + ",";
        }
    }
    if (Model.disabledColumnList != null && Model.disabledColumnList.Count > 0)
    {
        foreach (var item in Model.disabledColumnList)
        {
            disablColumnList = disablColumnList + item + ",";
        }
    }
}
<script type="text/javascript">
    $(function () {
        var v = "@hColumnList";
        var str = v.split(",");
        if (str != null && str != "") {
            $.each(str, function (i, jvalue) {
                var elementId = '#li' + jvalue;
                $(document).find(elementId).hide();
            });
        }
        var rq = "@reqColumnList";
        var arr = rq.split(",");
        if (arr!=null && arr!="")
        {
            $.each(arr, function (i, jvalue) {
                var reqElementId = '#r' + jvalue;
                if ($(reqElementId).length)
                {
                    $(document).find(reqElementId).css('visibility', 'visible');
                }
            });
        }
        var dq = "@disablColumnList";
        var amr = dq.split(",");
        if (amr != null && amr != "") {
            $.each(amr, function (i, jvalue) {
                var reqElementId = '#' + 'vendors_' + jvalue;
                if ($(reqElementId).length) {
                    if ($(reqElementId).prop('type') == 'text') {
                        $(document).find(reqElementId).attr('readonly', 'readonly').addClass('readonly');
                    }
                    //else if ($(reqElementId).prop('type') == 'select-one') {
                    else{
                        $(document).find(reqElementId).attr('disabled', 'disabled');
                    }
                }
            });
        }
    });
</script>
<div class="m-subheader">
    <div class="new-m-subheader">
        <div class="PageTitle">
            <div class="align-items-center separator">
                <h3 class="m-subheader__title ">
                    @Model.Loc.Where(a => a.ResourceId == "Vendor").FirstOrDefault().Value.ToString()
                </h3>
            </div>
        </div>

        <div class="NewBreadcrumbArea">
            <div class="newBreadcrumb">
                <ul>
                    <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                    <li><a href="/Vendor/Index?page=Inventory_Vendors">@Model.Loc.Where(a => a.ResourceId == "VendorSearch").FirstOrDefault().Value.ToString()</a></li>
                    <li><a href="javascript:void(0)" id="brdvendor" data-val="@Model.vendors.VendorId">@Model.vendors.ClientLookupId</a></li>
                    <li class="active">@Model.Loc.Where(a => a.ResourceId == "VendorEdit").FirstOrDefault().Value.ToString()</li>
                </ul>
                <div style="clear:both;"></div>
            </div>
        </div>
        <div style="clear:both;"></div>
    </div>
</div>

@Html.Partial("_ErrorDiv")
@using (Ajax.BeginForm("EditVendor", "Vendor", new AjaxOptions { HttpMethod = "Post", OnSuccess = "VendorEditOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xl-3">
            <div class="m-portlet">
                <div class="sideMenuArea nobg">
                    <ul class="vtabs" id="detmaintab">
                        <li id="vendordetailstabedit" class="active"><a href="#Details">@Model.Loc.Where(a => a.ResourceId == "spnDetails").FirstOrDefault().Value.ToString()</a></li>
                        <li id="vendoraddresstabedit"><a href="#Address">@Model.Loc.Where(a => a.ResourceId == "VendorAddress").FirstOrDefault().Value.ToString()</a></li>
                        @if (Model.vendors.IsSitePunchOut && Model.vendors.VendorConfigurePunchOutSecurity)
                        {
                        <li id="vendorpunchoutsetuptabedit"><a href="#PunchOutSetup">@Model.Loc.Where(a => a.ResourceId == "spnPunchOutSetUp").FirstOrDefault().Value.ToString()</a></li>
                        }
                    </ul>
                </div>
                <div class="selectTabs" id="selectTabs">
                    <select class="form-control" id="colorselector">
                        <option value="vendordetailstabedit">@Model.Loc.Where(a => a.ResourceId == "spnDetails").FirstOrDefault().Value.ToString()</option>
                        <option value="vendoraddresstabedit">@Model.Loc.Where(a => a.ResourceId == "VendorAddress").FirstOrDefault().Value.ToString()</option>
                        @if (Model.vendors.IsSitePunchOut && Model.vendors.VendorConfigurePunchOutSecurity)
                        {
                        <option value="vendorpunchoutsetuptabedit">@Model.Loc.Where(a => a.ResourceId == "spnPunchOutSetUp").FirstOrDefault().Value.ToString()</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="col-xl-9">
            <div class="row">
                <div class="col-xl-12" id="btnnblock">
                    <div class="m-portlet" id="m_portlet" style="padding:15px;">
                        <div class="bottomBlock">
                            <div class="tabsArea nobg" id="Details" style="display:block;">
                                <ul class="listView nobrd">
                                    <li>
                                        <span class="label">@Html.LabelFor(m => m.vendors.VendorId) : <small>*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.ClientLookupId, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.ClientLookupId, new { @class = "form-control search m-input readonly", @style = "color:black", autocomplete = "off", @readonly = "readonly" })
                                        </span>
                                    </li>
                                    <li>
                                        <span class="label">@Html.LabelFor(m => m.vendors.Name) : <small>*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Name, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.Name, new { @class = "form-control search m-input", @style = "color:black", autocomplete = "off" })

                                        </span>
                                    </li>
                                    <li id="liPhoneNumber">
                                        <span class="label">@Html.LabelFor(m => m.vendors.PhoneNumber) : <small id="rPhoneNumber" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.PhoneNumber, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.PhoneNumber, new { @class = "form-control search m-input", @style = "color:black", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liCustomerAccount">
                                        <span class="label">@Html.LabelFor(m => m.vendors.CustomerAccount) : <small id="rCustomerAccount" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.CustomerAccount, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.CustomerAccount, new { @class = "form-control search m-input", @style = "color:black", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liEmail">
                                        <span class="label">@Html.LabelFor(m => m.vendors.Email) : <small id="rEmail" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Email, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.Email, new { @class = "form-control search m-input", @style = "color:black", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liWebsite">
                                        <span class="label">@Html.LabelFor(m => m.vendors.Website) : <small id="rWebsite" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Website, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.Website, new { @class = "form-control search m-input", @style = "color:black", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liFOBCode">
                                        <span class="label">@Html.LabelFor(m => m.vendors.FOBCode) : <small id="rFOBCode" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.FOBCode, "", new { style = "display:none" })
                                            @Html.DropDownListFor(m => m.vendors.FOBCode, Model.vendors.LookupFOBList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;"})
                                        </span>
                                    </li>
                                    <li id="liFax">
                                        <span class="label">@Html.LabelFor(m => m.vendors.Fax) : <small id="rFax" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Fax, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.Fax, new { @class = "form-control search m-input decimalinput", @style = "color:black", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liTerms">
                                        <span class="label">@Html.LabelFor(m => m.vendors.Terms) : <small id="rTerms" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Terms, "", new { style = "display:none" })
                                            @Html.DropDownListFor(m => m.vendors.Terms, Model.vendors.LookupTermList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                        </span>
                                    </li>
                                    <li id="liType">
                                        <span class="label">@Html.LabelFor(m => m.vendors.Type) :<small id="rType" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Type, "", new { style = "display:none" })
                                            @Html.DropDownListFor(m => m.vendors.Type, Model.vendors.LookupTypeList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;"})
                                        </span>
                                    </li>
                                </ul>
                            </div>

                            <div class="tabsArea nobg" id="Address" style="display:none;">
                                <ul class="listView nobrd" style="padding-bottom:0; margin-bottom:10px;">
                                    <li id="liAddress1">
                                        <span class="label">@Html.LabelFor(m => m.vendors.Address1) :<small id="rAddress1" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Address1, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.Address1, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liAddress2">
                                        <span class="label"> <small id="rAddress2" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Address2, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.Address2, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liAddress3">
                                        <span class="label"><small id="rAddress3" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Address3, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.Address3, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>

                                    <li id="liAddressCity">
                                        <span class="label">@Html.LabelFor(m => m.vendors.AddressCity) :<small id="rAddressCity" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.AddressCity, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.AddressCity, new { @class = "form-control search", autocomplete = "off" })

                                        </span>
                                    </li>
                                    <li id="liAddressState">
                                        <span class="label">@Html.LabelFor(m => m.vendors.AddressState) :<small id="rAddressState" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.AddressState, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.AddressState, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liPostalCode">
                                        <span class="label">@Html.LabelFor(m => m.vendors.PostalCode) :<small id="rPostalCode" style="visibility:hidden;">*</small>  </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.PostalCode, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.PostalCode, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liCountry">
                                        <span class="label">@Html.LabelFor(m => m.vendors.Country) :<small id="rCountry" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.Country, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.Country, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                </ul>

                                <h3>@Model.Loc.Where(a => a.ResourceId == "VendorRemitToAddress").FirstOrDefault().Value.ToString()</h3>
                                <ul class="listView nobrd">
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "VendorUseBusiness").FirstOrDefault().Value.ToString() :</span>
                                        <span class="inputText">
                                            @Html.CheckBoxFor(m => m.vendors.RemitUseBusiness, new { id = "chkIsBusiness", @class = "form-control m-input", @style = "color:black; width: auto; margin-top: 12px;" })

                                        </span>
                                    </li>
                                    <li id="liRemitAddress1">
                                        <span class="label">@Html.LabelFor(m => m.vendors.RemitAddress1) :<small id="rRemitAddress1" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.RemitAddress1, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.RemitAddress1, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liRemitAddress2">
                                        <span class="label"><small id="rRemitAddress2" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.RemitAddress2, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.RemitAddress2, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liRemitAddress3">
                                        <span class="label"><small id="rRemitAddress3" style="visibility:hidden;">*</small>  </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.RemitAddress3, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.RemitAddress3, new { @class = "form-control search", autocomplete = "off"})
                                        </span>
                                    </li>
                                    <li id="liRemitAddressCity">
                                        <span class="label">@Html.LabelFor(m => m.vendors.RemitAddressCity) : <small id="rRemitAddressCity" style="visibility:hidden;">*</small></span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.RemitAddressCity, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.RemitAddressCity, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liRemitAddressState">
                                        <span class="label">@Html.LabelFor(m => m.vendors.RemitAddressState) :<small id="rRemitAddressState" style="visibility:hidden;">*</small>  </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.RemitAddressState, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.RemitAddressState, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liRemitPostalCode">
                                        <span class="label">@Html.LabelFor(m => m.vendors.RemitPostalCode) :<small id="rRemitPostalCode" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.RemitPostalCode, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.RemitPostalCode, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liRemitCountry">
                                        <span class="label">@Html.LabelFor(m => m.vendors.RemitCountry) :<small id="rRemitCountry" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.RemitCountry, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.RemitCountry, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                </ul>
                            </div>
                                @if (Model.vendors.IsSitePunchOut && Model.vendors.VendorConfigurePunchOutSecurity)
                                {
                            <div class="tabsArea nobg" id="PunchOutSetup" style="display:none;">
                                <ul class="listView nobrd" @*style="padding-bottom:25px; margin-bottom:10px;"*@ style="margin-bottom:10px;">
                                    <li>
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnUsePunchOut").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText">
                                            @Html.CheckBoxFor(m => m.vendors.PunchoutIndicator, new { @class = "form-control m-input", @style = "color:black; width: auto; margin-top: 12px;" })
                                        </span>
                                    </li>

                                    <li id="liVendorDomain">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnVendorToDomain").FirstOrDefault().Value.ToString() :<small id="rVendorDomain" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.VendorDomain, "", new { style = "display:none" })
                                            @Html.DropDownListFor(m => m.vendors.VendorDomain, Model.vendors.VendorDomainList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })

                                        </span>
                                    </li>
                                    <li id="liVendorIdentity">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnVendorToIdentity").FirstOrDefault().Value.ToString() :<small id="rVendorIdentity" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.VendorIdentity, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.VendorIdentity, new { @class = "form-control search", autocomplete = "off", maxlength = "31" })
                                        </span>
                                    </li>
                                    <li id="liSharedSecret">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnSharedSecret").FirstOrDefault().Value.ToString() :<small id="rSharedSecret" style="visibility:hidden;">*</small>  </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.SharedSecret, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.SharedSecret, new { @class = "form-control search", autocomplete = "off", maxlength = "15" })
                                        </span>
                                    </li>
                                    <li id="liSenderDomain">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnSenderFromDomain").FirstOrDefault().Value.ToString() :<small id="rSenderDomain" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.SenderDomain, "", new { style = "display:none" })
                                            @Html.DropDownListFor(m => m.vendors.SenderDomain, Model.vendors.SenderDomainList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })

                                        </span>
                                    </li>

                                    <li id="liSenderIdentity">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnSenderFromIdentity").FirstOrDefault().Value.ToString() :<small id="rSenderIdentity" style="visibility:hidden;">*</small> </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.SenderIdentity, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.SenderIdentity, new { @class = "form-control search", autocomplete = "off", maxlength = "31" })
                                        </span>
                                    </li>
                                    <li id="liPunchoutURL">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnPunchoutURL").FirstOrDefault().Value.ToString() :<small id="rPunchoutURL" style="visibility:hidden;">*</small>  </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.PunchoutURL, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.PunchoutURL, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li class="liAutoSendPunchOutPO">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnAutomaticallySendPunchOutPO").FirstOrDefault().Value.ToString() : </span>
                                        <span class="inputText">
                                            @Html.CheckBoxFor(m => m.vendors.AutoSendPunchOutPO, new { @class = "form-control m-input", @style = "color:black; width: auto; position:relative; top: 13px;" })
                                        </span>
                                    </li>
                                    <li id="liSendPunchoutPOURL">
                                        <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnSendPunchoutPOURL").FirstOrDefault().Value.ToString() :<small id="rSendPunchoutPOURL" style="visibility:hidden;">*</small>  </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.SendPunchoutPOURL, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.SendPunchoutPOURL, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                    </li>
                                    <li id="liSendPunchoutPOEmail" style="height:auto;">
                                        <span class="label" style="height:auto; line-height:normal;">@Model.Loc.Where(a => a.ResourceId == "spnSendPunchoutPOEmail").FirstOrDefault().Value.ToString() :<small id="rSendPunchoutPOEmail" style="visibility:hidden;">*</small>  </span>
                                        <span class="inputText">
                                            @Html.ValidationMessageFor(m => m.vendors.SendPunchoutPOEmail, "", new { style = "display:none" })
                                            @Html.TextBoxFor(m => m.vendors.SendPunchoutPOEmail, new { @class = "form-control search", autocomplete = "off" })
                                        </span>
                                        <div style="clear:both;"></div>
                                    </li>
                                </ul>                               
                            </div>
                                }
                            <div style="clear:both;"></div>
                            <div class="idBttns">
                                <div class="bttn_pagin">
                                    @if (Model.security.Vendors.Edit)
                                    {
                                        <div class="bttns2">
                                            <button id="btnvendorEdit" class="btn btn-blue mobBttn"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                                        </div>
                                    }
                                    <div class="bttns"><button type="button" class="btn btn-blue mobBttn" id="btneditcancel"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>
                                    <div style="clear:both;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.vendors.VendorId)
    @Html.HiddenFor(m => m.vendors.InactiveFlag)
    @Html.HiddenFor(m => m.vendors.IsExternal, new { id = "IsExternal" })
    @Html.HiddenFor(m => m.vendors.ViewName, new { id = "ViewName" })
    @Html.HiddenFor(m => m.vendors.FOBCode, new { id = "UiconfigFOBCode" })
    @Html.HiddenFor(m => m.vendors.Terms, new { id = "UiconfigTerms" })
    @Html.HiddenFor(m => m.vendors.Type, new { id = "UiconfigType" })
    @Html.HiddenFor(m => m.vendors.VendorConfigurePunchOutSecurity)
    @Html.HiddenFor(m => m.vendors.IsSitePunchOut)
}
<style type="text/css">
    ul.listView li.liAutoSendPunchOutPO  span.label {
        width:60%
    }
    ul.listView li.liAutoSendPunchOutPO span.inputText {
        width: 40%
    }
</style>