@model Client.Models.Dashboard.DashboardVM

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close clearstate" data-dismiss="modal">&times;</button>
        <h4 class="modal-title"> @Model.Loc.Where(a => a.ResourceId == "spnAddNewUnPlanedWorkOrder").FirstOrDefault().Value.ToString()</h4>
    </div>
    @Html.Partial("_ErrorDiv")
    <div class="modal-body">
        <div class="form-group" style="margin-bottom:0;">
            <div class="bottomBlock">
                <div class="tabsArea nobg">
                    @using (Ajax.BeginForm("AddDescribeWorkOrder", "Dashboard", new AjaxOptions { HttpMethod = "Post", OnSuccess = "WorksEmergencyOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="tabsArea nobg">
                            <ul class="listView nobrd list-module">
                                <li class="txtSrchArea txtSrch">
                                    <span class="label">@Html.LabelFor(m => m.WoEmergencyDescribeModel.Type):</span>
                                    <span class="inputText wthAdjst">
                                        @Html.DropDownListFor(m => m.WoEmergencyDescribeModel.Type, Model.WoEmergencyDescribeModel.TypeList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                    </span>
                                </li>

                                <li class="tree-option">
                                    <span class="label">@Model.Loc.Where(a => a.ResourceId == "GlobalChargeTo").FirstOrDefault().Value.ToString():<small>*</small></span>
                                    <span class="inputText wthAdjst">
                                        <div class="dropdown dropTableOuter">
                                            <div class="input-group">
                                                @Html.ValidationMessageFor(m => m.WoEmergencyDescribeModel.ChargeToClientLookupId,"", new { style = "display:none" })
                                                @Html.TextBoxFor(m => m.WoEmergencyDescribeModel.ChargeToClientLookupId, new { @class = "form-control search dropbtn readonly", id = "txtChargeTo", autocomplete = "off", @readonly = "readonly" })
                                                @Html.HiddenFor(m => m.WoEmergencyDescribeModel.ChargeTo, new { id = "hdnChargeTo" })
                                                <div class="input-group-btn">

                                                    <button class="btn btn-white btntxtInputGroup" type="button" id="opendescribewogrid">
                                                        <i id="srcicon" class="fa fa-search"></i>
                                                    </button>

                                                </div>
                                                <div class="treebox">
                                                    @if (Model._userdata.DatabaseKey.Client.AssetTree == true)
                                                    {
                                                        <i class="fa fa-tree chargeTree" id="imgChargeToTree"></i>
                                                    }
                                                </div>
                                                <div class="input-group-btn">
                                                    <button type="button" class="btn btn-blue mobBttn" onclick="QrScannerEquipment('txtChargeTo','')"><i class="fa fa-qrcode" style="margin-top:-2px;"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                    </span>
                                    
                                    
                                </li>
                                <li style="height:auto;">
                                    <span class="label">@Html.LabelFor(m => m.WoEmergencyDescribeModel.Description): <small>*</small></span>
                                    <span class="inputText wthAdjst" style="height:auto;">
                                        @Html.ValidationMessageFor(m => m.WoEmergencyDescribeModel.Description, "", new { style = "display:none" })
                                        @Html.TextAreaFor(m => m.WoEmergencyDescribeModel.Description, new { @class = "form-control search", style = "resize:none;", autocomplete = "off" })
                                    </span>
                                    <div style="clear:both;"></div>
                                </li>
                            </ul>
                        </div>
                        <div style="clear:both;"></div>
                        <div class="idBttns">
                            <div class="bttn_pagin">
                                <div class="bttns2">
                                    <button type="submit" class="btn btn-blue mobBttn" name="SaveType" value="Request_Demand"><i class="fa fa-save faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                                </div>

                                <div class="bttns"><button type="button" class="btn btn-blue mobBttn btnCancelDescribe" data-val="@Model.WoEmergencyDescribeModel.WorkOrderId"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>
                                <div style="clear:both;"></div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>

    </div>
</div>
<style type="text/css">
    .ui-tooltip {
        z-index: 1151 !important;
    }

    .errormessage {
        margin-bottom: 1px !important;
    }

    #imgChargeToTree {
        display: block !important
    }


    .list-module li{
        width:100% !important;

    }
    .list-module li .mobBttn {
        margin-top:1px !important;
    }
    .list-module li span.wthAdjst {
        width: calc(100% - 225px) !important;
    }
    .list-module .input-group {
        align-items: center !important;
    }
    .list-module .chargeTree {
        position: relative !important;
        left: auto !important;
        top: 7px !important;
        right: auto !important;
    }

    #DescribeWOPopUp .modal-body {
        overflow:hidden !important;
    }

    .list-module .treebox {
        width: 37px;
        height: 33px;
        right: auto !important;
        text-align: center;
    }

    .wthAdjst .mobBttn {
        width:48px;
        margin-bottom:0px !important;
    }

    .list-module .treebox i {
        margin-left: 8px;
    }

    ul.listView.list-module li span.label {
        width: 225px !important;
    }
    .modal-content {
        max-width: auto !important;
    }

    .modal-dialog {
        max-width: 850px !important;
    }
    @@media (max-width: 767px) {
        .tree-option .btntxtInputGroup {
            margin-top: -2px !important;
        }

        .list-module .treebox i {
            margin-left: 0px;
        }
    }
</style>