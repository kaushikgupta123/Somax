@model Client.Models.Sanitation.SanitationVM
<div class="m-subheader">
    <div class="new-m-subheader">
        <div class="PageTitle">
            <div class="align-items-center separator">
                <h3 class="m-subheader__title ">
                    @Model.Loc.Where(a => a.ResourceId == "spnSanitationJobDemand").FirstOrDefault().Value.ToString()
                </h3>
            </div>
        </div>

        <div class="NewBreadcrumbArea">
            <div class="newBreadcrumb">
                <ul>
                    @if (Model.IsJobAddFromDashboard)
                    {
                        <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                        <li><a href="/SanitationJob/Index?page=Sanitation_Jobs_Search">Sanitation Search</a></li>
                        <li class="active">@Model.Loc.Where(a => a.ResourceId == "spnAddSanitation").FirstOrDefault().Value.ToString()</li>
                    }
                    else
                    {
                        <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                        <li><a href="/SanitationJob/Index?page=Sanitation_Jobs_Search">Sanitation Search</a></li>
                        <li><a href="javascript:void(0)" id="BackToDetailsSanitation" data-val="@Model.JobDetailsModel.SanitationJobId">@Model.JobDetailsModel.ClientLookupId</a></li>
                    }
                </ul>
                <div style="clear:both;"></div>
            </div>
        </div>
        <div style="clear:both;"></div>
    </div>
</div>
@Html.Partial("_ErrorDiv")

@using (Ajax.BeginForm("AddSanitationRequestAndDemand", "SanitationJob", new AjaxOptions { HttpMethod = "Post", OnSuccess = "SanitationUpdateOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xl-12">
            <div class="m-portlet newPort" id="m_portlet" style="padding:15px;">
                <div class="bottomBlock">
                    <div class="tabsArea nobg">
                        <ul class="listView nobrd list-module rt-part n-cust-ul">
                            <li class="txtSrchArea txtSrch">
                                <span class="label">@Model.Loc.Where(a => a.ResourceId == "spnOn_DemandProcedure").FirstOrDefault().Value.ToString():<small>*</small> </span>
                                <span class="inputText wthAdjst">

                                    @Html.DropDownListFor(m => m.DemandModel.OnDemandId, Model.DemandModel.OnDemandList, "--Select--", new { @class = "form-control search select2picker", style = "width:100%;" })
                                    @Html.ValidationMessageFor(m => m.DemandModel.OnDemandId, "", new { style = "display:none" })
                                </span>
                            </li>
                            <li class="tree-option">
                                <span class="label">@Model.Loc.Where(a => a.ResourceId == "GlobalChargeTo").FirstOrDefault().Value.ToString() : <small>*</small></span>
                                <span class="inputText wthAdjst n-cust-row">

                                    <div class="dropdown dropTableOuter">
                                        <div class="input-group">
                                            <div class="ns-src-box">
                                                @Html.TextBoxFor(m => m.DemandModel.PlantLocationDescription, new { @class = "form-control search dropbtn readonly", @style = "color:black", autocomplete = "off", @readonly = "readonly" })
                                                @Html.Hidden("hdnId")
                                                @Html.ValidationMessageFor(m => m.DemandModel.PlantLocationDescription, "", new { style = "display:none" })
                                                <div class="input-group-btn">
                                                    <button class="btn btn-white btntxtInputGroup" type="button" id="openOJobAssetgrid">
                                                        <i id="srcicon" class="fa fa-search"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="treebox">
                                                @*For v2-609*@
                                                @if (Model.AssetTree == true)
                                                {
                                                    <i class="fa fa-tree chargeTree TreeAdjustNew" id="pldArray" style="display:block;"></i>
                                                }
                                            </div>
                                            </div>
                                        </div>
                                </span>
                               
                            </li>
                        </ul>
                    </div>
                    <div style="clear:both;"></div>

                    <div class="idBttns">
                        <div class="bttn_pagin">
                            <div class="bttns2">

                                <button type="submit" class="btn btn-blue mobBttn" name="SaveType" value="Job_Demand"><i class="fa fa-save faIcon"></i> &nbsp;@Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                            </div>
                            @if (Model.IsJobAddFromDashboard && !Model.IsJobAddFromIndex)
                            {
                                <div class="bttns"><button type="button" class="btn btn-blue mobBttn" id="btnCancelAddSanitationDashboard"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>
                            }
                            else if (Model.IsJobAddFromIndex)
                            {
                                <div class="bttns"><button type="button" class="btn btn-blue mobBttn" data-val="@Model.IsJobAddFromIndex" id="btnCancelAddSanitationDashboard"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>
                            }
                            else
                            {
                                <div class="bttns"><button type="button" class="btn btn-blue mobBttn" data-val="@Model.JobDetailsModel.SanitationJobId" id="btnCancelAddSanitation"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>
                            }
                            <div style="clear:both;"></div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>


    @Html.HiddenFor(m => m.TchargeType)
    @Html.HiddenFor(m => m.TplantLocationId)
    @Html.HiddenFor(m => m.TplantLocationDescription)
    @Html.HiddenFor(m => m.IsJobAddFromDashboard)
    @Html.HiddenFor(m => m.AssetTree)
    @Html.HiddenFor(m => m.DemandModel.PlantLocation, new { id = "SanitationPlantLocation" })
    @Html.Partial("~/Views/SanitationJob/_AssetGridPopup.cshtml")
}
@Html.HiddenFor(m => m.JobDetailsModel.SanitationJobId)

@Html.HiddenFor(m => m.JobDetailsModel.ClientLookupId)

<div id="sanitationTreeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="hdrPlantLocation">@Model.Loc.Where(a => a.ResourceId == "spnGlobalEquipmentTreeLookup").FirstOrDefault().Value.ToString()</h4>
            </div>
            <div class="modal-body">
                <div class="cntTree">
                </div>
            </div>
        </div>

    </div>
</div>

<style type="text/css">



    .inputText.wthAdjstNew2 {
        width: 67.5% !important;
    }

    ul.listView li input.search {
        border-radius: 0.25rem 0 0 0.25rem;
        margin-top: 2px;
    }

    .TreeAdjustNew {
        right: -2px !important;
    }
    .list-module li {
        width: 100% !important;
    }

        .list-module li .mobBttn {
            margin-top: 1px !important;
        }

        .list-module li span.wthAdjst {
            width: calc(100% - 225px) !important;
        }

    .list-module .input-group {
        align-items: center !important;
    }

    .list-module .chargeTree {
        position: relative !important;
        left: auto !important;
        top: 7px !important;
        right: auto !important;
    }

    .list-module .treebox {
        width: 37px;
        height: 33px;
        text-align:center;
    }

   /* ul.listView.list-module li span.label {
        width: 225px !important;
    }*/

    @@media(max-width: 767px) {
        .list-module .chargeTree {
            top: 0px !important;
            height: 30px;
            line-height: 30px;
        }

        .list-module .treebox {
            margin-top: 10px !important;
        }

        .ns-src-box {
            width: 100%;
            display: flex;
            align-items: center;
        }

        .ns-src-box .input-group-btn {
            width: auto !important;
        }
        .tree-option .ns-src-box .btntxtInputGroup {
            margin-top: 0px !important;
        }

    }
    @@media(min-width: 768px) {
        .ns-src-box {
            width: calc(100% - 55px);
            display: flex;
            flex-wrap: wrap;
            overflow: hidden;
        }
        
        .n-cust-row .treebox {
            margin-right: 0px !important;
            margin-left: 10px !important;
        }
    }

</style>