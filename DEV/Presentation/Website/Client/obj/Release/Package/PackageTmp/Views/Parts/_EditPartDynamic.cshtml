@model Client.Models.Parts.PartsVM
@{
    /**/

    var AttachedModelName = "EditPart";
    var fieldName = "";
    var fieldId = "";
    object Value = null;
    var EmptyLookupList = new List<SelectListItem> { new SelectListItem { } };
}
<div class="m-subheader fixedDiv1">
    <div class="new-m-subheader">
        <div class="PageTitle">
            <div class="align-items-center separator">
                <h3 class="m-subheader__title ">
                    @Model.Loc.Where(a => a.ResourceId == "spnParts").FirstOrDefault().Value.ToString()
                </h3>
            </div>
        </div>

        <div class="NewBreadcrumbArea">
            <div class="newBreadcrumb">
                <ul>
                    <li><a href="/Dashboard/Dashboard">&nbsp;</a></li>
                    <li><a href="/Parts/Index?page=Inventory_Parts">@Model.Loc.Where(a => a.ResourceId == "spnPartSearch").FirstOrDefault().Value.ToString()</a></li>
                    <li><a href="javascript:void(0)" id="brdpart" data-val="@Model.EditPart.PartId">@Model.EditPart.ClientLookupId</a></li>
                    <li>@Model.Loc.Where(a => a.ResourceId == "spnEditPart").FirstOrDefault().Value.ToString()</li>
                </ul>
                <div style="clear:both;"></div>
            </div>
        </div>
        <div style="clear:both;"></div>
    </div>
</div>
<div class="pushDiv1"></div>
@Html.Partial("_ErrorDiv")

<div class="row fixedDiv2">
    @Html.Partial("_PartSummary", Model)
</div>
<div class="pushDiv2 partsAdjust"></div>
@if (Model.UIConfigurationDetails != null && Model.UIConfigurationDetails.Count > 0)
{
    using (Ajax.BeginForm("UpdatePartsDynamic", "Parts", new AjaxOptions { HttpMethod = "Post", OnSuccess = "PartsEditOnSuccess", OnBegin = "AjaxBeginFormBegin", OnComplete = "AjaxBeginFormComplete", OnFailure = "AjaxBeginFormFaillure" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">

            <div class="col-xl-12">
                <div class="row">
                    <div class="col-xl-12" id="btnnblock">
                        <div class="m-portlet" id="m_portlet" style="padding:15px;">
                            <div class="bottomBlock">
                                <div class="tabsArea nobg" id="Identifications" style="display:block;">
                                    <ul class="listView nobrd">
                                        @foreach (var data in Model.UIConfigurationDetails)
                                        {
                                            if (data.Section == true)
                                            {
                                                <li>
                                                    <span class="label"><strong>@data.SectionName</strong></span>
                                                </li>
                                                continue;
                                            }
                                            if (string.IsNullOrEmpty(data.ColumnName))
                                            {
                                                continue;
                                            }
                                            else if (!string.IsNullOrEmpty(data.ColumnName))
                                            {
                                                if (Model.EditPart.GetType().GetProperty(data.ColumnName) == null)
                                                {
                                                    continue;
                                                }
                                            }

                                            fieldName = AttachedModelName + "." + data.ColumnName;
                                            fieldId = data.ColumnName;
                                            Value = Model.EditPart.GetType().GetProperty(data.ColumnName).GetValue(Model.EditPart);

                                            if (data.SystemRequired == true)
                                            {
                                                data.Required = true;
                                            }
                                            if (data.ColumnName.ToLower() == "AccountId".ToLower())
                                            {
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                        @if (data.ViewOnly == true)
                                                        {
                                                            string TextBoxValue = "", TextBoxId = "";
                                                            if (Model.AccountList.Any(x => x.Value == Value.ToString()))
                                                            {
                                                                TextBoxValue = Model.AccountList
                                                                            .Where(x => x.Value == Value.ToString())
                                                                            .FirstOrDefault()
                                                                            .Text;
                                                            }
                                                            TextBoxId = fieldId + "TextBox";
                                                            @Html.TextBox(TextBoxId, TextBoxValue, new
                                                            {
                                                                @class = "form-control search dropbtn readonly",
                                                                @readonly = "readonly",
                                                                @autocomplete = "off"
                                                            })
                                                            @Html.Hidden(fieldName, Value, new { @id = fieldId })
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList(fieldName, Model.AccountList, "--Select--", new
                                                            {
                                                                id = fieldId,
                                                                @class = "form-control search select2picker",
                                                                style = "width:100%;"
                                                            })
                                                        }

                                                    </span>
                                                </li>
                                            }
                                            else if (data.LookupType.ToLower() == DataDictionaryLookupTypeConstant.LookupList.ToLower() &&
                                            !string.IsNullOrEmpty(data.LookupName))
                                            {
                                                var LookUpList = Model.AllRequiredLookUplist
                                                                .Where(x => x.lookupname == data.LookupName)
                                                                .Select(x => new SelectListItem { Text = x.text, Value = x.value })
                                                                .ToList();
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                        @if (LookUpList != null && LookUpList.Count() > 0)
                                                        {
                                                            if (data.ViewOnly == true)
                                                            {
                                                                string TextBoxValue = "", TextBoxId = "";
                                                                if (Model.AllRequiredLookUplist.Any(x => x.lookupname == data.LookupName && x.value == Value.ToString()))
                                                                {
                                                                    TextBoxValue = Model.AllRequiredLookUplist
                                                                                .Where(x => x.lookupname == data.LookupName && x.value == Value.ToString())
                                                                                .FirstOrDefault()
                                                                                .text;
                                                                }
                                                                TextBoxId = fieldId + "TextBox";
                                                                @Html.TextBox(TextBoxId, TextBoxValue, new
                                                                {
                                                                    @class = "form-control search dropbtn readonly",
                                                                    @readonly = "readonly",
                                                                    @autocomplete = "off"
                                                                })
                                                                @Html.Hidden(fieldName, Value, new { @id = fieldId })
                                                            }
                                                            else
                                                            {
                                                                @Html.DropDownList(fieldName, LookUpList, "--Select--", new
                                                                {
                                                                    id = fieldId,
                                                                    @class = "form-control search select2picker",
                                                                    style = "width:100%;"
                                                                })
                                                            }

                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList(fieldName, EmptyLookupList, "--Select--", new
                                                            {
                                                                id = fieldId,
                                                                @class = "form-control search select2picker",
                                                                style = "width:100%;"
                                                            })
                                                        }
                                                    </span>
                                                </li>
                                            }

                                            else if (data.ColumnName == "Description")
                                            {
                                                string TextFieldName = "", TextFieldId = "", TextFieldValue = "";
                                                TextFieldId = fieldId;
                                                TextFieldName = fieldName;
                                                TextFieldValue = Model.EditPart.GetType().GetProperty(TextFieldId).GetValue(Model.EditPart).ToString();
                                                int TextLength = 0;
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                        @Html.TextArea(fieldName, Value.ToString(), new
                                                                           {
                                                                              id = fieldId,
                                                                              @class = "form-control search multilineedit textcountmsg",
                                                                              autocomplete = "off"
                                                                           })
                                                        @if (!string.IsNullOrEmpty(TextFieldValue))
                                                        {
                                                            TextLength = TextFieldValue.Length;
                                                        }
                                                        <p class="label textcountlabel">Total characters count: @TextLength</p>
                                                    </span>
                                                </li>
                                                continue;
                                            }
                                            else
                                            {
                                                <li>
                                                    @CustomHelperDynamic.GetLabel(data.ColumnLabel, data.Required)
                                                    <span class="inputText">
                                                        @Html.ValidationMessage(fieldName, new { style = "display:none" })
                                                        @Html.UIConfigControl(fieldName, fieldId, data.ColumnType.ToLower(), data.MaxLength, data.ViewOnly)
                                                        @CustomHelperDynamic.GetCountMessageLabel(data.MaxLength, data.ViewOnly, Convert.ToString(Value))
                                                    </span>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </div>

                                <div style="clear:both;"></div>

                                <div class="idBttns">
                                    <div class="bttn_pagin">
                                        <div class="bttns2">
                                            <button type="submit" class="btn btn-blue mobBttn" id="btneditpart"><i class="fa fa-save faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalSave").FirstOrDefault().Value.ToString()</button>
                                        </div>
                                        <div class="bttns"><button type="button" class="btn btn-blue mobBttn" id="btnCancelAddPart"><i class="fa fa-close faIcon"></i> &nbsp; @Model.Loc.Where(a => a.ResourceId == "globalCancel").FirstOrDefault().Value.ToString()</button></div>

                                        <div style="clear:both;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(m => m.EditPart.PartId)
        if (Model.EditPart.PartId != 0)
        {
            @Html.HiddenFor(m => m.EditPart.InactiveFlag)
        }
    }
}
@Html.Partial("_PartSummaryDescription")